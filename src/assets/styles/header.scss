.header {
  border: 1px solid;
}

body {
  color: yellow;
  z-index: 33;
}
/* ----------- ШРИФТЫ -----------*/
/* ----------- ЦВЕТА -----------*/
/* ----------- РАЗРЕШЕНИЯ ЭКРАНА -----------*/
/* ----------- PADDINGS/MARGINS -----------*/
.header-1kya {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  align-items: center;
  padding-left: 20px;
  padding-right: 20px;
}

.header-1kya::before {
  content: 'React Project';
  display: block;
  font-size: 1.5rem;
  line-height: 1.29;
  font-weight: 700;
  color: #000;
  margin-right: auto;
}

.header-nav-2zFT {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  align-items: center;
  background-color: #fff;
}

.header-nav-link-3KP1 {
  font-size: 0.8125rem;
  font-weight: 700;
  line-height: 1.38;
  letter-spacing: .05em;
  text-transform: uppercase;
  color: rgba(79, 79, 79, .5);
  -webkit-transition: .3s;
  transition: .3s;
  padding: 28px 0 23px;
  border-bottom: 3px solid transparent;
}

.header-nav-link-3KP1.active-3TU7 {
  color: #4f4f4f;
  border-color: #3ac162;
}

.header-nav-link-3KP1:hover {
  color: #000;
}

.header-nav-link-3KP1 + .header-nav-link-3KP1 {
  margin-left: 36px;
}

@media (min-width: 1024px) {
  .header-1kya {
    padding-left: 76px;
    padding-right: 76px;
  }

  .header-1kya::before {
    /* на отрезке [1024, 1400] равномерно увеличивать размер шрифта с 24px до 36px */
    font-size: calc(((2.25 - 1.5) * ((100vw) - 64rem) / (90 - 64)) + 1.5rem);
  }
}
/* ----------- ШРИФТЫ -----------*/
/* ----------- ЦВЕТА -----------*/
/* ----------- РАЗРЕШЕНИЯ ЭКРАНА -----------*/
/* ----------- PADDINGS/MARGINS -----------*/
.header-1kya {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  align-items: center;
  padding-left: 20px;
  padding-right: 20px;
}

.header-1kya::before {
  content: 'React Project';
  display: block;
  font-size: 1.5rem;
  line-height: 1.29;
  font-weight: 700;
  color: #000;
  margin-right: auto;
}

.header-nav-2zFT {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  align-items: center;
  background-color: #fff;
}

.header-nav-link-3KP1 {
  font-size: 0.8125rem;
  font-weight: 700;
  line-height: 1.38;
  letter-spacing: .05em;
  text-transform: uppercase;
  color: rgba(79, 79, 79, .5);
  -webkit-transition: .3s;
  transition: .3s;
  padding: 28px 0 23px;
  border-bottom: 3px solid transparent;
}

.header-nav-link-3KP1.active-3TU7 {
  color: #4f4f4f;
  border-color: #3ac162;
}

.header-nav-link-3KP1:hover {
  color: #000;
}

.header-nav-link-3KP1 + .header-nav-link-3KP1 {
  margin-left: 36px;
}

@media (min-width: 1024px) {
  .header-1kya {
    padding-left: 76px;
    padding-right: 76px;
  }

  .header-1kya::before {
    /* на отрезке [1024, 1400] равномерно увеличивать размер шрифта с 24px до 36px */
    font-size: calc(((2.25 - 1.5) * ((100vw) - 64rem) / (90 - 64)) + 1.5rem);
  }
}
/* ----------- ШРИФТЫ -----------*/
/* ----------- ЦВЕТА -----------*/
/* ----------- РАЗРЕШЕНИЯ ЭКРАНА -----------*/
/* ----------- PADDINGS/MARGINS -----------*/
.header-1kya {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  align-items: center;
  padding-left: 20px;
  padding-right: 20px;
}

.header-1kya::before {
  content: 'React Project';
  display: block;
  font-size: 1.5rem;
  line-height: 1.29;
  font-weight: 700;
  color: #000;
  margin-right: auto;
}

.header-nav-2zFT {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  align-items: center;
  background-color: #fff;
}

.header-nav-link-3KP1 {
  font-size: 0.8125rem;
  font-weight: 700;
  line-height: 1.38;
  letter-spacing: .05em;
  text-transform: uppercase;
  color: rgba(79, 79, 79, .5);
  -webkit-transition: .3s;
  transition: .3s;
  padding: 28px 0 23px;
  border-bottom: 3px solid transparent;
}

.header-nav-link-3KP1.active-3TU7 {
  color: #4f4f4f;
  border-color: #3ac162;
}

.header-nav-link-3KP1:hover {
  color: #000;
}

.header-nav-link-3KP1 + .header-nav-link-3KP1 {
  margin-left: 36px;
}

@media (min-width: 1024px) {
  .header-1kya {
    padding-left: 76px;
    padding-right: 76px;
  }

  .header-1kya::before {
    /* на отрезке [1024, 1400] равномерно увеличивать размер шрифта с 24px до 36px */
    font-size: calc(((2.25 - 1.5) * ((100vw) - 64rem) / (90 - 64)) + 1.5rem);
  }
}
/* ----------- ШРИФТЫ -----------*/
/* ----------- ЦВЕТА -----------*/
/* ----------- РАЗРЕШЕНИЯ ЭКРАНА -----------*/
/* ----------- PADDINGS/MARGINS -----------*/
.header-1kya {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  align-items: center;
  padding-left: 20px;
  padding-right: 20px;
}

.header-1kya::before {
  content: 'React Project';
  display: block;
  font-size: 1.5rem;
  line-height: 1.29;
  font-weight: 700;
  color: #000;
  margin-right: auto;
}

.header-nav-2zFT {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  align-items: center;
  background-color: #fff;
}

.header-nav-link-3KP1 {
  font-size: 0.8125rem;
  font-weight: 700;
  line-height: 1.38;
  letter-spacing: .05em;
  text-transform: uppercase;
  color: rgba(79, 79, 79, .5);
  -webkit-transition: .3s;
  transition: .3s;
  padding: 28px 0 23px;
  border-bottom: 3px solid transparent;
}

.header-nav-link-3KP1.active-3TU7 {
  color: #4f4f4f;
  border-color: #3ac162;
}

.header-nav-link-3KP1:hover {
  color: #000;
}

.header-nav-link-3KP1 + .header-nav-link-3KP1 {
  margin-left: 36px;
}

@media (min-width: 1024px) {
  .header-1kya {
    padding-left: 76px;
    padding-right: 76px;
  }

  .header-1kya::before {
    /* на отрезке [1024, 1400] равномерно увеличивать размер шрифта с 24px до 36px */
    font-size: calc(((2.25 - 1.5) * ((100vw) - 64rem) / (90 - 64)) + 1.5rem);
  }
}
/* ----------- ШРИФТЫ -----------*/
/* ----------- ЦВЕТА -----------*/
/* ----------- РАЗРЕШЕНИЯ ЭКРАНА -----------*/
/* ----------- PADDINGS/MARGINS -----------*/
.header-1kya {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  align-items: center;
  padding-left: 20px;
  padding-right: 20px;
}

.header-1kya::before {
  content: 'React Project';
  display: block;
  font-size: 1.5rem;
  line-height: 1.29;
  font-weight: 700;
  color: #000;
  margin-right: auto;
}

.header-nav-2zFT {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  align-items: center;
  background-color: #fff;
}

.header-nav-link-3KP1 {
  font-size: 0.8125rem;
  font-weight: 700;
  line-height: 1.38;
  letter-spacing: .05em;
  text-transform: uppercase;
  color: rgba(79, 79, 79, .5);
  -webkit-transition: .3s;
  transition: .3s;
  padding: 28px 0 23px;
  border-bottom: 3px solid transparent;
}

.header-nav-link-3KP1.active-3TU7 {
  color: #4f4f4f;
  border-color: #3ac162;
}

.header-nav-link-3KP1:hover {
  color: #000;
}

.header-nav-link-3KP1 + .header-nav-link-3KP1 {
  margin-left: 36px;
}

@media (min-width: 1024px) {
  .header-1kya {
    padding-left: 76px;
    padding-right: 76px;
  }

  .header-1kya::before {
    /* на отрезке [1024, 1400] равномерно увеличивать размер шрифта с 24px до 36px */
    font-size: calc(((2.25 - 1.5) * ((100vw) - 64rem) / (90 - 64)) + 1.5rem);
  }
}
/* ----------- ШРИФТЫ -----------*/
/* ----------- ЦВЕТА -----------*/
/* ----------- РАЗРЕШЕНИЯ ЭКРАНА -----------*/
/* ----------- PADDINGS/MARGINS -----------*/
.header-1kya {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  align-items: center;
  padding-left: 20px;
  padding-right: 20px;
}

.header-1kya::before {
  content: 'React Project';
  display: block;
  font-size: 1.5rem;
  line-height: 1.29;
  font-weight: 700;
  color: #000;
  margin-right: auto;
}

.header-nav-2zFT {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  align-items: center;
  background-color: #fff;
}

.header-nav-link-3KP1 {
  font-size: 0.8125rem;
  font-weight: 700;
  line-height: 1.38;
  letter-spacing: .05em;
  text-transform: uppercase;
  color: rgba(79, 79, 79, .5);
  -webkit-transition: .3s;
  transition: .3s;
  padding: 28px 0 23px;
  border-bottom: 3px solid transparent;
}

.header-nav-link-3KP1.active-3TU7 {
  color: #4f4f4f;
  border-color: #3ac162;
}

.header-nav-link-3KP1:hover {
  color: #000;
}

.header-nav-link-3KP1 + .header-nav-link-3KP1 {
  margin-left: 36px;
}

@media (min-width: 1024px) {
  .header-1kya {
    padding-left: 76px;
    padding-right: 76px;
  }

  .header-1kya::before {
    /* на отрезке [1024, 1400] равномерно увеличивать размер шрифта с 24px до 36px */
    font-size: calc(((2.25 - 1.5) * ((100vw) - 64rem) / (90 - 64)) + 1.5rem);
  }
}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9qcy9jb21wb25lbnRzL3NyYy9jc3MvdmFyaWFibGVzLnNjc3MiLCIuLi9zcmMvanMvY29tcG9uZW50cy9zcmMvanMvY29tcG9uZW50cy9oZWFkZXIvaW5kZXguc2NzcyIsIi4uL3NyYy9qcy9jb21wb25lbnRzL2hlYWRlci9pbmRleC5zY3NzIiwidG8uY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBU0Esa0JBQUE7Q0FhQTs7QUNwQkE7RUFDRSxjQUFBO0VDR0QsWUFBQTtDQUNEO0FBQ0EsbUNESnNCO0FDS3RCLGtDQUFBO0FBQ0EsOENESmdDO0FDS2hDLDZDQUFBO0FDQ0E7RURDRSxxQkRDRTtFQ0FGLGNBQUE7RUFDQSx1QkRDa0I7RUNBbEIsb0JEQ0U7RUNBRixtQkFBQTtFQUNELG9CQUFBO0NDQ0E7O0FBRUQ7RUZRQSx5QkFBQTtFQUNFLGVBQUE7RUFBQSxrQkFBYztFQUNkLGtCQUFBO0VDTkEsaUJETUE7RUFDQSxZQUFBO0VBQ0QsbUJBQUE7Q0VKQTs7QUFFRDtFRk1FLHFCQUFBO0VBQ0EsY0FBQTtFQUNBLHVCQUFBO0VBQ0Esb0JBQUE7RUNORCx1QkFBQTtDQ0dBOztBQUVEO0VGSUUscUJBQUE7RUFDQSxpQkFBQTtFQWNELGtCQUFBO0VBWkMsc0JBQUE7RUNMQSwwQkFBQTtFQUNBLDRCRE13QjtFQ0x4Qix3QkRNQztFQUVELGdCQUFBO0VDTkEscUJBQUE7RUFDRCxxQ0FBQTtDQ0lBOztBQUVEO0VESEUsZUFBQTtFRHpDQSxzQkFBQTtDRStDRDs7QUFFRDtFREpDLFlBQUE7Q0NNQTs7QUFFRDtFRExDLGtCQUFBO0NDT0E7O0FBRUQ7RUFDRTtJRE5FLG1CQUFBO0lBQ0Qsb0JBQUE7R0NRQTs7RUFFRDtJRFBFLGlGQUF3RTtJQUN6RSx5RUFBQTtHQUNGO0NBRUQ7QUFDQSxtQ0FBa0M7QUFDbEMsa0NBQUE7QUFDQSw4Q0FBNkM7QUFDN0MsNkNBQUE7QUNRQTtFRE5FLHFCQUFjO0VBQ2QsY0FBQTtFQUNBLHVCQUFvQjtFQUNwQixvQkFBbUI7RUFDbkIsbUJBQUE7RUFDRCxvQkFBQTtDQ1FBOztBQUVEO0VEUEUseUJBQWU7RUFDZixlQUFBO0VBQ0Esa0JBQWtCO0VBQ2xCLGtCQUFpQjtFQUNqQixpQkFBWTtFQUNaLFlBQUE7RUFDRCxtQkFBQTtDQ1NBOztBQUVEO0VEUkUscUJBQWM7RUFDZCxjQUFBO0VBQ0EsdUJBQW9CO0VBQ3BCLG9CQUFBO0VBQ0QsdUJBQUE7Q0NVQTs7QUFFRDtFRFRFLHFCQUFpQjtFQUNqQixpQkFBQTtFQUNBLGtCQUFBO0VBQ0Esc0JBQUE7RUFDQSwwQkFBQTtFQUNBLDRCQUF3QjtFQUN4Qix3QkFBZ0I7RUFDaEIsZ0JBQUE7RUFDQSxxQkFBQTtFQUNELHFDQUFBO0NDV0E7O0FBRUQ7RURWRSxlQUFBO0VBQ0Qsc0JBQUE7Q0NZQTs7QUFFRDtFRFhDLFlBQUE7Q0NhQTs7QUFFRDtFRFpDLGtCQUFBO0NDY0E7O0FBRUQ7RUFDRTtJRGJFLG1CQUFBO0lBQ0Qsb0JBQUE7R0NlQTs7RUFFRDtJRGRFLGlGQUF3RTtJQUN6RSx5RUFBQTtHQUNGO0NBRUQ7QUFDQSxtQ0FBa0M7QUFDbEMsa0NBQUE7QUFDQSw4Q0FBNkM7QUFDN0MsNkNBQUE7QUNlQTtFRGJFLHFCQUFjO0VBQ2QsY0FBQTtFQUNBLHVCQUFvQjtFQUNwQixvQkFBbUI7RUFDbkIsbUJBQUE7RUFDRCxvQkFBQTtDQ2VBOztBQUVEO0VEZEUseUJBQWU7RUFDZixlQUFBO0VBQ0Esa0JBQWtCO0VBQ2xCLGtCQUFpQjtFQUNqQixpQkFBWTtFQUNaLFlBQUE7RUFDRCxtQkFBQTtDQ2dCQTs7QUFFRDtFRGZFLHFCQUFjO0VBQ2QsY0FBQTtFQUNBLHVCQUFvQjtFQUNwQixvQkFBQTtFQUNELHVCQUFBO0NDaUJBOztBQUVEO0VEaEJFLHFCQUFpQjtFQUNqQixpQkFBQTtFQUNBLGtCQUFBO0VBQ0Esc0JBQUE7RUFDQSwwQkFBQTtFQUNBLDRCQUF3QjtFQUN4Qix3QkFBZ0I7RUFDaEIsZ0JBQUE7RUFDQSxxQkFBQTtFQUNELHFDQUFBO0NDa0JBOztBQUVEO0VEakJFLGVBQUE7RUFDRCxzQkFBQTtDQ21CQTs7QUFFRDtFRGxCQyxZQUFBO0NDb0JBOztBQUVEO0VEbkJDLGtCQUFBO0NDcUJBOztBQUVEO0VBQ0U7SURwQkUsbUJBQUE7SUFDRCxvQkFBQTtHQ3NCQTs7RUFFRDtJRHJCRSxpRkFBd0U7SUFDekUseUVBQUE7R0FDRjtDQUVEO0FBQ0EsbUNBQWtDO0FBQ2xDLGtDQUFBO0FBQ0EsOENBQTZDO0FBQzdDLDZDQUFBO0FDc0JBO0VEcEJFLHFCQUFjO0VBQ2QsY0FBQTtFQUNBLHVCQUFvQjtFQUNwQixvQkFBbUI7RUFDbkIsbUJBQUE7RUFDRCxvQkFBQTtDQ3NCQTs7QUFFRDtFRHJCRSx5QkFBZTtFQUNmLGVBQUE7RUFDQSxrQkFBa0I7RUFDbEIsa0JBQWlCO0VBQ2pCLGlCQUFZO0VBQ1osWUFBQTtFQUNELG1CQUFBO0NDdUJBOztBQUVEO0VEdEJFLHFCQUFjO0VBQ2QsY0FBQTtFQUNBLHVCQUFvQjtFQUNwQixvQkFBQTtFQUNELHVCQUFBO0NDd0JBOztBQUVEO0VEdkJFLHFCQUFpQjtFQUNqQixpQkFBQTtFQUNBLGtCQUFBO0VBQ0Esc0JBQUE7RUFDQSwwQkFBQTtFQUNBLDRCQUF3QjtFQUN4Qix3QkFBZ0I7RUFDaEIsZ0JBQUE7RUFDQSxxQkFBQTtFQUNELHFDQUFBO0NDeUJBOztBQUVEO0VEeEJFLGVBQUE7RUFDRCxzQkFBQTtDQzBCQTs7QUFFRDtFRHpCQyxZQUFBO0NDMkJBOztBQUVEO0VEMUJDLGtCQUFBO0NDNEJBOztBQUVEO0VBQ0U7SUQzQkUsbUJBQUE7SUFDRCxvQkFBQTtHQzZCQTs7RUFFRDtJRDVCRSxpRkFBd0U7SUFDekUseUVBQUE7R0FDRjtDQUVEO0FBQ0EsbUNBQWtDO0FBQ2xDLGtDQUFBO0FBQ0EsOENBQTZDO0FBQzdDLDZDQUFBO0FDNkJBO0VEM0JFLHFCQUFjO0VBQ2QsY0FBQTtFQUNBLHVCQUFvQjtFQUNwQixvQkFBbUI7RUFDbkIsbUJBQUE7RUFDRCxvQkFBQTtDQzZCQTs7QUFFRDtFRDVCRSx5QkFBZTtFQUNmLGVBQUE7RUFDQSxrQkFBa0I7RUFDbEIsa0JBQWlCO0VBQ2pCLGlCQUFZO0VBQ1osWUFBQTtFQUNELG1CQUFBO0NDOEJBOztBQUVEO0VEN0JFLHFCQUFjO0VBQ2QsY0FBQTtFQUNBLHVCQUFvQjtFQUNwQixvQkFBQTtFQUNELHVCQUFBO0NDK0JBOztBQUVEO0VEOUJFLHFCQUFpQjtFQUNqQixpQkFBQTtFQUNBLGtCQUFBO0VBQ0Esc0JBQUE7RUFDQSwwQkFBQTtFQUNBLDRCQUF3QjtFQUN4Qix3QkFBZ0I7RUFDaEIsZ0JBQUE7RUFDQSxxQkFBQTtFQUNELHFDQUFBO0NDZ0NBOztBQUVEO0VEL0JFLGVBQUE7RUFDRCxzQkFBQTtDQ2lDQTs7QUFFRDtFRGhDQyxZQUFBO0NDa0NBOztBQUVEO0VEakNDLGtCQUFBO0NDbUNBOztBQUVEO0VBQ0U7SURsQ0UsbUJBQUE7SUFDRCxvQkFBQTtHQ29DQTs7RUFFRDtJRG5DRSxpRkFBd0U7SUFDekUseUVBQUE7R0FDRjtDQUVEO0FBQ0EsbUNBQWtDO0FBQ2xDLGtDQUFBO0FBQ0EsOENBQTZDO0FBQzdDLDZDQUFBO0FDb0NBO0VEbENFLHFCQUFjO0VBQ2QsY0FBQTtFQUNBLHVCQUFvQjtFQUNwQixvQkFBbUI7RUFDbkIsbUJBQUE7RUFDRCxvQkFBQTtDQ29DQTs7QUFFRDtFRG5DRSx5QkFBZTtFQUNmLGVBQUE7RUFDQSxrQkFBa0I7RUFDbEIsa0JBQWlCO0VBQ2pCLGlCQUFZO0VBQ1osWUFBQTtFQUNELG1CQUFBO0NDcUNBOztBQUVEO0VEcENFLHFCQUFjO0VBQ2QsY0FBQTtFQUNBLHVCQUFvQjtFQUNwQixvQkFBQTtFQUNELHVCQUFBO0NDc0NBOztBQUVEO0VEckNFLHFCQUFpQjtFQUNqQixpQkFBQTtFQUNBLGtCQUFBO0VBQ0Esc0JBQUE7RUFDQSwwQkFBQTtFQUNBLDRCQUF3QjtFQUN4Qix3QkFBZ0I7RUFDaEIsZ0JBQUE7RUFDQSxxQkFBQTtFQUNELHFDQUFBO0NDdUNBOztBQUVEO0VEdENFLGVBQUE7RUFDRCxzQkFBQTtDQ3dDQTs7QUFFRDtFRHZDQyxZQUFBO0NDeUNBOztBQUVEO0VEeENDLGtCQUFBO0NDMENBOztBQUVEO0VBQ0U7SUR6Q0UsbUJBQUE7SUFDRCxvQkFBQTtHQzJDQTs7RUFFRDtJRDFDRSxpRkFBd0U7SUFDekUseUVBQUE7R0FDRjtDQzRDQSIsImZpbGUiOiJ0by5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvLyAtLS0tLS0tLS0tLSDQqNCg0JjQpNCi0KsgLS0tLS0tLS0tLS1cbiRNdXNlb1NhbnM6ICdNdXNlbyBTYW5zJywgc2Fucy1zZXJpZjtcbiRGb250VGhpbjogMTAwO1xuJEZvbnRMaWdodDogMzAwO1xuJEZvbnRSZWd1bGFyOiA0MDA7XG4kRm9udE1lZGl1bTogNTAwO1xuJEZvbnRCb2xkOiA3MDA7XG4kRm9udEJsYWNrOiA5MDA7XG5cbi8vIC0tLS0tLS0tLS0tINCm0JLQldCi0JAgLS0tLS0tLS0tLS1cbiRjb2xvci13aGl0ZTogI2ZmZmZmZjtcbiRjb2xvci1ibGFjay1jbGFzc2ljOiAjMDAwMDAwO1xuJGNvbG9yLWJsYWNrLWZhZGVkOiAjMzkzZDM5O1xuJGNvbG9yLWJsYWNrLWxpZ2h0OiAjNGY0ZjRmO1xuJGNvbG9yLWdyYXk6ICNhZGFkYWQ7XG4kY29sb3ItZ3JlZW46ICMyMmE4NGE7XG4kY29sb3ItZ3JlZW4tbGlnaHQ6ICMzYWMxNjI7XG4kY29sb3ItcGluazogI2ZmNmY1ZjtcbiRjb2xvci1nb2xkOiAjZmZkODdiO1xuJGNvbG9yLWJsdWU6ICM2ZmIwZGM7XG4kY29sb3ItcHVycGxlOiAjZDA3M2I3O1xuXG4vLyAtLS0tLS0tLS0tLSDQoNCQ0JfQoNCV0KjQldCd0JjQryDQrdCa0KDQkNCd0JAgLS0tLS0tLS0tLS1cbiRtb2JpbGU6IDMyMHB4O1xuJHRhYmxldDogNzY4cHg7XG4kZGVza3RvcDogMTAyNHB4O1xuJGJpZy1kZXNrdG9wOiAxNDQwcHg7XG5cbkBjdXN0b20tbWVkaWEgLS10YWJsZXQgKCR0YWJsZXQgPD0gd2lkdGggPCAkZGVza3RvcCk7XG5AY3VzdG9tLW1lZGlhIC0tbWluLXRhYmxldCAod2lkdGggPj0gJHRhYmxldCk7XG5AY3VzdG9tLW1lZGlhIC0tbWF4LXRhYmxldCAod2lkdGggPCAkdGFibGV0KTtcblxuQGN1c3RvbS1tZWRpYSAtLWRlc2t0b3AgKCRkZXNrdG9wIDw9IHdpZHRoIDwgJGJpZy1kZXNrdG9wKTtcbkBjdXN0b20tbWVkaWEgLS1taW4tZGVza3RvcCAod2lkdGggPj0gJGRlc2t0b3ApO1xuQGN1c3RvbS1tZWRpYSAtLW1heC1kZXNrdG9wICh3aWR0aCA8ICRkZXNrdG9wKTtcblxuQGN1c3RvbS1tZWRpYSAtLW1pbi1iaWctZGVza3RvcCAod2lkdGggPD0gJGJpZy1kZXNrdG9wKTtcbkBjdXN0b20tbWVkaWEgLS1iaWctZGVza3RvcCAod2lkdGggPj0gJGJpZy1kZXNrdG9wKTtcblxuLy8gLS0tLS0tLS0tLS0gUEFERElOR1MvTUFSR0lOUyAtLS0tLS0tLS0tLVxuJG1hcmdpbi1tb2JpbGU6IDIwcHg7XG4kbWFyZ2luLXRhYmxldDogMzRweDtcbiRtYXJnaW4tZGVza3RvcDogNzZweDtcbiRtYXJnaW4tYmlnLWRlc2t0b3A6IDE0dnc7IiwiQGltcG9ydCBcIn5jc3MvdmFyaWFibGVzLnNjc3NcIjtcblxuLmhlYWRlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmctbGVmdDogJG1hcmdpbi1tb2JpbGU7XG4gIHBhZGRpbmctcmlnaHQ6ICRtYXJnaW4tbW9iaWxlO1xuXG4gIEBtZWRpYSAoLS1taW4tZGVza3RvcCkge1xuICAgIHBhZGRpbmctbGVmdDogJG1hcmdpbi1kZXNrdG9wO1xuICAgIHBhZGRpbmctcmlnaHQ6ICRtYXJnaW4tZGVza3RvcDtcbiAgfVxuXG4gICY6OmJlZm9yZSB7XG4gICAgY29udGVudDogJ1JlYWN0IFByb2plY3QnO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICBsaW5lLWhlaWdodDogMzFweDtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIGNvbG9yOiAjMDAwO1xuICAgIG1hcmdpbi1yaWdodDogYXV0bztcblxuICAgIEBtZWRpYSAoLS1taW4tZGVza3RvcCkge1xuICAgICAgLyog0L3QsCDQvtGC0YDQtdC30LrQtSBbMTAyNCwgMTQwMF0g0YDQsNCy0L3QvtC80LXRgNC90L4g0YPQstC10LvQuNGH0LjQstCw0YLRjCDRgNCw0LfQvNC10YAg0YjRgNC40YTRgtCwINGBIDI0cHgg0LTQviAzNnB4ICovXG4gICAgICBmb250LXNpemU6IHNjYWxlKCRkZXNrdG9wLCAkYmlnLWRlc2t0b3AsIDI0cHgsIDM2cHgsIDEwMHZ3KTtcbiAgICB9XG4gIH1cbn1cblxuLmhlYWRlci1uYXYge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xufVxuXG4uaGVhZGVyLW5hdi1saW5rIHtcbiAgZm9udC1zaXplOiAxM3B4O1xuICBmb250LXdlaWdodDogNzAwO1xuICBsaW5lLWhlaWdodDogMThweDtcbiAgbGV0dGVyLXNwYWNpbmc6IC4wNWVtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBjb2xvcjogcmdiYSg3OSwgNzksIDc5LCAuNSk7XG4gIHRyYW5zaXRpb246IC4zcztcbiAgcGFkZGluZzogMjhweCAwIDIzcHg7XG4gIGJvcmRlci1ib3R0b206IDNweCBzb2xpZCB0cmFuc3BhcmVudDtcblxuICAmLmFjdGl2ZSB7XG4gICAgY29sb3I6ICM0ZjRmNGY7XG4gICAgYm9yZGVyLWNvbG9yOiAjM2FjMTYyO1xuICB9XG5cbiAgJjpob3ZlciB7XG4gICAgY29sb3I6ICMwMDA7XG4gIH1cblxuICAmICsgJiB7XG4gICAgbWFyZ2luLWxlZnQ6IDM2cHg7XG4gIH1cbn0iLCIuaGVhZGVyIHtcbiAgYm9yZGVyOiAxcHggc29saWQ7XG59XG5cbmJvZHkge1xuICBjb2xvcjogeWVsbG93O1xufVxuLyogLS0tLS0tLS0tLS0g0KjQoNCY0KTQotCrIC0tLS0tLS0tLS0tKi9cbi8qIC0tLS0tLS0tLS0tINCm0JLQldCi0JAgLS0tLS0tLS0tLS0qL1xuLyogLS0tLS0tLS0tLS0g0KDQkNCX0KDQldCo0JXQndCY0K8g0K3QmtCg0JDQndCQIC0tLS0tLS0tLS0tKi9cbi8qIC0tLS0tLS0tLS0tIFBBRERJTkdTL01BUkdJTlMgLS0tLS0tLS0tLS0qL1xuLmhlYWRlci0xa3lhIHtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmctbGVmdDogMjBweDtcbiAgcGFkZGluZy1yaWdodDogMjBweFxufVxuLmhlYWRlci0xa3lhOjpiZWZvcmUge1xuICBjb250ZW50OiAnUmVhY3QgUHJvamVjdCc7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBmb250LXNpemU6IDEuNXJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMjk7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGNvbG9yOiAjMDAwO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG9cbn1cbi5oZWFkZXItbmF2LTJ6RlQge1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbn1cbi5oZWFkZXItbmF2LWxpbmstM0tQMSB7XG4gIGZvbnQtc2l6ZTogMC44MTI1cmVtO1xuICBmb250LXdlaWdodDogNzAwO1xuICBsaW5lLWhlaWdodDogMS4zODtcbiAgbGV0dGVyLXNwYWNpbmc6IC4wNWVtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBjb2xvcjogcmdiYSg3OSwgNzksIDc5LCAuNSk7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogLjNzO1xuICB0cmFuc2l0aW9uOiAuM3M7XG4gIHBhZGRpbmc6IDI4cHggMCAyM3B4O1xuICBib3JkZXItYm90dG9tOiAzcHggc29saWQgdHJhbnNwYXJlbnRcbn1cbi5oZWFkZXItbmF2LWxpbmstM0tQMS5hY3RpdmUtM1RVNyB7XG4gIGNvbG9yOiAjNGY0ZjRmO1xuICBib3JkZXItY29sb3I6ICMzYWMxNjI7XG59XG4uaGVhZGVyLW5hdi1saW5rLTNLUDE6aG92ZXIge1xuICBjb2xvcjogIzAwMDtcbn1cbi5oZWFkZXItbmF2LWxpbmstM0tQMSArIC5oZWFkZXItbmF2LWxpbmstM0tQMSB7XG4gIG1hcmdpbi1sZWZ0OiAzNnB4O1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAuaGVhZGVyLTFreWEge1xuICAgIHBhZGRpbmctbGVmdDogNzZweDtcbiAgICBwYWRkaW5nLXJpZ2h0OiA3NnB4XG4gIH1cbiAgLmhlYWRlci0xa3lhOjpiZWZvcmUge1xuICAgIC8qINC90LAg0L7RgtGA0LXQt9C60LUgWzEwMjQsIDE0MDBdINGA0LDQstC90L7QvNC10YDQvdC+INGD0LLQtdC70LjRh9C40LLQsNGC0Ywg0YDQsNC30LzQtdGAINGI0YDQuNGE0YLQsCDRgSAyNHB4INC00L4gMzZweCAqL1xuICAgIGZvbnQtc2l6ZTogY2FsYygoKDIuMjUgLSAxLjUpICogKCgxMDB2dykgLSA2NHJlbSkgLyAoOTAgLSA2NCkpICsgMS41cmVtKVxuICB9XG59XG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWk0dUwzTnlZeTlqYzNNdmRtRnlhV0ZpYkdWekxuTmpjM01pTENJdUxpOXpjbU12YW5NdlkyOXRjRzl1Wlc1MGN5OW9aV0ZrWlhJdmFXNWtaWGd1YzJOemN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkJRU3h0UTBGQmFVTTdRVUZUYWtNc2EwTkJRV2RETzBGQllXaERMRGhEUVVFMFF6dEJRV2xDTlVNc05rTkJRVEpETzBGRGNrTXpRenRGUVVORkxIRkNRVUZqTzBWQlFXUXNZMEZCWXp0RlFVTmtMSFZDUVVGdlFqdE5RVUZ3UWl4dlFrRkJiMEk3UlVGRGNFSXNiVUpCUVRaQ08wVkJRemRDTEcxQ1FVRTRRanREUVhGQ0wwSTdRVUZrUXp0SlFVTkZMSGxDUVVGNVFqdEpRVU42UWl4bFFVRmxPMGxCUTJZc2EwSkJRV2RDTzBsQlEyaENMR3RDUVVGclFqdEpRVU5zUWl4cFFrRkJhVUk3U1VGRGFrSXNXVUZCV1R0SlFVTmFMR3RDUVVGdFFqdEhRVTF3UWp0QlFVZElPMFZCUTBVc2NVSkJRV003UlVGQlpDeGpRVUZqTzBWQlEyUXNkVUpCUVc5Q08wMUJRWEJDTEc5Q1FVRnZRanRGUVVOd1FpeDFRa0ZCZFVJN1EwRkRlRUk3UVVGRlJEdEZRVU5GTEhGQ1FVRm5RanRGUVVOb1FpeHBRa0ZCYVVJN1JVRkRha0lzYTBKQlFXdENPMFZCUTJ4Q0xITkNRVUZ6UWp0RlFVTjBRaXd3UWtGQk1FSTdSVUZETVVJc05FSkJRVFJDTzBWQlF6VkNMSGRDUVVGblFqdEZRVUZvUWl4blFrRkJaMEk3UlVGRGFFSXNjVUpCUVhGQ08wVkJRM0pDTEc5RFFVRnhRenREUVdOMFF6dEJRVnBETzBsQlEwVXNaVUZCWlR0SlFVTm1MSE5DUVVGelFqdEhRVU4yUWp0QlFVVkVPMGxCUTBVc1dVRkJXVHRIUVVOaU8wRkJSVVE3U1VGRFJTeHJRa0ZCYTBJN1IwRkRia0k3UVVGcVJFUTdRVUZPUmp0SlFVOUpMRzFDUVVFNFFqdEpRVU01UWl4dFFrRkJLMEk3UTBGcFFteERPMEZCWkVNN1RVRlZTU3hwUmtGQmFVWTdUVUZEYWtZc2QwVkJRVFJFTzBkQlJTOUVPMGRCWmtFaUxDSm1hV3hsSWpvaUxpNHZjM0pqTDJwekwyTnZiWEJ2Ym1WdWRITXZhR1ZoWkdWeUwybHVaR1Y0TG5OamMzTWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUl2THlBdExTMHRMUzB0TFMwdExTRFFxTkNnMEpqUXBOQ2kwS3NnTFMwdExTMHRMUzB0TFMxY2JpUk5kWE5sYjFOaGJuTTZJQ2ROZFhObGJ5QlRZVzV6Snl3Z2MyRnVjeTF6WlhKcFpqdGNiaVJHYjI1MFZHaHBiam9nTVRBd08xeHVKRVp2Ym5STWFXZG9kRG9nTXpBd08xeHVKRVp2Ym5SU1pXZDFiR0Z5T2lBME1EQTdYRzRrUm05dWRFMWxaR2wxYlRvZ05UQXdPMXh1SkVadmJuUkNiMnhrT2lBM01EQTdYRzRrUm05dWRFSnNZV05yT2lBNU1EQTdYRzVjYmk4dklDMHRMUzB0TFMwdExTMHRJTkNtMEpMUWxkQ2kwSkFnTFMwdExTMHRMUzB0TFMxY2JpUmpiMnh2Y2kxM2FHbDBaVG9nSTJabVptWm1aanRjYmlSamIyeHZjaTFpYkdGamF5MWpiR0Z6YzJsak9pQWpNREF3TURBd08xeHVKR052Ykc5eUxXSnNZV05yTFdaaFpHVmtPaUFqTXprelpETTVPMXh1SkdOdmJHOXlMV0pzWVdOckxXeHBaMmgwT2lBak5HWTBaalJtTzF4dUpHTnZiRzl5TFdkeVlYazZJQ05oWkdGa1lXUTdYRzRrWTI5c2IzSXRaM0psWlc0NklDTXlNbUU0TkdFN1hHNGtZMjlzYjNJdFozSmxaVzR0YkdsbmFIUTZJQ016WVdNeE5qSTdYRzRrWTI5c2IzSXRjR2x1YXpvZ0kyWm1ObVkxWmp0Y2JpUmpiMnh2Y2kxbmIyeGtPaUFqWm1aa09EZGlPMXh1SkdOdmJHOXlMV0pzZFdVNklDTTJabUl3WkdNN1hHNGtZMjlzYjNJdGNIVnljR3hsT2lBalpEQTNNMkkzTzF4dVhHNHZMeUF0TFMwdExTMHRMUzB0TFNEUW9OQ1EwSmZRb05DVjBLalFsZENkMEpqUXJ5RFFyZENhMEtEUWtOQ2QwSkFnTFMwdExTMHRMUzB0TFMxY2JpUnRiMkpwYkdVNklETXlNSEI0TzF4dUpIUmhZbXhsZERvZ056WTRjSGc3WEc0a1pHVnphM1J2Y0RvZ01UQXlOSEI0TzF4dUpHSnBaeTFrWlhOcmRHOXdPaUF4TkRRd2NIZzdYRzVjYmtCamRYTjBiMjB0YldWa2FXRWdMUzEwWVdKc1pYUWdLQ1IwWVdKc1pYUWdQRDBnZDJsa2RHZ2dQQ0FrWkdWemEzUnZjQ2s3WEc1QVkzVnpkRzl0TFcxbFpHbGhJQzB0YldsdUxYUmhZbXhsZENBb2QybGtkR2dnUGowZ0pIUmhZbXhsZENrN1hHNUFZM1Z6ZEc5dExXMWxaR2xoSUMwdGJXRjRMWFJoWW14bGRDQW9kMmxrZEdnZ1BDQWtkR0ZpYkdWMEtUdGNibHh1UUdOMWMzUnZiUzF0WldScFlTQXRMV1JsYzJ0MGIzQWdLQ1JrWlhOcmRHOXdJRHc5SUhkcFpIUm9JRHdnSkdKcFp5MWtaWE5yZEc5d0tUdGNia0JqZFhOMGIyMHRiV1ZrYVdFZ0xTMXRhVzR0WkdWemEzUnZjQ0FvZDJsa2RHZ2dQajBnSkdSbGMydDBiM0FwTzF4dVFHTjFjM1J2YlMxdFpXUnBZU0F0TFcxaGVDMWtaWE5yZEc5d0lDaDNhV1IwYUNBOElDUmtaWE5yZEc5d0tUdGNibHh1UUdOMWMzUnZiUzF0WldScFlTQXRMVzFwYmkxaWFXY3RaR1Z6YTNSdmNDQW9kMmxrZEdnZ1BEMGdKR0pwWnkxa1pYTnJkRzl3S1R0Y2JrQmpkWE4wYjIwdGJXVmthV0VnTFMxaWFXY3RaR1Z6YTNSdmNDQW9kMmxrZEdnZ1BqMGdKR0pwWnkxa1pYTnJkRzl3S1R0Y2JseHVMeThnTFMwdExTMHRMUzB0TFMwZ1VFRkVSRWxPUjFNdlRVRlNSMGxPVXlBdExTMHRMUzB0TFMwdExWeHVKRzFoY21kcGJpMXRiMkpwYkdVNklESXdjSGc3WEc0a2JXRnlaMmx1TFhSaFlteGxkRG9nTXpSd2VEdGNiaVJ0WVhKbmFXNHRaR1Z6YTNSdmNEb2dOelp3ZUR0Y2JpUnRZWEpuYVc0dFltbG5MV1JsYzJ0MGIzQTZJREUwZG5jN0lpd2lRR2x0Y0c5eWRDQmNJbjVqYzNNdmRtRnlhV0ZpYkdWekxuTmpjM05jSWp0Y2JseHVMbWhsWVdSbGNpQjdYRzRnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUdGc2FXZHVMV2wwWlcxek9pQmpaVzUwWlhJN1hHNGdJSEJoWkdScGJtY3RiR1ZtZERvZ0pHMWhjbWRwYmkxdGIySnBiR1U3WEc0Z0lIQmhaR1JwYm1jdGNtbG5hSFE2SUNSdFlYSm5hVzR0Ylc5aWFXeGxPMXh1WEc0Z0lFQnRaV1JwWVNBb0xTMXRhVzR0WkdWemEzUnZjQ2tnZTF4dUlDQWdJSEJoWkdScGJtY3RiR1ZtZERvZ0pHMWhjbWRwYmkxa1pYTnJkRzl3TzF4dUlDQWdJSEJoWkdScGJtY3RjbWxuYUhRNklDUnRZWEpuYVc0dFpHVnphM1J2Y0R0Y2JpQWdmVnh1WEc0Z0lDWTZPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ0oxSmxZV04wSUZCeWIycGxZM1FuTzF4dUlDQWdJR1JwYzNCc1lYazZJR0pzYjJOck8xeHVJQ0FnSUdadmJuUXRjMmw2WlRvZ01qUndlRHRjYmlBZ0lDQnNhVzVsTFdobGFXZG9kRG9nTXpGd2VEdGNiaUFnSUNCbWIyNTBMWGRsYVdkb2REb2dOekF3TzF4dUlDQWdJR052Ykc5eU9pQWpNREF3TzF4dUlDQWdJRzFoY21kcGJpMXlhV2RvZERvZ1lYVjBienRjYmx4dUlDQWdJRUJ0WldScFlTQW9MUzF0YVc0dFpHVnphM1J2Y0NrZ2UxeHVJQ0FnSUNBZ0x5b2cwTDNRc0NEUXZ0R0MwWURRdGRDMzBMclF0U0JiTVRBeU5Dd2dNVFF3TUYwZzBZRFFzTkN5MEwzUXZ0QzgwTFhSZ05DOTBMNGcwWVBRc3RDMTBMdlF1TkdIMExqUXN0Q3cwWUxSakNEUmdOQ3cwTGZRdk5DMTBZQWcwWWpSZ05DNDBZVFJndEN3SU5HQklESTBjSGdnMExUUXZpQXpObkI0SUNvdlhHNGdJQ0FnSUNCbWIyNTBMWE5wZW1VNklITmpZV3hsS0NSa1pYTnJkRzl3TENBa1ltbG5MV1JsYzJ0MGIzQXNJREkwY0hnc0lETTJjSGdzSURFd01IWjNLVHRjYmlBZ0lDQjlYRzRnSUgxY2JuMWNibHh1TG1obFlXUmxjaTF1WVhZZ2UxeHVJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHVJQ0JoYkdsbmJpMXBkR1Z0Y3pvZ1kyVnVkR1Z5TzF4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWpabVptTzF4dWZWeHVYRzR1YUdWaFpHVnlMVzVoZGkxc2FXNXJJSHRjYmlBZ1ptOXVkQzF6YVhwbE9pQXhNM0I0TzF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nTnpBd08xeHVJQ0JzYVc1bExXaGxhV2RvZERvZ01UaHdlRHRjYmlBZ2JHVjBkR1Z5TFhOd1lXTnBibWM2SUM0d05XVnRPMXh1SUNCMFpYaDBMWFJ5WVc1elptOXliVG9nZFhCd1pYSmpZWE5sTzF4dUlDQmpiMnh2Y2pvZ2NtZGlZU2czT1N3Z056a3NJRGM1TENBdU5TazdYRzRnSUhSeVlXNXphWFJwYjI0NklDNHpjenRjYmlBZ2NHRmtaR2x1WnpvZ01qaHdlQ0F3SURJemNIZzdYRzRnSUdKdmNtUmxjaTFpYjNSMGIyMDZJRE53ZUNCemIyeHBaQ0IwY21GdWMzQmhjbVZ1ZER0Y2JseHVJQ0FtTG1GamRHbDJaU0I3WEc0Z0lDQWdZMjlzYjNJNklDTTBaalJtTkdZN1hHNGdJQ0FnWW05eVpHVnlMV052Ykc5eU9pQWpNMkZqTVRZeU8xeHVJQ0I5WEc1Y2JpQWdKanBvYjNabGNpQjdYRzRnSUNBZ1kyOXNiM0k2SUNNd01EQTdYRzRnSUgxY2JseHVJQ0FtSUNzZ0ppQjdYRzRnSUNBZ2JXRnlaMmx1TFd4bFpuUTZJRE0yY0hnN1hHNGdJSDFjYm4waVhYMD0gKi9cbi8qIC0tLS0tLS0tLS0tINCo0KDQmNCk0KLQqyAtLS0tLS0tLS0tLSovXG4vKiAtLS0tLS0tLS0tLSDQptCS0JXQotCQIC0tLS0tLS0tLS0tKi9cbi8qIC0tLS0tLS0tLS0tINCg0JDQl9Cg0JXQqNCV0J3QmNCvINCt0JrQoNCQ0J3QkCAtLS0tLS0tLS0tLSovXG4vKiAtLS0tLS0tLS0tLSBQQURESU5HUy9NQVJHSU5TIC0tLS0tLS0tLS0tKi9cbi5oZWFkZXItMWt5YSB7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBwYWRkaW5nLWxlZnQ6IDIwcHg7XG4gIHBhZGRpbmctcmlnaHQ6IDIwcHhcbn1cbi5oZWFkZXItMWt5YTo6YmVmb3JlIHtcbiAgY29udGVudDogJ1JlYWN0IFByb2plY3QnO1xuICBkaXNwbGF5OiBibG9jaztcbiAgZm9udC1zaXplOiAxLjVyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjI5O1xuICBmb250LXdlaWdodDogNzAwO1xuICBjb2xvcjogIzAwMDtcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvXG59XG4uaGVhZGVyLW5hdi0yekZUIHtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG59XG4uaGVhZGVyLW5hdi1saW5rLTNLUDEge1xuICBmb250LXNpemU6IDAuODEyNXJlbTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgbGluZS1oZWlnaHQ6IDEuMzg7XG4gIGxldHRlci1zcGFjaW5nOiAuMDVlbTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgY29sb3I6IHJnYmEoNzksIDc5LCA3OSwgLjUpO1xuICAtd2Via2l0LXRyYW5zaXRpb246IC4zcztcbiAgdHJhbnNpdGlvbjogLjNzO1xuICBwYWRkaW5nOiAyOHB4IDAgMjNweDtcbiAgYm9yZGVyLWJvdHRvbTogM3B4IHNvbGlkIHRyYW5zcGFyZW50XG59XG4uaGVhZGVyLW5hdi1saW5rLTNLUDEuYWN0aXZlLTNUVTcge1xuICBjb2xvcjogIzRmNGY0ZjtcbiAgYm9yZGVyLWNvbG9yOiAjM2FjMTYyO1xufVxuLmhlYWRlci1uYXYtbGluay0zS1AxOmhvdmVyIHtcbiAgY29sb3I6ICMwMDA7XG59XG4uaGVhZGVyLW5hdi1saW5rLTNLUDEgKyAuaGVhZGVyLW5hdi1saW5rLTNLUDEge1xuICBtYXJnaW4tbGVmdDogMzZweDtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLmhlYWRlci0xa3lhIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDc2cHg7XG4gICAgcGFkZGluZy1yaWdodDogNzZweFxuICB9XG4gIC5oZWFkZXItMWt5YTo6YmVmb3JlIHtcbiAgICAvKiDQvdCwINC+0YLRgNC10LfQutC1IFsxMDI0LCAxNDAwXSDRgNCw0LLQvdC+0LzQtdGA0L3QviDRg9Cy0LXQu9C40YfQuNCy0LDRgtGMINGA0LDQt9C80LXRgCDRiNGA0LjRhNGC0LAg0YEgMjRweCDQtNC+IDM2cHggKi9cbiAgICBmb250LXNpemU6IGNhbGMoKCgyLjI1IC0gMS41KSAqICgoMTAwdncpIC0gNjRyZW0pIC8gKDkwIC0gNjQpKSArIDEuNXJlbSlcbiAgfVxufVxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklpNHVMM055WXk5amMzTXZkbUZ5YVdGaWJHVnpMbk5qYzNNaUxDSXVMaTl6Y21NdmFuTXZZMjl0Y0c5dVpXNTBjeTlvWldGa1pYSXZhVzVrWlhndWMyTnpjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lRVUZCUVN4dFEwRkJhVU03UVVGVGFrTXNhME5CUVdkRE8wRkJZV2hETERoRFFVRTBRenRCUVdsQ05VTXNOa05CUVRKRE8wRkRja016UXp0RlFVTkZMSEZDUVVGak8wVkJRV1FzWTBGQll6dEZRVU5rTEhWQ1FVRnZRanROUVVGd1FpeHZRa0ZCYjBJN1JVRkRjRUlzYlVKQlFUWkNPMFZCUXpkQ0xHMUNRVUU0UWp0RFFYRkNMMEk3UVVGa1F6dEpRVU5GTEhsQ1FVRjVRanRKUVVONlFpeGxRVUZsTzBsQlEyWXNhMEpCUVdkQ08wbEJRMmhDTEd0Q1FVRnJRanRKUVVOc1FpeHBRa0ZCYVVJN1NVRkRha0lzV1VGQldUdEpRVU5hTEd0Q1FVRnRRanRIUVUxd1FqdEJRVWRJTzBWQlEwVXNjVUpCUVdNN1JVRkJaQ3hqUVVGak8wVkJRMlFzZFVKQlFXOUNPMDFCUVhCQ0xHOUNRVUZ2UWp0RlFVTndRaXgxUWtGQmRVSTdRMEZEZUVJN1FVRkZSRHRGUVVORkxIRkNRVUZuUWp0RlFVTm9RaXhwUWtGQmFVSTdSVUZEYWtJc2EwSkJRV3RDTzBWQlEyeENMSE5DUVVGelFqdEZRVU4wUWl3d1FrRkJNRUk3UlVGRE1VSXNORUpCUVRSQ08wVkJRelZDTEhkQ1FVRm5RanRGUVVGb1FpeG5Ra0ZCWjBJN1JVRkRhRUlzY1VKQlFYRkNPMFZCUTNKQ0xHOURRVUZ4UXp0RFFXTjBRenRCUVZwRE8wbEJRMFVzWlVGQlpUdEpRVU5tTEhOQ1FVRnpRanRIUVVOMlFqdEJRVVZFTzBsQlEwVXNXVUZCV1R0SFFVTmlPMEZCUlVRN1NVRkRSU3hyUWtGQmEwSTdSMEZEYmtJN1FVRnFSRVE3UVVGT1JqdEpRVTlKTEcxQ1FVRTRRanRKUVVNNVFpeHRRa0ZCSzBJN1EwRnBRbXhETzBGQlpFTTdUVUZWU1N4cFJrRkJhVVk3VFVGRGFrWXNkMFZCUVRSRU8wZEJSUzlFTzBkQlprRWlMQ0ptYVd4bElqb2lMaTR2YzNKakwycHpMMk52YlhCdmJtVnVkSE12YUdWaFpHVnlMMmx1WkdWNExuTmpjM01pTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lJdkx5QXRMUzB0TFMwdExTMHRMU0RRcU5DZzBKalFwTkNpMEtzZ0xTMHRMUzB0TFMwdExTMWNiaVJOZFhObGIxTmhibk02SUNkTmRYTmxieUJUWVc1ekp5d2djMkZ1Y3kxelpYSnBaanRjYmlSR2IyNTBWR2hwYmpvZ01UQXdPMXh1SkVadmJuUk1hV2RvZERvZ016QXdPMXh1SkVadmJuUlNaV2QxYkdGeU9pQTBNREE3WEc0a1JtOXVkRTFsWkdsMWJUb2dOVEF3TzF4dUpFWnZiblJDYjJ4a09pQTNNREE3WEc0a1JtOXVkRUpzWVdOck9pQTVNREE3WEc1Y2JpOHZJQzB0TFMwdExTMHRMUzB0SU5DbTBKTFFsZENpMEpBZ0xTMHRMUzB0TFMwdExTMWNiaVJqYjJ4dmNpMTNhR2wwWlRvZ0kyWm1abVptWmp0Y2JpUmpiMnh2Y2kxaWJHRmpheTFqYkdGemMybGpPaUFqTURBd01EQXdPMXh1SkdOdmJHOXlMV0pzWVdOckxXWmhaR1ZrT2lBak16a3paRE01TzF4dUpHTnZiRzl5TFdKc1lXTnJMV3hwWjJoME9pQWpOR1kwWmpSbU8xeHVKR052Ykc5eUxXZHlZWGs2SUNOaFpHRmtZV1E3WEc0a1kyOXNiM0l0WjNKbFpXNDZJQ015TW1FNE5HRTdYRzRrWTI5c2IzSXRaM0psWlc0dGJHbG5hSFE2SUNNellXTXhOakk3WEc0a1kyOXNiM0l0Y0dsdWF6b2dJMlptTm1ZMVpqdGNiaVJqYjJ4dmNpMW5iMnhrT2lBalptWmtPRGRpTzF4dUpHTnZiRzl5TFdKc2RXVTZJQ00yWm1Jd1pHTTdYRzRrWTI5c2IzSXRjSFZ5Y0d4bE9pQWpaREEzTTJJM08xeHVYRzR2THlBdExTMHRMUzB0TFMwdExTRFFvTkNRMEpmUW9OQ1YwS2pRbGRDZDBKalFyeURRcmRDYTBLRFFrTkNkMEpBZ0xTMHRMUzB0TFMwdExTMWNiaVJ0YjJKcGJHVTZJRE15TUhCNE8xeHVKSFJoWW14bGREb2dOelk0Y0hnN1hHNGtaR1Z6YTNSdmNEb2dNVEF5TkhCNE8xeHVKR0pwWnkxa1pYTnJkRzl3T2lBeE5EUXdjSGc3WEc1Y2JrQmpkWE4wYjIwdGJXVmthV0VnTFMxMFlXSnNaWFFnS0NSMFlXSnNaWFFnUEQwZ2QybGtkR2dnUENBa1pHVnphM1J2Y0NrN1hHNUFZM1Z6ZEc5dExXMWxaR2xoSUMwdGJXbHVMWFJoWW14bGRDQW9kMmxrZEdnZ1BqMGdKSFJoWW14bGRDazdYRzVBWTNWemRHOXRMVzFsWkdsaElDMHRiV0Y0TFhSaFlteGxkQ0FvZDJsa2RHZ2dQQ0FrZEdGaWJHVjBLVHRjYmx4dVFHTjFjM1J2YlMxdFpXUnBZU0F0TFdSbGMydDBiM0FnS0NSa1pYTnJkRzl3SUR3OUlIZHBaSFJvSUR3Z0pHSnBaeTFrWlhOcmRHOXdLVHRjYmtCamRYTjBiMjB0YldWa2FXRWdMUzF0YVc0dFpHVnphM1J2Y0NBb2QybGtkR2dnUGowZ0pHUmxjMnQwYjNBcE8xeHVRR04xYzNSdmJTMXRaV1JwWVNBdExXMWhlQzFrWlhOcmRHOXdJQ2gzYVdSMGFDQThJQ1JrWlhOcmRHOXdLVHRjYmx4dVFHTjFjM1J2YlMxdFpXUnBZU0F0TFcxcGJpMWlhV2N0WkdWemEzUnZjQ0FvZDJsa2RHZ2dQRDBnSkdKcFp5MWtaWE5yZEc5d0tUdGNia0JqZFhOMGIyMHRiV1ZrYVdFZ0xTMWlhV2N0WkdWemEzUnZjQ0FvZDJsa2RHZ2dQajBnSkdKcFp5MWtaWE5yZEc5d0tUdGNibHh1THk4Z0xTMHRMUzB0TFMwdExTMGdVRUZFUkVsT1IxTXZUVUZTUjBsT1V5QXRMUzB0TFMwdExTMHRMVnh1SkcxaGNtZHBiaTF0YjJKcGJHVTZJREl3Y0hnN1hHNGtiV0Z5WjJsdUxYUmhZbXhsZERvZ016UndlRHRjYmlSdFlYSm5hVzR0WkdWemEzUnZjRG9nTnpad2VEdGNiaVJ0WVhKbmFXNHRZbWxuTFdSbGMydDBiM0E2SURFMGRuYzdJaXdpUUdsdGNHOXlkQ0JjSW41amMzTXZkbUZ5YVdGaWJHVnpMbk5qYzNOY0lqdGNibHh1TG1obFlXUmxjaUI3WEc0Z0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lHRnNhV2R1TFdsMFpXMXpPaUJqWlc1MFpYSTdYRzRnSUhCaFpHUnBibWN0YkdWbWREb2dKRzFoY21kcGJpMXRiMkpwYkdVN1hHNGdJSEJoWkdScGJtY3RjbWxuYUhRNklDUnRZWEpuYVc0dGJXOWlhV3hsTzF4dVhHNGdJRUJ0WldScFlTQW9MUzF0YVc0dFpHVnphM1J2Y0NrZ2UxeHVJQ0FnSUhCaFpHUnBibWN0YkdWbWREb2dKRzFoY21kcGJpMWtaWE5yZEc5d08xeHVJQ0FnSUhCaFpHUnBibWN0Y21sbmFIUTZJQ1J0WVhKbmFXNHRaR1Z6YTNSdmNEdGNiaUFnZlZ4dVhHNGdJQ1k2T21KbFptOXlaU0I3WEc0Z0lDQWdZMjl1ZEdWdWREb2dKMUpsWVdOMElGQnliMnBsWTNRbk8xeHVJQ0FnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dNalJ3ZUR0Y2JpQWdJQ0JzYVc1bExXaGxhV2RvZERvZ016RndlRHRjYmlBZ0lDQm1iMjUwTFhkbGFXZG9kRG9nTnpBd08xeHVJQ0FnSUdOdmJHOXlPaUFqTURBd08xeHVJQ0FnSUcxaGNtZHBiaTF5YVdkb2REb2dZWFYwYnp0Y2JseHVJQ0FnSUVCdFpXUnBZU0FvTFMxdGFXNHRaR1Z6YTNSdmNDa2dlMXh1SUNBZ0lDQWdMeW9nMEwzUXNDRFF2dEdDMFlEUXRkQzMwTHJRdFNCYk1UQXlOQ3dnTVRRd01GMGcwWURRc05DeTBMM1F2dEM4MExYUmdOQzkwTDRnMFlQUXN0QzEwTHZRdU5HSDBMalFzdEN3MFlMUmpDRFJnTkN3MExmUXZOQzEwWUFnMFlqUmdOQzQwWVRSZ3RDd0lOR0JJREkwY0hnZzBMVFF2aUF6Tm5CNElDb3ZYRzRnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJSE5qWVd4bEtDUmtaWE5yZEc5d0xDQWtZbWxuTFdSbGMydDBiM0FzSURJMGNIZ3NJRE0yY0hnc0lERXdNSFozS1R0Y2JpQWdJQ0I5WEc0Z0lIMWNibjFjYmx4dUxtaGxZV1JsY2kxdVlYWWdlMXh1SUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh1SUNCaGJHbG5iaTFwZEdWdGN6b2dZMlZ1ZEdWeU8xeHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFqWm1abU8xeHVmVnh1WEc0dWFHVmhaR1Z5TFc1aGRpMXNhVzVySUh0Y2JpQWdabTl1ZEMxemFYcGxPaUF4TTNCNE8xeHVJQ0JtYjI1MExYZGxhV2RvZERvZ056QXdPMXh1SUNCc2FXNWxMV2hsYVdkb2REb2dNVGh3ZUR0Y2JpQWdiR1YwZEdWeUxYTndZV05wYm1jNklDNHdOV1Z0TzF4dUlDQjBaWGgwTFhSeVlXNXpabTl5YlRvZ2RYQndaWEpqWVhObE8xeHVJQ0JqYjJ4dmNqb2djbWRpWVNnM09Td2dOemtzSURjNUxDQXVOU2s3WEc0Z0lIUnlZVzV6YVhScGIyNDZJQzR6Y3p0Y2JpQWdjR0ZrWkdsdVp6b2dNamh3ZUNBd0lESXpjSGc3WEc0Z0lHSnZjbVJsY2kxaWIzUjBiMjA2SUROd2VDQnpiMnhwWkNCMGNtRnVjM0JoY21WdWREdGNibHh1SUNBbUxtRmpkR2wyWlNCN1hHNGdJQ0FnWTI5c2IzSTZJQ00wWmpSbU5HWTdYRzRnSUNBZ1ltOXlaR1Z5TFdOdmJHOXlPaUFqTTJGak1UWXlPMXh1SUNCOVhHNWNiaUFnSmpwb2IzWmxjaUI3WEc0Z0lDQWdZMjlzYjNJNklDTXdNREE3WEc0Z0lIMWNibHh1SUNBbUlDc2dKaUI3WEc0Z0lDQWdiV0Z5WjJsdUxXeGxablE2SURNMmNIZzdYRzRnSUgxY2JuMGlYWDA9ICovXG4vKiAtLS0tLS0tLS0tLSDQqNCg0JjQpNCi0KsgLS0tLS0tLS0tLS0qL1xuLyogLS0tLS0tLS0tLS0g0KbQktCV0KLQkCAtLS0tLS0tLS0tLSovXG4vKiAtLS0tLS0tLS0tLSDQoNCQ0JfQoNCV0KjQldCd0JjQryDQrdCa0KDQkNCd0JAgLS0tLS0tLS0tLS0qL1xuLyogLS0tLS0tLS0tLS0gUEFERElOR1MvTUFSR0lOUyAtLS0tLS0tLS0tLSovXG4uaGVhZGVyLTFreWEge1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcGFkZGluZy1sZWZ0OiAyMHB4O1xuICBwYWRkaW5nLXJpZ2h0OiAyMHB4XG59XG4uaGVhZGVyLTFreWE6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdSZWFjdCBQcm9qZWN0JztcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtc2l6ZTogMS41cmVtO1xuICBsaW5lLWhlaWdodDogMS4yOTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgY29sb3I6ICMwMDA7XG4gIG1hcmdpbi1yaWdodDogYXV0b1xufVxuLmhlYWRlci1uYXYtMnpGVCB7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xufVxuLmhlYWRlci1uYXYtbGluay0zS1AxIHtcbiAgZm9udC1zaXplOiAwLjgxMjVyZW07XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjM4O1xuICBsZXR0ZXItc3BhY2luZzogLjA1ZW07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGNvbG9yOiByZ2JhKDc5LCA3OSwgNzksIC41KTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiAuM3M7XG4gIHRyYW5zaXRpb246IC4zcztcbiAgcGFkZGluZzogMjhweCAwIDIzcHg7XG4gIGJvcmRlci1ib3R0b206IDNweCBzb2xpZCB0cmFuc3BhcmVudFxufVxuLmhlYWRlci1uYXYtbGluay0zS1AxLmFjdGl2ZS0zVFU3IHtcbiAgY29sb3I6ICM0ZjRmNGY7XG4gIGJvcmRlci1jb2xvcjogIzNhYzE2Mjtcbn1cbi5oZWFkZXItbmF2LWxpbmstM0tQMTpob3ZlciB7XG4gIGNvbG9yOiAjMDAwO1xufVxuLmhlYWRlci1uYXYtbGluay0zS1AxICsgLmhlYWRlci1uYXYtbGluay0zS1AxIHtcbiAgbWFyZ2luLWxlZnQ6IDM2cHg7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5oZWFkZXItMWt5YSB7XG4gICAgcGFkZGluZy1sZWZ0OiA3NnB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDc2cHhcbiAgfVxuICAuaGVhZGVyLTFreWE6OmJlZm9yZSB7XG4gICAgLyog0L3QsCDQvtGC0YDQtdC30LrQtSBbMTAyNCwgMTQwMF0g0YDQsNCy0L3QvtC80LXRgNC90L4g0YPQstC10LvQuNGH0LjQstCw0YLRjCDRgNCw0LfQvNC10YAg0YjRgNC40YTRgtCwINGBIDI0cHgg0LTQviAzNnB4ICovXG4gICAgZm9udC1zaXplOiBjYWxjKCgoMi4yNSAtIDEuNSkgKiAoKDEwMHZ3KSAtIDY0cmVtKSAvICg5MCAtIDY0KSkgKyAxLjVyZW0pXG4gIH1cbn1cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJaTR1TDNOeVl5OWpjM012ZG1GeWFXRmliR1Z6TG5OamMzTWlMQ0l1TGk5emNtTXZhbk12WTI5dGNHOXVaVzUwY3k5b1pXRmtaWEl2YVc1a1pYZ3VjMk56Y3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFTeHRRMEZCYVVNN1FVRlRha01zYTBOQlFXZERPMEZCWVdoRExEaERRVUUwUXp0QlFXbENOVU1zTmtOQlFUSkRPMEZEY2tNelF6dEZRVU5GTEhGQ1FVRmpPMFZCUVdRc1kwRkJZenRGUVVOa0xIVkNRVUZ2UWp0TlFVRndRaXh2UWtGQmIwSTdSVUZEY0VJc2JVSkJRVFpDTzBWQlF6ZENMRzFDUVVFNFFqdERRWEZDTDBJN1FVRmtRenRKUVVORkxIbENRVUY1UWp0SlFVTjZRaXhsUVVGbE8wbEJRMllzYTBKQlFXZENPMGxCUTJoQ0xHdENRVUZyUWp0SlFVTnNRaXhwUWtGQmFVSTdTVUZEYWtJc1dVRkJXVHRKUVVOYUxHdENRVUZ0UWp0SFFVMXdRanRCUVVkSU8wVkJRMFVzY1VKQlFXTTdSVUZCWkN4alFVRmpPMFZCUTJRc2RVSkJRVzlDTzAxQlFYQkNMRzlDUVVGdlFqdEZRVU53UWl4MVFrRkJkVUk3UTBGRGVFSTdRVUZGUkR0RlFVTkZMSEZDUVVGblFqdEZRVU5vUWl4cFFrRkJhVUk3UlVGRGFrSXNhMEpCUVd0Q08wVkJRMnhDTEhOQ1FVRnpRanRGUVVOMFFpd3dRa0ZCTUVJN1JVRkRNVUlzTkVKQlFUUkNPMFZCUXpWQ0xIZENRVUZuUWp0RlFVRm9RaXhuUWtGQlowSTdSVUZEYUVJc2NVSkJRWEZDTzBWQlEzSkNMRzlEUVVGeFF6dERRV04wUXp0QlFWcERPMGxCUTBVc1pVRkJaVHRKUVVObUxITkNRVUZ6UWp0SFFVTjJRanRCUVVWRU8wbEJRMFVzV1VGQldUdEhRVU5pTzBGQlJVUTdTVUZEUlN4clFrRkJhMEk3UjBGRGJrSTdRVUZxUkVRN1FVRk9SanRKUVU5SkxHMUNRVUU0UWp0SlFVTTVRaXh0UWtGQkswSTdRMEZwUW14RE8wRkJaRU03VFVGVlNTeHBSa0ZCYVVZN1RVRkRha1lzZDBWQlFUUkVPMGRCUlM5RU8wZEJaa0VpTENKbWFXeGxJam9pTGk0dmMzSmpMMnB6TDJOdmJYQnZibVZ1ZEhNdmFHVmhaR1Z5TDJsdVpHVjRMbk5qYzNNaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SXZMeUF0TFMwdExTMHRMUzB0TFNEUXFOQ2cwSmpRcE5DaTBLc2dMUzB0TFMwdExTMHRMUzFjYmlSTmRYTmxiMU5oYm5NNklDZE5kWE5sYnlCVFlXNXpKeXdnYzJGdWN5MXpaWEpwWmp0Y2JpUkdiMjUwVkdocGJqb2dNVEF3TzF4dUpFWnZiblJNYVdkb2REb2dNekF3TzF4dUpFWnZiblJTWldkMWJHRnlPaUEwTURBN1hHNGtSbTl1ZEUxbFpHbDFiVG9nTlRBd08xeHVKRVp2Ym5SQ2IyeGtPaUEzTURBN1hHNGtSbTl1ZEVKc1lXTnJPaUE1TURBN1hHNWNiaTh2SUMwdExTMHRMUzB0TFMwdElOQ20wSkxRbGRDaTBKQWdMUzB0TFMwdExTMHRMUzFjYmlSamIyeHZjaTEzYUdsMFpUb2dJMlptWm1abVpqdGNiaVJqYjJ4dmNpMWliR0ZqYXkxamJHRnpjMmxqT2lBak1EQXdNREF3TzF4dUpHTnZiRzl5TFdKc1lXTnJMV1poWkdWa09pQWpNemt6WkRNNU8xeHVKR052Ykc5eUxXSnNZV05yTFd4cFoyaDBPaUFqTkdZMFpqUm1PMXh1SkdOdmJHOXlMV2R5WVhrNklDTmhaR0ZrWVdRN1hHNGtZMjlzYjNJdFozSmxaVzQ2SUNNeU1tRTROR0U3WEc0a1kyOXNiM0l0WjNKbFpXNHRiR2xuYUhRNklDTXpZV014TmpJN1hHNGtZMjlzYjNJdGNHbHVhem9nSTJabU5tWTFaanRjYmlSamIyeHZjaTFuYjJ4a09pQWpabVprT0RkaU8xeHVKR052Ykc5eUxXSnNkV1U2SUNNMlptSXdaR003WEc0a1kyOXNiM0l0Y0hWeWNHeGxPaUFqWkRBM00ySTNPMXh1WEc0dkx5QXRMUzB0TFMwdExTMHRMU0RRb05DUTBKZlFvTkNWMEtqUWxkQ2QwSmpRcnlEUXJkQ2EwS0RRa05DZDBKQWdMUzB0TFMwdExTMHRMUzFjYmlSdGIySnBiR1U2SURNeU1IQjRPMXh1SkhSaFlteGxkRG9nTnpZNGNIZzdYRzRrWkdWemEzUnZjRG9nTVRBeU5IQjRPMXh1SkdKcFp5MWtaWE5yZEc5d09pQXhORFF3Y0hnN1hHNWNia0JqZFhOMGIyMHRiV1ZrYVdFZ0xTMTBZV0pzWlhRZ0tDUjBZV0pzWlhRZ1BEMGdkMmxrZEdnZ1BDQWtaR1Z6YTNSdmNDazdYRzVBWTNWemRHOXRMVzFsWkdsaElDMHRiV2x1TFhSaFlteGxkQ0FvZDJsa2RHZ2dQajBnSkhSaFlteGxkQ2s3WEc1QVkzVnpkRzl0TFcxbFpHbGhJQzB0YldGNExYUmhZbXhsZENBb2QybGtkR2dnUENBa2RHRmliR1YwS1R0Y2JseHVRR04xYzNSdmJTMXRaV1JwWVNBdExXUmxjMnQwYjNBZ0tDUmtaWE5yZEc5d0lEdzlJSGRwWkhSb0lEd2dKR0pwWnkxa1pYTnJkRzl3S1R0Y2JrQmpkWE4wYjIwdGJXVmthV0VnTFMxdGFXNHRaR1Z6YTNSdmNDQW9kMmxrZEdnZ1BqMGdKR1JsYzJ0MGIzQXBPMXh1UUdOMWMzUnZiUzF0WldScFlTQXRMVzFoZUMxa1pYTnJkRzl3SUNoM2FXUjBhQ0E4SUNSa1pYTnJkRzl3S1R0Y2JseHVRR04xYzNSdmJTMXRaV1JwWVNBdExXMXBiaTFpYVdjdFpHVnphM1J2Y0NBb2QybGtkR2dnUEQwZ0pHSnBaeTFrWlhOcmRHOXdLVHRjYmtCamRYTjBiMjB0YldWa2FXRWdMUzFpYVdjdFpHVnphM1J2Y0NBb2QybGtkR2dnUGowZ0pHSnBaeTFrWlhOcmRHOXdLVHRjYmx4dUx5OGdMUzB0TFMwdExTMHRMUzBnVUVGRVJFbE9SMU12VFVGU1IwbE9VeUF0TFMwdExTMHRMUzB0TFZ4dUpHMWhjbWRwYmkxdGIySnBiR1U2SURJd2NIZzdYRzRrYldGeVoybHVMWFJoWW14bGREb2dNelJ3ZUR0Y2JpUnRZWEpuYVc0dFpHVnphM1J2Y0RvZ056WndlRHRjYmlSdFlYSm5hVzR0WW1sbkxXUmxjMnQwYjNBNklERTBkbmM3SWl3aVFHbHRjRzl5ZENCY0luNWpjM012ZG1GeWFXRmliR1Z6TG5OamMzTmNJanRjYmx4dUxtaGxZV1JsY2lCN1hHNGdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJR0ZzYVdkdUxXbDBaVzF6T2lCalpXNTBaWEk3WEc0Z0lIQmhaR1JwYm1jdGJHVm1kRG9nSkcxaGNtZHBiaTF0YjJKcGJHVTdYRzRnSUhCaFpHUnBibWN0Y21sbmFIUTZJQ1J0WVhKbmFXNHRiVzlpYVd4bE8xeHVYRzRnSUVCdFpXUnBZU0FvTFMxdGFXNHRaR1Z6YTNSdmNDa2dlMXh1SUNBZ0lIQmhaR1JwYm1jdGJHVm1kRG9nSkcxaGNtZHBiaTFrWlhOcmRHOXdPMXh1SUNBZ0lIQmhaR1JwYm1jdGNtbG5hSFE2SUNSdFlYSm5hVzR0WkdWemEzUnZjRHRjYmlBZ2ZWeHVYRzRnSUNZNk9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nSjFKbFlXTjBJRkJ5YjJwbFkzUW5PMXh1SUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dUlDQWdJR1p2Ym5RdGMybDZaVG9nTWpSd2VEdGNiaUFnSUNCc2FXNWxMV2hsYVdkb2REb2dNekZ3ZUR0Y2JpQWdJQ0JtYjI1MExYZGxhV2RvZERvZ056QXdPMXh1SUNBZ0lHTnZiRzl5T2lBak1EQXdPMXh1SUNBZ0lHMWhjbWRwYmkxeWFXZG9kRG9nWVhWMGJ6dGNibHh1SUNBZ0lFQnRaV1JwWVNBb0xTMXRhVzR0WkdWemEzUnZjQ2tnZTF4dUlDQWdJQ0FnTHlvZzBMM1FzQ0RRdnRHQzBZRFF0ZEMzMExyUXRTQmJNVEF5TkN3Z01UUXdNRjBnMFlEUXNOQ3kwTDNRdnRDODBMWFJnTkM5MEw0ZzBZUFFzdEMxMEx2UXVOR0gwTGpRc3RDdzBZTFJqQ0RSZ05DdzBMZlF2TkMxMFlBZzBZalJnTkM0MFlUUmd0Q3dJTkdCSURJMGNIZ2cwTFRRdmlBek5uQjRJQ292WEc0Z0lDQWdJQ0JtYjI1MExYTnBlbVU2SUhOallXeGxLQ1JrWlhOcmRHOXdMQ0FrWW1sbkxXUmxjMnQwYjNBc0lESTBjSGdzSURNMmNIZ3NJREV3TUhaM0tUdGNiaUFnSUNCOVhHNGdJSDFjYm4xY2JseHVMbWhsWVdSbGNpMXVZWFlnZTF4dUlDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQmhiR2xuYmkxcGRHVnRjem9nWTJWdWRHVnlPMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBalptWm1PMXh1ZlZ4dVhHNHVhR1ZoWkdWeUxXNWhkaTFzYVc1cklIdGNiaUFnWm05dWRDMXphWHBsT2lBeE0zQjRPMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dOekF3TzF4dUlDQnNhVzVsTFdobGFXZG9kRG9nTVRod2VEdGNiaUFnYkdWMGRHVnlMWE53WVdOcGJtYzZJQzR3TldWdE8xeHVJQ0IwWlhoMExYUnlZVzV6Wm05eWJUb2dkWEJ3WlhKallYTmxPMXh1SUNCamIyeHZjam9nY21kaVlTZzNPU3dnTnprc0lEYzVMQ0F1TlNrN1hHNGdJSFJ5WVc1emFYUnBiMjQ2SUM0emN6dGNiaUFnY0dGa1pHbHVaem9nTWpod2VDQXdJREl6Y0hnN1hHNGdJR0p2Y21SbGNpMWliM1IwYjIwNklETndlQ0J6YjJ4cFpDQjBjbUZ1YzNCaGNtVnVkRHRjYmx4dUlDQW1MbUZqZEdsMlpTQjdYRzRnSUNBZ1kyOXNiM0k2SUNNMFpqUm1OR1k3WEc0Z0lDQWdZbTl5WkdWeUxXTnZiRzl5T2lBak0yRmpNVFl5TzF4dUlDQjlYRzVjYmlBZ0pqcG9iM1psY2lCN1hHNGdJQ0FnWTI5c2IzSTZJQ013TURBN1hHNGdJSDFjYmx4dUlDQW1JQ3NnSmlCN1hHNGdJQ0FnYldGeVoybHVMV3hsWm5RNklETTJjSGc3WEc0Z0lIMWNibjBpWFgwPSAqL1xuLyogLS0tLS0tLS0tLS0g0KjQoNCY0KTQotCrIC0tLS0tLS0tLS0tKi9cbi8qIC0tLS0tLS0tLS0tINCm0JLQldCi0JAgLS0tLS0tLS0tLS0qL1xuLyogLS0tLS0tLS0tLS0g0KDQkNCX0KDQldCo0JXQndCY0K8g0K3QmtCg0JDQndCQIC0tLS0tLS0tLS0tKi9cbi8qIC0tLS0tLS0tLS0tIFBBRERJTkdTL01BUkdJTlMgLS0tLS0tLS0tLS0qL1xuLmhlYWRlci0xa3lhIHtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmctbGVmdDogMjBweDtcbiAgcGFkZGluZy1yaWdodDogMjBweFxufVxuLmhlYWRlci0xa3lhOjpiZWZvcmUge1xuICBjb250ZW50OiAnUmVhY3QgUHJvamVjdCc7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBmb250LXNpemU6IDEuNXJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMjk7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGNvbG9yOiAjMDAwO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG9cbn1cbi5oZWFkZXItbmF2LTJ6RlQge1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbn1cbi5oZWFkZXItbmF2LWxpbmstM0tQMSB7XG4gIGZvbnQtc2l6ZTogMC44MTI1cmVtO1xuICBmb250LXdlaWdodDogNzAwO1xuICBsaW5lLWhlaWdodDogMS4zODtcbiAgbGV0dGVyLXNwYWNpbmc6IC4wNWVtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBjb2xvcjogcmdiYSg3OSwgNzksIDc5LCAuNSk7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogLjNzO1xuICB0cmFuc2l0aW9uOiAuM3M7XG4gIHBhZGRpbmc6IDI4cHggMCAyM3B4O1xuICBib3JkZXItYm90dG9tOiAzcHggc29saWQgdHJhbnNwYXJlbnRcbn1cbi5oZWFkZXItbmF2LWxpbmstM0tQMS5hY3RpdmUtM1RVNyB7XG4gIGNvbG9yOiAjNGY0ZjRmO1xuICBib3JkZXItY29sb3I6ICMzYWMxNjI7XG59XG4uaGVhZGVyLW5hdi1saW5rLTNLUDE6aG92ZXIge1xuICBjb2xvcjogIzAwMDtcbn1cbi5oZWFkZXItbmF2LWxpbmstM0tQMSArIC5oZWFkZXItbmF2LWxpbmstM0tQMSB7XG4gIG1hcmdpbi1sZWZ0OiAzNnB4O1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAuaGVhZGVyLTFreWEge1xuICAgIHBhZGRpbmctbGVmdDogNzZweDtcbiAgICBwYWRkaW5nLXJpZ2h0OiA3NnB4XG4gIH1cbiAgLmhlYWRlci0xa3lhOjpiZWZvcmUge1xuICAgIC8qINC90LAg0L7RgtGA0LXQt9C60LUgWzEwMjQsIDE0MDBdINGA0LDQstC90L7QvNC10YDQvdC+INGD0LLQtdC70LjRh9C40LLQsNGC0Ywg0YDQsNC30LzQtdGAINGI0YDQuNGE0YLQsCDRgSAyNHB4INC00L4gMzZweCAqL1xuICAgIGZvbnQtc2l6ZTogY2FsYygoKDIuMjUgLSAxLjUpICogKCgxMDB2dykgLSA2NHJlbSkgLyAoOTAgLSA2NCkpICsgMS41cmVtKVxuICB9XG59XG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWk0dUwzTnlZeTlqYzNNdmRtRnlhV0ZpYkdWekxuTmpjM01pTENJdUxpOXpjbU12YW5NdlkyOXRjRzl1Wlc1MGN5OW9aV0ZrWlhJdmFXNWtaWGd1YzJOemN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkJRU3h0UTBGQmFVTTdRVUZUYWtNc2EwTkJRV2RETzBGQllXaERMRGhEUVVFMFF6dEJRV2xDTlVNc05rTkJRVEpETzBGRGNrTXpRenRGUVVORkxIRkNRVUZqTzBWQlFXUXNZMEZCWXp0RlFVTmtMSFZDUVVGdlFqdE5RVUZ3UWl4dlFrRkJiMEk3UlVGRGNFSXNiVUpCUVRaQ08wVkJRemRDTEcxQ1FVRTRRanREUVhGQ0wwSTdRVUZrUXp0SlFVTkZMSGxDUVVGNVFqdEpRVU42UWl4bFFVRmxPMGxCUTJZc2EwSkJRV2RDTzBsQlEyaENMR3RDUVVGclFqdEpRVU5zUWl4cFFrRkJhVUk3U1VGRGFrSXNXVUZCV1R0SlFVTmFMR3RDUVVGdFFqdEhRVTF3UWp0QlFVZElPMFZCUTBVc2NVSkJRV003UlVGQlpDeGpRVUZqTzBWQlEyUXNkVUpCUVc5Q08wMUJRWEJDTEc5Q1FVRnZRanRGUVVOd1FpeDFRa0ZCZFVJN1EwRkRlRUk3UVVGRlJEdEZRVU5GTEhGQ1FVRm5RanRGUVVOb1FpeHBRa0ZCYVVJN1JVRkRha0lzYTBKQlFXdENPMFZCUTJ4Q0xITkNRVUZ6UWp0RlFVTjBRaXd3UWtGQk1FSTdSVUZETVVJc05FSkJRVFJDTzBWQlF6VkNMSGRDUVVGblFqdEZRVUZvUWl4blFrRkJaMEk3UlVGRGFFSXNjVUpCUVhGQ08wVkJRM0pDTEc5RFFVRnhRenREUVdOMFF6dEJRVnBETzBsQlEwVXNaVUZCWlR0SlFVTm1MSE5DUVVGelFqdEhRVU4yUWp0QlFVVkVPMGxCUTBVc1dVRkJXVHRIUVVOaU8wRkJSVVE3U1VGRFJTeHJRa0ZCYTBJN1IwRkRia0k3UVVGcVJFUTdRVUZPUmp0SlFVOUpMRzFDUVVFNFFqdEpRVU01UWl4dFFrRkJLMEk3UTBGcFFteERPMEZCWkVNN1RVRlZTU3hwUmtGQmFVWTdUVUZEYWtZc2QwVkJRVFJFTzBkQlJTOUVPMGRCWmtFaUxDSm1hV3hsSWpvaUxpNHZjM0pqTDJwekwyTnZiWEJ2Ym1WdWRITXZhR1ZoWkdWeUwybHVaR1Y0TG5OamMzTWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUl2THlBdExTMHRMUzB0TFMwdExTRFFxTkNnMEpqUXBOQ2kwS3NnTFMwdExTMHRMUzB0TFMxY2JpUk5kWE5sYjFOaGJuTTZJQ2ROZFhObGJ5QlRZVzV6Snl3Z2MyRnVjeTF6WlhKcFpqdGNiaVJHYjI1MFZHaHBiam9nTVRBd08xeHVKRVp2Ym5STWFXZG9kRG9nTXpBd08xeHVKRVp2Ym5SU1pXZDFiR0Z5T2lBME1EQTdYRzRrUm05dWRFMWxaR2wxYlRvZ05UQXdPMXh1SkVadmJuUkNiMnhrT2lBM01EQTdYRzRrUm05dWRFSnNZV05yT2lBNU1EQTdYRzVjYmk4dklDMHRMUzB0TFMwdExTMHRJTkNtMEpMUWxkQ2kwSkFnTFMwdExTMHRMUzB0TFMxY2JpUmpiMnh2Y2kxM2FHbDBaVG9nSTJabVptWm1aanRjYmlSamIyeHZjaTFpYkdGamF5MWpiR0Z6YzJsak9pQWpNREF3TURBd08xeHVKR052Ykc5eUxXSnNZV05yTFdaaFpHVmtPaUFqTXprelpETTVPMXh1SkdOdmJHOXlMV0pzWVdOckxXeHBaMmgwT2lBak5HWTBaalJtTzF4dUpHTnZiRzl5TFdkeVlYazZJQ05oWkdGa1lXUTdYRzRrWTI5c2IzSXRaM0psWlc0NklDTXlNbUU0TkdFN1hHNGtZMjlzYjNJdFozSmxaVzR0YkdsbmFIUTZJQ016WVdNeE5qSTdYRzRrWTI5c2IzSXRjR2x1YXpvZ0kyWm1ObVkxWmp0Y2JpUmpiMnh2Y2kxbmIyeGtPaUFqWm1aa09EZGlPMXh1SkdOdmJHOXlMV0pzZFdVNklDTTJabUl3WkdNN1hHNGtZMjlzYjNJdGNIVnljR3hsT2lBalpEQTNNMkkzTzF4dVhHNHZMeUF0TFMwdExTMHRMUzB0TFNEUW9OQ1EwSmZRb05DVjBLalFsZENkMEpqUXJ5RFFyZENhMEtEUWtOQ2QwSkFnTFMwdExTMHRMUzB0TFMxY2JpUnRiMkpwYkdVNklETXlNSEI0TzF4dUpIUmhZbXhsZERvZ056WTRjSGc3WEc0a1pHVnphM1J2Y0RvZ01UQXlOSEI0TzF4dUpHSnBaeTFrWlhOcmRHOXdPaUF4TkRRd2NIZzdYRzVjYmtCamRYTjBiMjB0YldWa2FXRWdMUzEwWVdKc1pYUWdLQ1IwWVdKc1pYUWdQRDBnZDJsa2RHZ2dQQ0FrWkdWemEzUnZjQ2s3WEc1QVkzVnpkRzl0TFcxbFpHbGhJQzB0YldsdUxYUmhZbXhsZENBb2QybGtkR2dnUGowZ0pIUmhZbXhsZENrN1hHNUFZM1Z6ZEc5dExXMWxaR2xoSUMwdGJXRjRMWFJoWW14bGRDQW9kMmxrZEdnZ1BDQWtkR0ZpYkdWMEtUdGNibHh1UUdOMWMzUnZiUzF0WldScFlTQXRMV1JsYzJ0MGIzQWdLQ1JrWlhOcmRHOXdJRHc5SUhkcFpIUm9JRHdnSkdKcFp5MWtaWE5yZEc5d0tUdGNia0JqZFhOMGIyMHRiV1ZrYVdFZ0xTMXRhVzR0WkdWemEzUnZjQ0FvZDJsa2RHZ2dQajBnSkdSbGMydDBiM0FwTzF4dVFHTjFjM1J2YlMxdFpXUnBZU0F0TFcxaGVDMWtaWE5yZEc5d0lDaDNhV1IwYUNBOElDUmtaWE5yZEc5d0tUdGNibHh1UUdOMWMzUnZiUzF0WldScFlTQXRMVzFwYmkxaWFXY3RaR1Z6YTNSdmNDQW9kMmxrZEdnZ1BEMGdKR0pwWnkxa1pYTnJkRzl3S1R0Y2JrQmpkWE4wYjIwdGJXVmthV0VnTFMxaWFXY3RaR1Z6YTNSdmNDQW9kMmxrZEdnZ1BqMGdKR0pwWnkxa1pYTnJkRzl3S1R0Y2JseHVMeThnTFMwdExTMHRMUzB0TFMwZ1VFRkVSRWxPUjFNdlRVRlNSMGxPVXlBdExTMHRMUzB0TFMwdExWeHVKRzFoY21kcGJpMXRiMkpwYkdVNklESXdjSGc3WEc0a2JXRnlaMmx1TFhSaFlteGxkRG9nTXpSd2VEdGNiaVJ0WVhKbmFXNHRaR1Z6YTNSdmNEb2dOelp3ZUR0Y2JpUnRZWEpuYVc0dFltbG5MV1JsYzJ0MGIzQTZJREUwZG5jN0lpd2lRR2x0Y0c5eWRDQmNJbjVqYzNNdmRtRnlhV0ZpYkdWekxuTmpjM05jSWp0Y2JseHVMbWhsWVdSbGNpQjdYRzRnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUdGc2FXZHVMV2wwWlcxek9pQmpaVzUwWlhJN1hHNGdJSEJoWkdScGJtY3RiR1ZtZERvZ0pHMWhjbWRwYmkxdGIySnBiR1U3WEc0Z0lIQmhaR1JwYm1jdGNtbG5hSFE2SUNSdFlYSm5hVzR0Ylc5aWFXeGxPMXh1WEc0Z0lFQnRaV1JwWVNBb0xTMXRhVzR0WkdWemEzUnZjQ2tnZTF4dUlDQWdJSEJoWkdScGJtY3RiR1ZtZERvZ0pHMWhjbWRwYmkxa1pYTnJkRzl3TzF4dUlDQWdJSEJoWkdScGJtY3RjbWxuYUhRNklDUnRZWEpuYVc0dFpHVnphM1J2Y0R0Y2JpQWdmVnh1WEc0Z0lDWTZPbUpsWm05eVpTQjdYRzRnSUNBZ1kyOXVkR1Z1ZERvZ0oxSmxZV04wSUZCeWIycGxZM1FuTzF4dUlDQWdJR1JwYzNCc1lYazZJR0pzYjJOck8xeHVJQ0FnSUdadmJuUXRjMmw2WlRvZ01qUndlRHRjYmlBZ0lDQnNhVzVsTFdobGFXZG9kRG9nTXpGd2VEdGNiaUFnSUNCbWIyNTBMWGRsYVdkb2REb2dOekF3TzF4dUlDQWdJR052Ykc5eU9pQWpNREF3TzF4dUlDQWdJRzFoY21kcGJpMXlhV2RvZERvZ1lYVjBienRjYmx4dUlDQWdJRUJ0WldScFlTQW9MUzF0YVc0dFpHVnphM1J2Y0NrZ2UxeHVJQ0FnSUNBZ0x5b2cwTDNRc0NEUXZ0R0MwWURRdGRDMzBMclF0U0JiTVRBeU5Dd2dNVFF3TUYwZzBZRFFzTkN5MEwzUXZ0QzgwTFhSZ05DOTBMNGcwWVBRc3RDMTBMdlF1TkdIMExqUXN0Q3cwWUxSakNEUmdOQ3cwTGZRdk5DMTBZQWcwWWpSZ05DNDBZVFJndEN3SU5HQklESTBjSGdnMExUUXZpQXpObkI0SUNvdlhHNGdJQ0FnSUNCbWIyNTBMWE5wZW1VNklITmpZV3hsS0NSa1pYTnJkRzl3TENBa1ltbG5MV1JsYzJ0MGIzQXNJREkwY0hnc0lETTJjSGdzSURFd01IWjNLVHRjYmlBZ0lDQjlYRzRnSUgxY2JuMWNibHh1TG1obFlXUmxjaTF1WVhZZ2UxeHVJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHVJQ0JoYkdsbmJpMXBkR1Z0Y3pvZ1kyVnVkR1Z5TzF4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWpabVptTzF4dWZWeHVYRzR1YUdWaFpHVnlMVzVoZGkxc2FXNXJJSHRjYmlBZ1ptOXVkQzF6YVhwbE9pQXhNM0I0TzF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nTnpBd08xeHVJQ0JzYVc1bExXaGxhV2RvZERvZ01UaHdlRHRjYmlBZ2JHVjBkR1Z5TFhOd1lXTnBibWM2SUM0d05XVnRPMXh1SUNCMFpYaDBMWFJ5WVc1elptOXliVG9nZFhCd1pYSmpZWE5sTzF4dUlDQmpiMnh2Y2pvZ2NtZGlZU2czT1N3Z056a3NJRGM1TENBdU5TazdYRzRnSUhSeVlXNXphWFJwYjI0NklDNHpjenRjYmlBZ2NHRmtaR2x1WnpvZ01qaHdlQ0F3SURJemNIZzdYRzRnSUdKdmNtUmxjaTFpYjNSMGIyMDZJRE53ZUNCemIyeHBaQ0IwY21GdWMzQmhjbVZ1ZER0Y2JseHVJQ0FtTG1GamRHbDJaU0I3WEc0Z0lDQWdZMjlzYjNJNklDTTBaalJtTkdZN1hHNGdJQ0FnWW05eVpHVnlMV052Ykc5eU9pQWpNMkZqTVRZeU8xeHVJQ0I5WEc1Y2JpQWdKanBvYjNabGNpQjdYRzRnSUNBZ1kyOXNiM0k2SUNNd01EQTdYRzRnSUgxY2JseHVJQ0FtSUNzZ0ppQjdYRzRnSUNBZ2JXRnlaMmx1TFd4bFpuUTZJRE0yY0hnN1hHNGdJSDFjYm4waVhYMD0gKi9cbi8qIC0tLS0tLS0tLS0tINCo0KDQmNCk0KLQqyAtLS0tLS0tLS0tLSovXG4vKiAtLS0tLS0tLS0tLSDQptCS0JXQotCQIC0tLS0tLS0tLS0tKi9cbi8qIC0tLS0tLS0tLS0tINCg0JDQl9Cg0JXQqNCV0J3QmNCvINCt0JrQoNCQ0J3QkCAtLS0tLS0tLS0tLSovXG4vKiAtLS0tLS0tLS0tLSBQQURESU5HUy9NQVJHSU5TIC0tLS0tLS0tLS0tKi9cbi5oZWFkZXItMWt5YSB7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBwYWRkaW5nLWxlZnQ6IDIwcHg7XG4gIHBhZGRpbmctcmlnaHQ6IDIwcHhcbn1cbi5oZWFkZXItMWt5YTo6YmVmb3JlIHtcbiAgY29udGVudDogJ1JlYWN0IFByb2plY3QnO1xuICBkaXNwbGF5OiBibG9jaztcbiAgZm9udC1zaXplOiAxLjVyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjI5O1xuICBmb250LXdlaWdodDogNzAwO1xuICBjb2xvcjogIzAwMDtcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvXG59XG4uaGVhZGVyLW5hdi0yekZUIHtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG59XG4uaGVhZGVyLW5hdi1saW5rLTNLUDEge1xuICBmb250LXNpemU6IDAuODEyNXJlbTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgbGluZS1oZWlnaHQ6IDEuMzg7XG4gIGxldHRlci1zcGFjaW5nOiAuMDVlbTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgY29sb3I6IHJnYmEoNzksIDc5LCA3OSwgLjUpO1xuICAtd2Via2l0LXRyYW5zaXRpb246IC4zcztcbiAgdHJhbnNpdGlvbjogLjNzO1xuICBwYWRkaW5nOiAyOHB4IDAgMjNweDtcbiAgYm9yZGVyLWJvdHRvbTogM3B4IHNvbGlkIHRyYW5zcGFyZW50XG59XG4uaGVhZGVyLW5hdi1saW5rLTNLUDEuYWN0aXZlLTNUVTcge1xuICBjb2xvcjogIzRmNGY0ZjtcbiAgYm9yZGVyLWNvbG9yOiAjM2FjMTYyO1xufVxuLmhlYWRlci1uYXYtbGluay0zS1AxOmhvdmVyIHtcbiAgY29sb3I6ICMwMDA7XG59XG4uaGVhZGVyLW5hdi1saW5rLTNLUDEgKyAuaGVhZGVyLW5hdi1saW5rLTNLUDEge1xuICBtYXJnaW4tbGVmdDogMzZweDtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLmhlYWRlci0xa3lhIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDc2cHg7XG4gICAgcGFkZGluZy1yaWdodDogNzZweFxuICB9XG4gIC5oZWFkZXItMWt5YTo6YmVmb3JlIHtcbiAgICAvKiDQvdCwINC+0YLRgNC10LfQutC1IFsxMDI0LCAxNDAwXSDRgNCw0LLQvdC+0LzQtdGA0L3QviDRg9Cy0LXQu9C40YfQuNCy0LDRgtGMINGA0LDQt9C80LXRgCDRiNGA0LjRhNGC0LAg0YEgMjRweCDQtNC+IDM2cHggKi9cbiAgICBmb250LXNpemU6IGNhbGMoKCgyLjI1IC0gMS41KSAqICgoMTAwdncpIC0gNjRyZW0pIC8gKDkwIC0gNjQpKSArIDEuNXJlbSlcbiAgfVxufVxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklpNHVMM055WXk5amMzTXZkbUZ5YVdGaWJHVnpMbk5qYzNNaUxDSXVMaTl6Y21NdmFuTXZZMjl0Y0c5dVpXNTBjeTlvWldGa1pYSXZhVzVrWlhndWMyTnpjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lRVUZCUVN4dFEwRkJhVU03UVVGVGFrTXNhME5CUVdkRE8wRkJZV2hETERoRFFVRTBRenRCUVdsQ05VTXNOa05CUVRKRE8wRkRja016UXp0RlFVTkZMSEZDUVVGak8wVkJRV1FzWTBGQll6dEZRVU5rTEhWQ1FVRnZRanROUVVGd1FpeHZRa0ZCYjBJN1JVRkRjRUlzYlVKQlFUWkNPMFZCUXpkQ0xHMUNRVUU0UWp0RFFYRkNMMEk3UVVGa1F6dEpRVU5GTEhsQ1FVRjVRanRKUVVONlFpeGxRVUZsTzBsQlEyWXNhMEpCUVdkQ08wbEJRMmhDTEd0Q1FVRnJRanRKUVVOc1FpeHBRa0ZCYVVJN1NVRkRha0lzV1VGQldUdEpRVU5hTEd0Q1FVRnRRanRIUVUxd1FqdEJRVWRJTzBWQlEwVXNjVUpCUVdNN1JVRkJaQ3hqUVVGak8wVkJRMlFzZFVKQlFXOUNPMDFCUVhCQ0xHOUNRVUZ2UWp0RlFVTndRaXgxUWtGQmRVSTdRMEZEZUVJN1FVRkZSRHRGUVVORkxIRkNRVUZuUWp0RlFVTm9RaXhwUWtGQmFVSTdSVUZEYWtJc2EwSkJRV3RDTzBWQlEyeENMSE5DUVVGelFqdEZRVU4wUWl3d1FrRkJNRUk3UlVGRE1VSXNORUpCUVRSQ08wVkJRelZDTEhkQ1FVRm5RanRGUVVGb1FpeG5Ra0ZCWjBJN1JVRkRhRUlzY1VKQlFYRkNPMFZCUTNKQ0xHOURRVUZ4UXp0RFFXTjBRenRCUVZwRE8wbEJRMFVzWlVGQlpUdEpRVU5tTEhOQ1FVRnpRanRIUVVOMlFqdEJRVVZFTzBsQlEwVXNXVUZCV1R0SFFVTmlPMEZCUlVRN1NVRkRSU3hyUWtGQmEwSTdSMEZEYmtJN1FVRnFSRVE3UVVGT1JqdEpRVTlKTEcxQ1FVRTRRanRKUVVNNVFpeHRRa0ZCSzBJN1EwRnBRbXhETzBGQlpFTTdUVUZWU1N4cFJrRkJhVVk3VFVGRGFrWXNkMFZCUVRSRU8wZEJSUzlFTzBkQlprRWlMQ0ptYVd4bElqb2lMaTR2YzNKakwycHpMMk52YlhCdmJtVnVkSE12YUdWaFpHVnlMMmx1WkdWNExuTmpjM01pTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lJdkx5QXRMUzB0TFMwdExTMHRMU0RRcU5DZzBKalFwTkNpMEtzZ0xTMHRMUzB0TFMwdExTMWNiaVJOZFhObGIxTmhibk02SUNkTmRYTmxieUJUWVc1ekp5d2djMkZ1Y3kxelpYSnBaanRjYmlSR2IyNTBWR2hwYmpvZ01UQXdPMXh1SkVadmJuUk1hV2RvZERvZ016QXdPMXh1SkVadmJuUlNaV2QxYkdGeU9pQTBNREE3WEc0a1JtOXVkRTFsWkdsMWJUb2dOVEF3TzF4dUpFWnZiblJDYjJ4a09pQTNNREE3WEc0a1JtOXVkRUpzWVdOck9pQTVNREE3WEc1Y2JpOHZJQzB0TFMwdExTMHRMUzB0SU5DbTBKTFFsZENpMEpBZ0xTMHRMUzB0TFMwdExTMWNiaVJqYjJ4dmNpMTNhR2wwWlRvZ0kyWm1abVptWmp0Y2JpUmpiMnh2Y2kxaWJHRmpheTFqYkdGemMybGpPaUFqTURBd01EQXdPMXh1SkdOdmJHOXlMV0pzWVdOckxXWmhaR1ZrT2lBak16a3paRE01TzF4dUpHTnZiRzl5TFdKc1lXTnJMV3hwWjJoME9pQWpOR1kwWmpSbU8xeHVKR052Ykc5eUxXZHlZWGs2SUNOaFpHRmtZV1E3WEc0a1kyOXNiM0l0WjNKbFpXNDZJQ015TW1FNE5HRTdYRzRrWTI5c2IzSXRaM0psWlc0dGJHbG5hSFE2SUNNellXTXhOakk3WEc0a1kyOXNiM0l0Y0dsdWF6b2dJMlptTm1ZMVpqdGNiaVJqYjJ4dmNpMW5iMnhrT2lBalptWmtPRGRpTzF4dUpHTnZiRzl5TFdKc2RXVTZJQ00yWm1Jd1pHTTdYRzRrWTI5c2IzSXRjSFZ5Y0d4bE9pQWpaREEzTTJJM08xeHVYRzR2THlBdExTMHRMUzB0TFMwdExTRFFvTkNRMEpmUW9OQ1YwS2pRbGRDZDBKalFyeURRcmRDYTBLRFFrTkNkMEpBZ0xTMHRMUzB0TFMwdExTMWNiaVJ0YjJKcGJHVTZJRE15TUhCNE8xeHVKSFJoWW14bGREb2dOelk0Y0hnN1hHNGtaR1Z6YTNSdmNEb2dNVEF5TkhCNE8xeHVKR0pwWnkxa1pYTnJkRzl3T2lBeE5EUXdjSGc3WEc1Y2JrQmpkWE4wYjIwdGJXVmthV0VnTFMxMFlXSnNaWFFnS0NSMFlXSnNaWFFnUEQwZ2QybGtkR2dnUENBa1pHVnphM1J2Y0NrN1hHNUFZM1Z6ZEc5dExXMWxaR2xoSUMwdGJXbHVMWFJoWW14bGRDQW9kMmxrZEdnZ1BqMGdKSFJoWW14bGRDazdYRzVBWTNWemRHOXRMVzFsWkdsaElDMHRiV0Y0TFhSaFlteGxkQ0FvZDJsa2RHZ2dQQ0FrZEdGaWJHVjBLVHRjYmx4dVFHTjFjM1J2YlMxdFpXUnBZU0F0TFdSbGMydDBiM0FnS0NSa1pYTnJkRzl3SUR3OUlIZHBaSFJvSUR3Z0pHSnBaeTFrWlhOcmRHOXdLVHRjYmtCamRYTjBiMjB0YldWa2FXRWdMUzF0YVc0dFpHVnphM1J2Y0NBb2QybGtkR2dnUGowZ0pHUmxjMnQwYjNBcE8xeHVRR04xYzNSdmJTMXRaV1JwWVNBdExXMWhlQzFrWlhOcmRHOXdJQ2gzYVdSMGFDQThJQ1JrWlhOcmRHOXdLVHRjYmx4dVFHTjFjM1J2YlMxdFpXUnBZU0F0TFcxcGJpMWlhV2N0WkdWemEzUnZjQ0FvZDJsa2RHZ2dQRDBnSkdKcFp5MWtaWE5yZEc5d0tUdGNia0JqZFhOMGIyMHRiV1ZrYVdFZ0xTMWlhV2N0WkdWemEzUnZjQ0FvZDJsa2RHZ2dQajBnSkdKcFp5MWtaWE5yZEc5d0tUdGNibHh1THk4Z0xTMHRMUzB0TFMwdExTMGdVRUZFUkVsT1IxTXZUVUZTUjBsT1V5QXRMUzB0TFMwdExTMHRMVnh1SkcxaGNtZHBiaTF0YjJKcGJHVTZJREl3Y0hnN1hHNGtiV0Z5WjJsdUxYUmhZbXhsZERvZ016UndlRHRjYmlSdFlYSm5hVzR0WkdWemEzUnZjRG9nTnpad2VEdGNiaVJ0WVhKbmFXNHRZbWxuTFdSbGMydDBiM0E2SURFMGRuYzdJaXdpUUdsdGNHOXlkQ0JjSW41amMzTXZkbUZ5YVdGaWJHVnpMbk5qYzNOY0lqdGNibHh1TG1obFlXUmxjaUI3WEc0Z0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lHRnNhV2R1TFdsMFpXMXpPaUJqWlc1MFpYSTdYRzRnSUhCaFpHUnBibWN0YkdWbWREb2dKRzFoY21kcGJpMXRiMkpwYkdVN1hHNGdJSEJoWkdScGJtY3RjbWxuYUhRNklDUnRZWEpuYVc0dGJXOWlhV3hsTzF4dVhHNGdJRUJ0WldScFlTQW9MUzF0YVc0dFpHVnphM1J2Y0NrZ2UxeHVJQ0FnSUhCaFpHUnBibWN0YkdWbWREb2dKRzFoY21kcGJpMWtaWE5yZEc5d08xeHVJQ0FnSUhCaFpHUnBibWN0Y21sbmFIUTZJQ1J0WVhKbmFXNHRaR1Z6YTNSdmNEdGNiaUFnZlZ4dVhHNGdJQ1k2T21KbFptOXlaU0I3WEc0Z0lDQWdZMjl1ZEdWdWREb2dKMUpsWVdOMElGQnliMnBsWTNRbk8xeHVJQ0FnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dNalJ3ZUR0Y2JpQWdJQ0JzYVc1bExXaGxhV2RvZERvZ016RndlRHRjYmlBZ0lDQm1iMjUwTFhkbGFXZG9kRG9nTnpBd08xeHVJQ0FnSUdOdmJHOXlPaUFqTURBd08xeHVJQ0FnSUcxaGNtZHBiaTF5YVdkb2REb2dZWFYwYnp0Y2JseHVJQ0FnSUVCdFpXUnBZU0FvTFMxdGFXNHRaR1Z6YTNSdmNDa2dlMXh1SUNBZ0lDQWdMeW9nMEwzUXNDRFF2dEdDMFlEUXRkQzMwTHJRdFNCYk1UQXlOQ3dnTVRRd01GMGcwWURRc05DeTBMM1F2dEM4MExYUmdOQzkwTDRnMFlQUXN0QzEwTHZRdU5HSDBMalFzdEN3MFlMUmpDRFJnTkN3MExmUXZOQzEwWUFnMFlqUmdOQzQwWVRSZ3RDd0lOR0JJREkwY0hnZzBMVFF2aUF6Tm5CNElDb3ZYRzRnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJSE5qWVd4bEtDUmtaWE5yZEc5d0xDQWtZbWxuTFdSbGMydDBiM0FzSURJMGNIZ3NJRE0yY0hnc0lERXdNSFozS1R0Y2JpQWdJQ0I5WEc0Z0lIMWNibjFjYmx4dUxtaGxZV1JsY2kxdVlYWWdlMXh1SUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh1SUNCaGJHbG5iaTFwZEdWdGN6b2dZMlZ1ZEdWeU8xeHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFqWm1abU8xeHVmVnh1WEc0dWFHVmhaR1Z5TFc1aGRpMXNhVzVySUh0Y2JpQWdabTl1ZEMxemFYcGxPaUF4TTNCNE8xeHVJQ0JtYjI1MExYZGxhV2RvZERvZ056QXdPMXh1SUNCc2FXNWxMV2hsYVdkb2REb2dNVGh3ZUR0Y2JpQWdiR1YwZEdWeUxYTndZV05wYm1jNklDNHdOV1Z0TzF4dUlDQjBaWGgwTFhSeVlXNXpabTl5YlRvZ2RYQndaWEpqWVhObE8xeHVJQ0JqYjJ4dmNqb2djbWRpWVNnM09Td2dOemtzSURjNUxDQXVOU2s3WEc0Z0lIUnlZVzV6YVhScGIyNDZJQzR6Y3p0Y2JpQWdjR0ZrWkdsdVp6b2dNamh3ZUNBd0lESXpjSGc3WEc0Z0lHSnZjbVJsY2kxaWIzUjBiMjA2SUROd2VDQnpiMnhwWkNCMGNtRnVjM0JoY21WdWREdGNibHh1SUNBbUxtRmpkR2wyWlNCN1hHNGdJQ0FnWTI5c2IzSTZJQ00wWmpSbU5HWTdYRzRnSUNBZ1ltOXlaR1Z5TFdOdmJHOXlPaUFqTTJGak1UWXlPMXh1SUNCOVhHNWNiaUFnSmpwb2IzWmxjaUI3WEc0Z0lDQWdZMjlzYjNJNklDTXdNREE3WEc0Z0lIMWNibHh1SUNBbUlDc2dKaUI3WEc0Z0lDQWdiV0Z5WjJsdUxXeGxablE2SURNMmNIZzdYRzRnSUgxY2JuMGlYWDA9ICovXG4vKiAtLS0tLS0tLS0tLSDQqNCg0JjQpNCi0KsgLS0tLS0tLS0tLS0qL1xuLyogLS0tLS0tLS0tLS0g0KbQktCV0KLQkCAtLS0tLS0tLS0tLSovXG4vKiAtLS0tLS0tLS0tLSDQoNCQ0JfQoNCV0KjQldCd0JjQryDQrdCa0KDQkNCd0JAgLS0tLS0tLS0tLS0qL1xuLyogLS0tLS0tLS0tLS0gUEFERElOR1MvTUFSR0lOUyAtLS0tLS0tLS0tLSovXG4uaGVhZGVyLTFreWEge1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcGFkZGluZy1sZWZ0OiAyMHB4O1xuICBwYWRkaW5nLXJpZ2h0OiAyMHB4XG59XG4uaGVhZGVyLTFreWE6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdSZWFjdCBQcm9qZWN0JztcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtc2l6ZTogMS41cmVtO1xuICBsaW5lLWhlaWdodDogMS4yOTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgY29sb3I6ICMwMDA7XG4gIG1hcmdpbi1yaWdodDogYXV0b1xufVxuLmhlYWRlci1uYXYtMnpGVCB7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xufVxuLmhlYWRlci1uYXYtbGluay0zS1AxIHtcbiAgZm9udC1zaXplOiAwLjgxMjVyZW07XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjM4O1xuICBsZXR0ZXItc3BhY2luZzogLjA1ZW07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGNvbG9yOiByZ2JhKDc5LCA3OSwgNzksIC41KTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiAuM3M7XG4gIHRyYW5zaXRpb246IC4zcztcbiAgcGFkZGluZzogMjhweCAwIDIzcHg7XG4gIGJvcmRlci1ib3R0b206IDNweCBzb2xpZCB0cmFuc3BhcmVudFxufVxuLmhlYWRlci1uYXYtbGluay0zS1AxLmFjdGl2ZS0zVFU3IHtcbiAgY29sb3I6ICM0ZjRmNGY7XG4gIGJvcmRlci1jb2xvcjogIzNhYzE2Mjtcbn1cbi5oZWFkZXItbmF2LWxpbmstM0tQMTpob3ZlciB7XG4gIGNvbG9yOiAjMDAwO1xufVxuLmhlYWRlci1uYXYtbGluay0zS1AxICsgLmhlYWRlci1uYXYtbGluay0zS1AxIHtcbiAgbWFyZ2luLWxlZnQ6IDM2cHg7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5oZWFkZXItMWt5YSB7XG4gICAgcGFkZGluZy1sZWZ0OiA3NnB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDc2cHhcbiAgfVxuICAuaGVhZGVyLTFreWE6OmJlZm9yZSB7XG4gICAgLyog0L3QsCDQvtGC0YDQtdC30LrQtSBbMTAyNCwgMTQwMF0g0YDQsNCy0L3QvtC80LXRgNC90L4g0YPQstC10LvQuNGH0LjQstCw0YLRjCDRgNCw0LfQvNC10YAg0YjRgNC40YTRgtCwINGBIDI0cHgg0LTQviAzNnB4ICovXG4gICAgZm9udC1zaXplOiBjYWxjKCgoMi4yNSAtIDEuNSkgKiAoKDEwMHZ3KSAtIDY0cmVtKSAvICg5MCAtIDY0KSkgKyAxLjVyZW0pXG4gIH1cbn1cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJaTR1TDNOeVl5OWpjM012ZG1GeWFXRmliR1Z6TG5OamMzTWlMQ0l1TGk5emNtTXZhbk12WTI5dGNHOXVaVzUwY3k5b1pXRmtaWEl2YVc1a1pYZ3VjMk56Y3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFTeHRRMEZCYVVNN1FVRlRha01zYTBOQlFXZERPMEZCWVdoRExEaERRVUUwUXp0QlFXbENOVU1zTmtOQlFUSkRPMEZEY2tNelF6dEZRVU5GTEhGQ1FVRmpPMFZCUVdRc1kwRkJZenRGUVVOa0xIVkNRVUZ2UWp0TlFVRndRaXh2UWtGQmIwSTdSVUZEY0VJc2JVSkJRVFpDTzBWQlF6ZENMRzFDUVVFNFFqdERRWEZDTDBJN1FVRmtRenRKUVVORkxIbENRVUY1UWp0SlFVTjZRaXhsUVVGbE8wbEJRMllzYTBKQlFXZENPMGxCUTJoQ0xHdENRVUZyUWp0SlFVTnNRaXhwUWtGQmFVSTdTVUZEYWtJc1dVRkJXVHRKUVVOYUxHdENRVUZ0UWp0SFFVMXdRanRCUVVkSU8wVkJRMFVzY1VKQlFXTTdSVUZCWkN4alFVRmpPMFZCUTJRc2RVSkJRVzlDTzAxQlFYQkNMRzlDUVVGdlFqdEZRVU53UWl4MVFrRkJkVUk3UTBGRGVFSTdRVUZGUkR0RlFVTkZMSEZDUVVGblFqdEZRVU5vUWl4cFFrRkJhVUk3UlVGRGFrSXNhMEpCUVd0Q08wVkJRMnhDTEhOQ1FVRnpRanRGUVVOMFFpd3dRa0ZCTUVJN1JVRkRNVUlzTkVKQlFUUkNPMFZCUXpWQ0xIZENRVUZuUWp0RlFVRm9RaXhuUWtGQlowSTdSVUZEYUVJc2NVSkJRWEZDTzBWQlEzSkNMRzlEUVVGeFF6dERRV04wUXp0QlFWcERPMGxCUTBVc1pVRkJaVHRKUVVObUxITkNRVUZ6UWp0SFFVTjJRanRCUVVWRU8wbEJRMFVzV1VGQldUdEhRVU5pTzBGQlJVUTdTVUZEUlN4clFrRkJhMEk3UjBGRGJrSTdRVUZxUkVRN1FVRk9SanRKUVU5SkxHMUNRVUU0UWp0SlFVTTVRaXh0UWtGQkswSTdRMEZwUW14RE8wRkJaRU03VFVGVlNTeHBSa0ZCYVVZN1RVRkRha1lzZDBWQlFUUkVPMGRCUlM5RU8wZEJaa0VpTENKbWFXeGxJam9pTGk0dmMzSmpMMnB6TDJOdmJYQnZibVZ1ZEhNdmFHVmhaR1Z5TDJsdVpHVjRMbk5qYzNNaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SXZMeUF0TFMwdExTMHRMUzB0TFNEUXFOQ2cwSmpRcE5DaTBLc2dMUzB0TFMwdExTMHRMUzFjYmlSTmRYTmxiMU5oYm5NNklDZE5kWE5sYnlCVFlXNXpKeXdnYzJGdWN5MXpaWEpwWmp0Y2JpUkdiMjUwVkdocGJqb2dNVEF3TzF4dUpFWnZiblJNYVdkb2REb2dNekF3TzF4dUpFWnZiblJTWldkMWJHRnlPaUEwTURBN1hHNGtSbTl1ZEUxbFpHbDFiVG9nTlRBd08xeHVKRVp2Ym5SQ2IyeGtPaUEzTURBN1hHNGtSbTl1ZEVKc1lXTnJPaUE1TURBN1hHNWNiaTh2SUMwdExTMHRMUzB0TFMwdElOQ20wSkxRbGRDaTBKQWdMUzB0TFMwdExTMHRMUzFjYmlSamIyeHZjaTEzYUdsMFpUb2dJMlptWm1abVpqdGNiaVJqYjJ4dmNpMWliR0ZqYXkxamJHRnpjMmxqT2lBak1EQXdNREF3TzF4dUpHTnZiRzl5TFdKc1lXTnJMV1poWkdWa09pQWpNemt6WkRNNU8xeHVKR052Ykc5eUxXSnNZV05yTFd4cFoyaDBPaUFqTkdZMFpqUm1PMXh1SkdOdmJHOXlMV2R5WVhrNklDTmhaR0ZrWVdRN1hHNGtZMjlzYjNJdFozSmxaVzQ2SUNNeU1tRTROR0U3WEc0a1kyOXNiM0l0WjNKbFpXNHRiR2xuYUhRNklDTXpZV014TmpJN1hHNGtZMjlzYjNJdGNHbHVhem9nSTJabU5tWTFaanRjYmlSamIyeHZjaTFuYjJ4a09pQWpabVprT0RkaU8xeHVKR052Ykc5eUxXSnNkV1U2SUNNMlptSXdaR003WEc0a1kyOXNiM0l0Y0hWeWNHeGxPaUFqWkRBM00ySTNPMXh1WEc0dkx5QXRMUzB0TFMwdExTMHRMU0RRb05DUTBKZlFvTkNWMEtqUWxkQ2QwSmpRcnlEUXJkQ2EwS0RRa05DZDBKQWdMUzB0TFMwdExTMHRMUzFjYmlSdGIySnBiR1U2SURNeU1IQjRPMXh1SkhSaFlteGxkRG9nTnpZNGNIZzdYRzRrWkdWemEzUnZjRG9nTVRBeU5IQjRPMXh1SkdKcFp5MWtaWE5yZEc5d09pQXhORFF3Y0hnN1hHNWNia0JqZFhOMGIyMHRiV1ZrYVdFZ0xTMTBZV0pzWlhRZ0tDUjBZV0pzWlhRZ1BEMGdkMmxrZEdnZ1BDQWtaR1Z6YTNSdmNDazdYRzVBWTNWemRHOXRMVzFsWkdsaElDMHRiV2x1TFhSaFlteGxkQ0FvZDJsa2RHZ2dQajBnSkhSaFlteGxkQ2s3WEc1QVkzVnpkRzl0TFcxbFpHbGhJQzB0YldGNExYUmhZbXhsZENBb2QybGtkR2dnUENBa2RHRmliR1YwS1R0Y2JseHVRR04xYzNSdmJTMXRaV1JwWVNBdExXUmxjMnQwYjNBZ0tDUmtaWE5yZEc5d0lEdzlJSGRwWkhSb0lEd2dKR0pwWnkxa1pYTnJkRzl3S1R0Y2JrQmpkWE4wYjIwdGJXVmthV0VnTFMxdGFXNHRaR1Z6YTNSdmNDQW9kMmxrZEdnZ1BqMGdKR1JsYzJ0MGIzQXBPMXh1UUdOMWMzUnZiUzF0WldScFlTQXRMVzFoZUMxa1pYTnJkRzl3SUNoM2FXUjBhQ0E4SUNSa1pYTnJkRzl3S1R0Y2JseHVRR04xYzNSdmJTMXRaV1JwWVNBdExXMXBiaTFpYVdjdFpHVnphM1J2Y0NBb2QybGtkR2dnUEQwZ0pHSnBaeTFrWlhOcmRHOXdLVHRjYmtCamRYTjBiMjB0YldWa2FXRWdMUzFpYVdjdFpHVnphM1J2Y0NBb2QybGtkR2dnUGowZ0pHSnBaeTFrWlhOcmRHOXdLVHRjYmx4dUx5OGdMUzB0TFMwdExTMHRMUzBnVUVGRVJFbE9SMU12VFVGU1IwbE9VeUF0TFMwdExTMHRMUzB0TFZ4dUpHMWhjbWRwYmkxdGIySnBiR1U2SURJd2NIZzdYRzRrYldGeVoybHVMWFJoWW14bGREb2dNelJ3ZUR0Y2JpUnRZWEpuYVc0dFpHVnphM1J2Y0RvZ056WndlRHRjYmlSdFlYSm5hVzR0WW1sbkxXUmxjMnQwYjNBNklERTBkbmM3SWl3aVFHbHRjRzl5ZENCY0luNWpjM012ZG1GeWFXRmliR1Z6TG5OamMzTmNJanRjYmx4dUxtaGxZV1JsY2lCN1hHNGdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJR0ZzYVdkdUxXbDBaVzF6T2lCalpXNTBaWEk3WEc0Z0lIQmhaR1JwYm1jdGJHVm1kRG9nSkcxaGNtZHBiaTF0YjJKcGJHVTdYRzRnSUhCaFpHUnBibWN0Y21sbmFIUTZJQ1J0WVhKbmFXNHRiVzlpYVd4bE8xeHVYRzRnSUVCdFpXUnBZU0FvTFMxdGFXNHRaR1Z6YTNSdmNDa2dlMXh1SUNBZ0lIQmhaR1JwYm1jdGJHVm1kRG9nSkcxaGNtZHBiaTFrWlhOcmRHOXdPMXh1SUNBZ0lIQmhaR1JwYm1jdGNtbG5hSFE2SUNSdFlYSm5hVzR0WkdWemEzUnZjRHRjYmlBZ2ZWeHVYRzRnSUNZNk9tSmxabTl5WlNCN1hHNGdJQ0FnWTI5dWRHVnVkRG9nSjFKbFlXTjBJRkJ5YjJwbFkzUW5PMXh1SUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dUlDQWdJR1p2Ym5RdGMybDZaVG9nTWpSd2VEdGNiaUFnSUNCc2FXNWxMV2hsYVdkb2REb2dNekZ3ZUR0Y2JpQWdJQ0JtYjI1MExYZGxhV2RvZERvZ056QXdPMXh1SUNBZ0lHTnZiRzl5T2lBak1EQXdPMXh1SUNBZ0lHMWhjbWRwYmkxeWFXZG9kRG9nWVhWMGJ6dGNibHh1SUNBZ0lFQnRaV1JwWVNBb0xTMXRhVzR0WkdWemEzUnZjQ2tnZTF4dUlDQWdJQ0FnTHlvZzBMM1FzQ0RRdnRHQzBZRFF0ZEMzMExyUXRTQmJNVEF5TkN3Z01UUXdNRjBnMFlEUXNOQ3kwTDNRdnRDODBMWFJnTkM5MEw0ZzBZUFFzdEMxMEx2UXVOR0gwTGpRc3RDdzBZTFJqQ0RSZ05DdzBMZlF2TkMxMFlBZzBZalJnTkM0MFlUUmd0Q3dJTkdCSURJMGNIZ2cwTFRRdmlBek5uQjRJQ292WEc0Z0lDQWdJQ0JtYjI1MExYTnBlbVU2SUhOallXeGxLQ1JrWlhOcmRHOXdMQ0FrWW1sbkxXUmxjMnQwYjNBc0lESTBjSGdzSURNMmNIZ3NJREV3TUhaM0tUdGNiaUFnSUNCOVhHNGdJSDFjYm4xY2JseHVMbWhsWVdSbGNpMXVZWFlnZTF4dUlDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQmhiR2xuYmkxcGRHVnRjem9nWTJWdWRHVnlPMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBalptWm1PMXh1ZlZ4dVhHNHVhR1ZoWkdWeUxXNWhkaTFzYVc1cklIdGNiaUFnWm05dWRDMXphWHBsT2lBeE0zQjRPMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dOekF3TzF4dUlDQnNhVzVsTFdobGFXZG9kRG9nTVRod2VEdGNiaUFnYkdWMGRHVnlMWE53WVdOcGJtYzZJQzR3TldWdE8xeHVJQ0IwWlhoMExYUnlZVzV6Wm05eWJUb2dkWEJ3WlhKallYTmxPMXh1SUNCamIyeHZjam9nY21kaVlTZzNPU3dnTnprc0lEYzVMQ0F1TlNrN1hHNGdJSFJ5WVc1emFYUnBiMjQ2SUM0emN6dGNiaUFnY0dGa1pHbHVaem9nTWpod2VDQXdJREl6Y0hnN1hHNGdJR0p2Y21SbGNpMWliM1IwYjIwNklETndlQ0J6YjJ4cFpDQjBjbUZ1YzNCaGNtVnVkRHRjYmx4dUlDQW1MbUZqZEdsMlpTQjdYRzRnSUNBZ1kyOXNiM0k2SUNNMFpqUm1OR1k3WEc0Z0lDQWdZbTl5WkdWeUxXTnZiRzl5T2lBak0yRmpNVFl5TzF4dUlDQjlYRzVjYmlBZ0pqcG9iM1psY2lCN1hHNGdJQ0FnWTI5c2IzSTZJQ013TURBN1hHNGdJSDFjYmx4dUlDQW1JQ3NnSmlCN1hHNGdJQ0FnYldGeVoybHVMV3hsWm5RNklETTJjSGc3WEc0Z0lIMWNibjBpWFgwPSAqLyIsIi5oZWFkZXIge1xuICBib3JkZXI6IDFweCBzb2xpZDtcbn1cblxuYm9keSB7XG4gIGNvbG9yOiB5ZWxsb3c7XG4gIHotaW5kZXg6IDMzO1xufVxuLyogLS0tLS0tLS0tLS0g0KjQoNCY0KTQotCrIC0tLS0tLS0tLS0tKi9cbi8qIC0tLS0tLS0tLS0tINCm0JLQldCi0JAgLS0tLS0tLS0tLS0qL1xuLyogLS0tLS0tLS0tLS0g0KDQkNCX0KDQldCo0JXQndCY0K8g0K3QmtCg0JDQndCQIC0tLS0tLS0tLS0tKi9cbi8qIC0tLS0tLS0tLS0tIFBBRERJTkdTL01BUkdJTlMgLS0tLS0tLS0tLS0qL1xuLmhlYWRlci0xa3lhIHtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmctbGVmdDogMjBweDtcbiAgcGFkZGluZy1yaWdodDogMjBweDtcbn1cblxuLmhlYWRlci0xa3lhOjpiZWZvcmUge1xuICBjb250ZW50OiAnUmVhY3QgUHJvamVjdCc7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBmb250LXNpemU6IDEuNXJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMjk7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGNvbG9yOiAjMDAwO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG59XG5cbi5oZWFkZXItbmF2LTJ6RlQge1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbn1cblxuLmhlYWRlci1uYXYtbGluay0zS1AxIHtcbiAgZm9udC1zaXplOiAwLjgxMjVyZW07XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjM4O1xuICBsZXR0ZXItc3BhY2luZzogLjA1ZW07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGNvbG9yOiByZ2JhKDc5LCA3OSwgNzksIC41KTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiAuM3M7XG4gIHRyYW5zaXRpb246IC4zcztcbiAgcGFkZGluZzogMjhweCAwIDIzcHg7XG4gIGJvcmRlci1ib3R0b206IDNweCBzb2xpZCB0cmFuc3BhcmVudDtcbn1cblxuLmhlYWRlci1uYXYtbGluay0zS1AxLmFjdGl2ZS0zVFU3IHtcbiAgY29sb3I6ICM0ZjRmNGY7XG4gIGJvcmRlci1jb2xvcjogIzNhYzE2Mjtcbn1cblxuLmhlYWRlci1uYXYtbGluay0zS1AxOmhvdmVyIHtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi5oZWFkZXItbmF2LWxpbmstM0tQMSArIC5oZWFkZXItbmF2LWxpbmstM0tQMSB7XG4gIG1hcmdpbi1sZWZ0OiAzNnB4O1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5oZWFkZXItMWt5YSB7XG4gICAgcGFkZGluZy1sZWZ0OiA3NnB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDc2cHg7XG4gIH1cblxuICAuaGVhZGVyLTFreWE6OmJlZm9yZSB7XG4gICAgLyog0L3QsCDQvtGC0YDQtdC30LrQtSBbMTAyNCwgMTQwMF0g0YDQsNCy0L3QvtC80LXRgNC90L4g0YPQstC10LvQuNGH0LjQstCw0YLRjCDRgNCw0LfQvNC10YAg0YjRgNC40YTRgtCwINGBIDI0cHgg0LTQviAzNnB4ICovXG4gICAgZm9udC1zaXplOiBjYWxjKCgoMi4yNSAtIDEuNSkgKiAoKDEwMHZ3KSAtIDY0cmVtKSAvICg5MCAtIDY0KSkgKyAxLjVyZW0pO1xuICB9XG59XG4vKiAtLS0tLS0tLS0tLSDQqNCg0JjQpNCi0KsgLS0tLS0tLS0tLS0qL1xuLyogLS0tLS0tLS0tLS0g0KbQktCV0KLQkCAtLS0tLS0tLS0tLSovXG4vKiAtLS0tLS0tLS0tLSDQoNCQ0JfQoNCV0KjQldCd0JjQryDQrdCa0KDQkNCd0JAgLS0tLS0tLS0tLS0qL1xuLyogLS0tLS0tLS0tLS0gUEFERElOR1MvTUFSR0lOUyAtLS0tLS0tLS0tLSovXG4uaGVhZGVyLTFreWEge1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcGFkZGluZy1sZWZ0OiAyMHB4O1xuICBwYWRkaW5nLXJpZ2h0OiAyMHB4O1xufVxuXG4uaGVhZGVyLTFreWE6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdSZWFjdCBQcm9qZWN0JztcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtc2l6ZTogMS41cmVtO1xuICBsaW5lLWhlaWdodDogMS4yOTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgY29sb3I6ICMwMDA7XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbn1cblxuLmhlYWRlci1uYXYtMnpGVCB7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xufVxuXG4uaGVhZGVyLW5hdi1saW5rLTNLUDEge1xuICBmb250LXNpemU6IDAuODEyNXJlbTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgbGluZS1oZWlnaHQ6IDEuMzg7XG4gIGxldHRlci1zcGFjaW5nOiAuMDVlbTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgY29sb3I6IHJnYmEoNzksIDc5LCA3OSwgLjUpO1xuICAtd2Via2l0LXRyYW5zaXRpb246IC4zcztcbiAgdHJhbnNpdGlvbjogLjNzO1xuICBwYWRkaW5nOiAyOHB4IDAgMjNweDtcbiAgYm9yZGVyLWJvdHRvbTogM3B4IHNvbGlkIHRyYW5zcGFyZW50O1xufVxuXG4uaGVhZGVyLW5hdi1saW5rLTNLUDEuYWN0aXZlLTNUVTcge1xuICBjb2xvcjogIzRmNGY0ZjtcbiAgYm9yZGVyLWNvbG9yOiAjM2FjMTYyO1xufVxuXG4uaGVhZGVyLW5hdi1saW5rLTNLUDE6aG92ZXIge1xuICBjb2xvcjogIzAwMDtcbn1cblxuLmhlYWRlci1uYXYtbGluay0zS1AxICsgLmhlYWRlci1uYXYtbGluay0zS1AxIHtcbiAgbWFyZ2luLWxlZnQ6IDM2cHg7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLmhlYWRlci0xa3lhIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDc2cHg7XG4gICAgcGFkZGluZy1yaWdodDogNzZweDtcbiAgfVxuXG4gIC5oZWFkZXItMWt5YTo6YmVmb3JlIHtcbiAgICAvKiDQvdCwINC+0YLRgNC10LfQutC1IFsxMDI0LCAxNDAwXSDRgNCw0LLQvdC+0LzQtdGA0L3QviDRg9Cy0LXQu9C40YfQuNCy0LDRgtGMINGA0LDQt9C80LXRgCDRiNGA0LjRhNGC0LAg0YEgMjRweCDQtNC+IDM2cHggKi9cbiAgICBmb250LXNpemU6IGNhbGMoKCgyLjI1IC0gMS41KSAqICgoMTAwdncpIC0gNjRyZW0pIC8gKDkwIC0gNjQpKSArIDEuNXJlbSk7XG4gIH1cbn1cbi8qIC0tLS0tLS0tLS0tINCo0KDQmNCk0KLQqyAtLS0tLS0tLS0tLSovXG4vKiAtLS0tLS0tLS0tLSDQptCS0JXQotCQIC0tLS0tLS0tLS0tKi9cbi8qIC0tLS0tLS0tLS0tINCg0JDQl9Cg0JXQqNCV0J3QmNCvINCt0JrQoNCQ0J3QkCAtLS0tLS0tLS0tLSovXG4vKiAtLS0tLS0tLS0tLSBQQURESU5HUy9NQVJHSU5TIC0tLS0tLS0tLS0tKi9cbi5oZWFkZXItMWt5YSB7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBwYWRkaW5nLWxlZnQ6IDIwcHg7XG4gIHBhZGRpbmctcmlnaHQ6IDIwcHg7XG59XG5cbi5oZWFkZXItMWt5YTo6YmVmb3JlIHtcbiAgY29udGVudDogJ1JlYWN0IFByb2plY3QnO1xuICBkaXNwbGF5OiBibG9jaztcbiAgZm9udC1zaXplOiAxLjVyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjI5O1xuICBmb250LXdlaWdodDogNzAwO1xuICBjb2xvcjogIzAwMDtcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xufVxuXG4uaGVhZGVyLW5hdi0yekZUIHtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG59XG5cbi5oZWFkZXItbmF2LWxpbmstM0tQMSB7XG4gIGZvbnQtc2l6ZTogMC44MTI1cmVtO1xuICBmb250LXdlaWdodDogNzAwO1xuICBsaW5lLWhlaWdodDogMS4zODtcbiAgbGV0dGVyLXNwYWNpbmc6IC4wNWVtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBjb2xvcjogcmdiYSg3OSwgNzksIDc5LCAuNSk7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogLjNzO1xuICB0cmFuc2l0aW9uOiAuM3M7XG4gIHBhZGRpbmc6IDI4cHggMCAyM3B4O1xuICBib3JkZXItYm90dG9tOiAzcHggc29saWQgdHJhbnNwYXJlbnQ7XG59XG5cbi5oZWFkZXItbmF2LWxpbmstM0tQMS5hY3RpdmUtM1RVNyB7XG4gIGNvbG9yOiAjNGY0ZjRmO1xuICBib3JkZXItY29sb3I6ICMzYWMxNjI7XG59XG5cbi5oZWFkZXItbmF2LWxpbmstM0tQMTpob3ZlciB7XG4gIGNvbG9yOiAjMDAwO1xufVxuXG4uaGVhZGVyLW5hdi1saW5rLTNLUDEgKyAuaGVhZGVyLW5hdi1saW5rLTNLUDEge1xuICBtYXJnaW4tbGVmdDogMzZweDtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAuaGVhZGVyLTFreWEge1xuICAgIHBhZGRpbmctbGVmdDogNzZweDtcbiAgICBwYWRkaW5nLXJpZ2h0OiA3NnB4O1xuICB9XG5cbiAgLmhlYWRlci0xa3lhOjpiZWZvcmUge1xuICAgIC8qINC90LAg0L7RgtGA0LXQt9C60LUgWzEwMjQsIDE0MDBdINGA0LDQstC90L7QvNC10YDQvdC+INGD0LLQtdC70LjRh9C40LLQsNGC0Ywg0YDQsNC30LzQtdGAINGI0YDQuNGE0YLQsCDRgSAyNHB4INC00L4gMzZweCAqL1xuICAgIGZvbnQtc2l6ZTogY2FsYygoKDIuMjUgLSAxLjUpICogKCgxMDB2dykgLSA2NHJlbSkgLyAoOTAgLSA2NCkpICsgMS41cmVtKTtcbiAgfVxufVxuLyogLS0tLS0tLS0tLS0g0KjQoNCY0KTQotCrIC0tLS0tLS0tLS0tKi9cbi8qIC0tLS0tLS0tLS0tINCm0JLQldCi0JAgLS0tLS0tLS0tLS0qL1xuLyogLS0tLS0tLS0tLS0g0KDQkNCX0KDQldCo0JXQndCY0K8g0K3QmtCg0JDQndCQIC0tLS0tLS0tLS0tKi9cbi8qIC0tLS0tLS0tLS0tIFBBRERJTkdTL01BUkdJTlMgLS0tLS0tLS0tLS0qL1xuLmhlYWRlci0xa3lhIHtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmctbGVmdDogMjBweDtcbiAgcGFkZGluZy1yaWdodDogMjBweDtcbn1cblxuLmhlYWRlci0xa3lhOjpiZWZvcmUge1xuICBjb250ZW50OiAnUmVhY3QgUHJvamVjdCc7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBmb250LXNpemU6IDEuNXJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMjk7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGNvbG9yOiAjMDAwO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG59XG5cbi5oZWFkZXItbmF2LTJ6RlQge1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbn1cblxuLmhlYWRlci1uYXYtbGluay0zS1AxIHtcbiAgZm9udC1zaXplOiAwLjgxMjVyZW07XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjM4O1xuICBsZXR0ZXItc3BhY2luZzogLjA1ZW07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGNvbG9yOiByZ2JhKDc5LCA3OSwgNzksIC41KTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiAuM3M7XG4gIHRyYW5zaXRpb246IC4zcztcbiAgcGFkZGluZzogMjhweCAwIDIzcHg7XG4gIGJvcmRlci1ib3R0b206IDNweCBzb2xpZCB0cmFuc3BhcmVudDtcbn1cblxuLmhlYWRlci1uYXYtbGluay0zS1AxLmFjdGl2ZS0zVFU3IHtcbiAgY29sb3I6ICM0ZjRmNGY7XG4gIGJvcmRlci1jb2xvcjogIzNhYzE2Mjtcbn1cblxuLmhlYWRlci1uYXYtbGluay0zS1AxOmhvdmVyIHtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi5oZWFkZXItbmF2LWxpbmstM0tQMSArIC5oZWFkZXItbmF2LWxpbmstM0tQMSB7XG4gIG1hcmdpbi1sZWZ0OiAzNnB4O1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5oZWFkZXItMWt5YSB7XG4gICAgcGFkZGluZy1sZWZ0OiA3NnB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDc2cHg7XG4gIH1cblxuICAuaGVhZGVyLTFreWE6OmJlZm9yZSB7XG4gICAgLyog0L3QsCDQvtGC0YDQtdC30LrQtSBbMTAyNCwgMTQwMF0g0YDQsNCy0L3QvtC80LXRgNC90L4g0YPQstC10LvQuNGH0LjQstCw0YLRjCDRgNCw0LfQvNC10YAg0YjRgNC40YTRgtCwINGBIDI0cHgg0LTQviAzNnB4ICovXG4gICAgZm9udC1zaXplOiBjYWxjKCgoMi4yNSAtIDEuNSkgKiAoKDEwMHZ3KSAtIDY0cmVtKSAvICg5MCAtIDY0KSkgKyAxLjVyZW0pO1xuICB9XG59XG4vKiAtLS0tLS0tLS0tLSDQqNCg0JjQpNCi0KsgLS0tLS0tLS0tLS0qL1xuLyogLS0tLS0tLS0tLS0g0KbQktCV0KLQkCAtLS0tLS0tLS0tLSovXG4vKiAtLS0tLS0tLS0tLSDQoNCQ0JfQoNCV0KjQldCd0JjQryDQrdCa0KDQkNCd0JAgLS0tLS0tLS0tLS0qL1xuLyogLS0tLS0tLS0tLS0gUEFERElOR1MvTUFSR0lOUyAtLS0tLS0tLS0tLSovXG4uaGVhZGVyLTFreWEge1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcGFkZGluZy1sZWZ0OiAyMHB4O1xuICBwYWRkaW5nLXJpZ2h0OiAyMHB4O1xufVxuXG4uaGVhZGVyLTFreWE6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdSZWFjdCBQcm9qZWN0JztcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtc2l6ZTogMS41cmVtO1xuICBsaW5lLWhlaWdodDogMS4yOTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgY29sb3I6ICMwMDA7XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbn1cblxuLmhlYWRlci1uYXYtMnpGVCB7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xufVxuXG4uaGVhZGVyLW5hdi1saW5rLTNLUDEge1xuICBmb250LXNpemU6IDAuODEyNXJlbTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgbGluZS1oZWlnaHQ6IDEuMzg7XG4gIGxldHRlci1zcGFjaW5nOiAuMDVlbTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgY29sb3I6IHJnYmEoNzksIDc5LCA3OSwgLjUpO1xuICAtd2Via2l0LXRyYW5zaXRpb246IC4zcztcbiAgdHJhbnNpdGlvbjogLjNzO1xuICBwYWRkaW5nOiAyOHB4IDAgMjNweDtcbiAgYm9yZGVyLWJvdHRvbTogM3B4IHNvbGlkIHRyYW5zcGFyZW50O1xufVxuXG4uaGVhZGVyLW5hdi1saW5rLTNLUDEuYWN0aXZlLTNUVTcge1xuICBjb2xvcjogIzRmNGY0ZjtcbiAgYm9yZGVyLWNvbG9yOiAjM2FjMTYyO1xufVxuXG4uaGVhZGVyLW5hdi1saW5rLTNLUDE6aG92ZXIge1xuICBjb2xvcjogIzAwMDtcbn1cblxuLmhlYWRlci1uYXYtbGluay0zS1AxICsgLmhlYWRlci1uYXYtbGluay0zS1AxIHtcbiAgbWFyZ2luLWxlZnQ6IDM2cHg7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLmhlYWRlci0xa3lhIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDc2cHg7XG4gICAgcGFkZGluZy1yaWdodDogNzZweDtcbiAgfVxuXG4gIC5oZWFkZXItMWt5YTo6YmVmb3JlIHtcbiAgICAvKiDQvdCwINC+0YLRgNC10LfQutC1IFsxMDI0LCAxNDAwXSDRgNCw0LLQvdC+0LzQtdGA0L3QviDRg9Cy0LXQu9C40YfQuNCy0LDRgtGMINGA0LDQt9C80LXRgCDRiNGA0LjRhNGC0LAg0YEgMjRweCDQtNC+IDM2cHggKi9cbiAgICBmb250LXNpemU6IGNhbGMoKCgyLjI1IC0gMS41KSAqICgoMTAwdncpIC0gNjRyZW0pIC8gKDkwIC0gNjQpKSArIDEuNXJlbSk7XG4gIH1cbn1cbi8qIC0tLS0tLS0tLS0tINCo0KDQmNCk0KLQqyAtLS0tLS0tLS0tLSovXG4vKiAtLS0tLS0tLS0tLSDQptCS0JXQotCQIC0tLS0tLS0tLS0tKi9cbi8qIC0tLS0tLS0tLS0tINCg0JDQl9Cg0JXQqNCV0J3QmNCvINCt0JrQoNCQ0J3QkCAtLS0tLS0tLS0tLSovXG4vKiAtLS0tLS0tLS0tLSBQQURESU5HUy9NQVJHSU5TIC0tLS0tLS0tLS0tKi9cbi5oZWFkZXItMWt5YSB7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBwYWRkaW5nLWxlZnQ6IDIwcHg7XG4gIHBhZGRpbmctcmlnaHQ6IDIwcHg7XG59XG5cbi5oZWFkZXItMWt5YTo6YmVmb3JlIHtcbiAgY29udGVudDogJ1JlYWN0IFByb2plY3QnO1xuICBkaXNwbGF5OiBibG9jaztcbiAgZm9udC1zaXplOiAxLjVyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjI5O1xuICBmb250LXdlaWdodDogNzAwO1xuICBjb2xvcjogIzAwMDtcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xufVxuXG4uaGVhZGVyLW5hdi0yekZUIHtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG59XG5cbi5oZWFkZXItbmF2LWxpbmstM0tQMSB7XG4gIGZvbnQtc2l6ZTogMC44MTI1cmVtO1xuICBmb250LXdlaWdodDogNzAwO1xuICBsaW5lLWhlaWdodDogMS4zODtcbiAgbGV0dGVyLXNwYWNpbmc6IC4wNWVtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBjb2xvcjogcmdiYSg3OSwgNzksIDc5LCAuNSk7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogLjNzO1xuICB0cmFuc2l0aW9uOiAuM3M7XG4gIHBhZGRpbmc6IDI4cHggMCAyM3B4O1xuICBib3JkZXItYm90dG9tOiAzcHggc29saWQgdHJhbnNwYXJlbnQ7XG59XG5cbi5oZWFkZXItbmF2LWxpbmstM0tQMS5hY3RpdmUtM1RVNyB7XG4gIGNvbG9yOiAjNGY0ZjRmO1xuICBib3JkZXItY29sb3I6ICMzYWMxNjI7XG59XG5cbi5oZWFkZXItbmF2LWxpbmstM0tQMTpob3ZlciB7XG4gIGNvbG9yOiAjMDAwO1xufVxuXG4uaGVhZGVyLW5hdi1saW5rLTNLUDEgKyAuaGVhZGVyLW5hdi1saW5rLTNLUDEge1xuICBtYXJnaW4tbGVmdDogMzZweDtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAuaGVhZGVyLTFreWEge1xuICAgIHBhZGRpbmctbGVmdDogNzZweDtcbiAgICBwYWRkaW5nLXJpZ2h0OiA3NnB4O1xuICB9XG5cbiAgLmhlYWRlci0xa3lhOjpiZWZvcmUge1xuICAgIC8qINC90LAg0L7RgtGA0LXQt9C60LUgWzEwMjQsIDE0MDBdINGA0LDQstC90L7QvNC10YDQvdC+INGD0LLQtdC70LjRh9C40LLQsNGC0Ywg0YDQsNC30LzQtdGAINGI0YDQuNGE0YLQsCDRgSAyNHB4INC00L4gMzZweCAqL1xuICAgIGZvbnQtc2l6ZTogY2FsYygoKDIuMjUgLSAxLjUpICogKCgxMDB2dykgLSA2NHJlbSkgLyAoOTAgLSA2NCkpICsgMS41cmVtKTtcbiAgfVxufVxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklpNHVMM055WXk5cWN5OWpiMjF3YjI1bGJuUnpMM055WXk5amMzTXZkbUZ5YVdGaWJHVnpMbk5qYzNNaUxDSXVMaTl6Y21NdmFuTXZZMjl0Y0c5dVpXNTBjeTl6Y21NdmFuTXZZMjl0Y0c5dVpXNTBjeTlvWldGa1pYSXZhVzVrWlhndWMyTnpjeUlzSWk0dUwzTnlZeTlxY3k5amIyMXdiMjVsYm5SekwyaGxZV1JsY2k5cGJtUmxlQzV6WTNOeklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJPMFZCVTBFc2EwSkJRVUU3UTBGaFFUczdRVU53UWtFN1JVRkRSU3hqUVVGQk8wTkRSMFE3UVVGRFJDeHRRMFJJYzBJN1FVTkpkRUlzYTBORVNuTkNPMEZEUzNSQ0xEaERSRW9yUWp0QlEwc3ZRaXcyUTBSS1owTTdRVU5MYUVNN1JVUkZSU3h4UWtGQlFUdEZRMEZCTEdORVEwVTdSVU5CUml4MVFrUkRhVUk3UlVOQmFrSXNiMEpFUTJ0Q08wVkRRV3hDTEcxQ1JFTkZPMFZEUVVZc2IwSkVRMjFDTzBORFFYQkNPenRCUVVORU8wVkJRMFVzZVVKRVRVTTdSVUZIU0N4bFFVRkJPMFZCUTBVc2EwSkJRVUU3UlVGQlFTeHJRa0ZCWXp0RlFVTmtMR2xDUVVGQk8wVkRUa0VzV1VSTlFUdEZRVU5CTEcxQ1FVRkJPME5CUTBRN08wRkJSVVE3UlVGRFJTeHhRa0ZCWjBJN1JVRkRhRUlzWTBGQlFUdEZRVU5CTEhWQ1FVRnJRanRGUVVOc1FpeHZRa0ZCUVR0RlFVTkJMSFZDUVVGQk8wTkRUa1E3TzBGQlEwUTdSVVJQUlN4eFFrRkJaMEk3UlVGRGFFSXNhVUpCUVVFN1JVRkRRU3hyUWtGQlFUdEZRV05FTEhOQ1FVRkJPMFZCV2tNc01FSkJRVUU3UlVOTVFTdzBRa1JOYVVJN1JVTk1ha0lzZDBKRVRYZENPMFZEVEhoQ0xHZENSRTFETzBWQlJVUXNjVUpCUVVFN1JVTk9RU3h4UTBSUFl6dERRMDVtT3p0QlJGTkRPMFZEVUVFc1pVUlJSVHRGUTFCR0xITkNSRkZETzBOQmFrUkVPenRCUVU1R08wVkRhMFJGTEZsRU0wTkZPME5ETkVOSU96dEJRVU5FTzBWRWVrTkZMR3RDUVVGQk8wTkRNa05FT3p0QlFVTkVPMFZCUTBVN1NVUXZRME1zYlVKQlFVRTdTVU5wUkVNc2IwSkJRVzFDTzBkQlEzQkNPenRGUVVORU8wbEJRMFVzYVVaQlFXbEdPMGxCUTJwR0xIbEZRVUYzUlR0SFFVTjZSVHREUVVOR08wRkJSVVFzYlVOQlFXMURPMEZCUTI1RExHdERRVUZyUXp0QlFVTnNReXc0UTBGQk9FTTdRVUZET1VNc05rTkJRVFpETzBGQlF6ZERPMFZCUTBVc2NVSkJRWEZDTzBWQlEzSkNMR05CUVdNN1JVRkRaQ3gxUWtGQmRVSTdSVUZEZGtJc2IwSkJRVzlDTzBWQlEzQkNMRzFDUVVGdFFqdEZRVU51UWl4dlFrRkJiVUk3UTBGRGNFSTdPMEZCUTBRN1JVRkRSU3g1UWtGQmVVSTdSVUZEZWtJc1pVRkJaVHRGUVVObUxHdENRVUZyUWp0RlFVTnNRaXhyUWtGQmEwSTdSVUZEYkVJc2FVSkJRV2xDTzBWQlEycENMRmxCUVZrN1JVRkRXaXh0UWtGQmEwSTdRMEZEYmtJN08wRkJRMFE3UlVGRFJTeHhRa0ZCY1VJN1JVRkRja0lzWTBGQll6dEZRVU5rTEhWQ1FVRjFRanRGUVVOMlFpeHZRa0ZCYjBJN1JVRkRjRUlzZFVKQlFYVkNPME5CUTNoQ096dEJRVU5FTzBWQlEwVXNjVUpCUVhGQ08wVkJRM0pDTEdsQ1FVRnBRanRGUVVOcVFpeHJRa0ZCYTBJN1JVRkRiRUlzYzBKQlFYTkNPMFZCUTNSQ0xEQkNRVUV3UWp0RlFVTXhRaXcwUWtGQk5FSTdSVUZETlVJc2QwSkJRWGRDTzBWQlEzaENMR2RDUVVGblFqdEZRVU5vUWl4eFFrRkJjVUk3UlVGRGNrSXNjVU5CUVc5RE8wTkJRM0pET3p0QlFVTkVPMFZCUTBVc1pVRkJaVHRGUVVObUxITkNRVUZ6UWp0RFFVTjJRanM3UVVGRFJEdEZRVU5GTEZsQlFWazdRMEZEWWpzN1FVRkRSRHRGUVVORkxHdENRVUZyUWp0RFFVTnVRanM3UVVGRFJEdEZRVU5GTzBsQlEwVXNiVUpCUVcxQ08wbEJRMjVDTEc5Q1FVRnRRanRIUVVOd1FqczdSVUZEUkR0SlFVTkZMR2xHUVVGcFJqdEpRVU5xUml4NVJVRkJkMFU3UjBGRGVrVTdRMEZEUmp0QlFVVkVMRzFEUVVGdFF6dEJRVU51UXl4clEwRkJhME03UVVGRGJFTXNPRU5CUVRoRE8wRkJRemxETERaRFFVRTJRenRCUVVNM1F6dEZRVU5GTEhGQ1FVRnhRanRGUVVOeVFpeGpRVUZqTzBWQlEyUXNkVUpCUVhWQ08wVkJRM1pDTEc5Q1FVRnZRanRGUVVOd1FpeHRRa0ZCYlVJN1JVRkRia0lzYjBKQlFXMUNPME5CUTNCQ096dEJRVU5FTzBWQlEwVXNlVUpCUVhsQ08wVkJRM3BDTEdWQlFXVTdSVUZEWml4clFrRkJhMEk3UlVGRGJFSXNhMEpCUVd0Q08wVkJRMnhDTEdsQ1FVRnBRanRGUVVOcVFpeFpRVUZaTzBWQlExb3NiVUpCUVd0Q08wTkJRMjVDT3p0QlFVTkVPMFZCUTBVc2NVSkJRWEZDTzBWQlEzSkNMR05CUVdNN1JVRkRaQ3gxUWtGQmRVSTdSVUZEZGtJc2IwSkJRVzlDTzBWQlEzQkNMSFZDUVVGMVFqdERRVU40UWpzN1FVRkRSRHRGUVVORkxIRkNRVUZ4UWp0RlFVTnlRaXhwUWtGQmFVSTdSVUZEYWtJc2EwSkJRV3RDTzBWQlEyeENMSE5DUVVGelFqdEZRVU4wUWl3d1FrRkJNRUk3UlVGRE1VSXNORUpCUVRSQ08wVkJRelZDTEhkQ1FVRjNRanRGUVVONFFpeG5Ra0ZCWjBJN1JVRkRhRUlzY1VKQlFYRkNPMFZCUTNKQ0xIRkRRVUZ2UXp0RFFVTnlRenM3UVVGRFJEdEZRVU5GTEdWQlFXVTdSVUZEWml4elFrRkJjMEk3UTBGRGRrSTdPMEZCUTBRN1JVRkRSU3haUVVGWk8wTkJRMkk3TzBGQlEwUTdSVUZEUlN4clFrRkJhMEk3UTBGRGJrSTdPMEZCUTBRN1JVRkRSVHRKUVVORkxHMUNRVUZ0UWp0SlFVTnVRaXh2UWtGQmJVSTdSMEZEY0VJN08wVkJRMFE3U1VGRFJTeHBSa0ZCYVVZN1NVRkRha1lzZVVWQlFYZEZPMGRCUTNwRk8wTkJRMFk3UVVGRlJDeHRRMEZCYlVNN1FVRkRia01zYTBOQlFXdERPMEZCUTJ4RExEaERRVUU0UXp0QlFVTTVReXcyUTBGQk5rTTdRVUZETjBNN1JVRkRSU3h4UWtGQmNVSTdSVUZEY2tJc1kwRkJZenRGUVVOa0xIVkNRVUYxUWp0RlFVTjJRaXh2UWtGQmIwSTdSVUZEY0VJc2JVSkJRVzFDTzBWQlEyNUNMRzlDUVVGdFFqdERRVU53UWpzN1FVRkRSRHRGUVVORkxIbENRVUY1UWp0RlFVTjZRaXhsUVVGbE8wVkJRMllzYTBKQlFXdENPMFZCUTJ4Q0xHdENRVUZyUWp0RlFVTnNRaXhwUWtGQmFVSTdSVUZEYWtJc1dVRkJXVHRGUVVOYUxHMUNRVUZyUWp0RFFVTnVRanM3UVVGRFJEdEZRVU5GTEhGQ1FVRnhRanRGUVVOeVFpeGpRVUZqTzBWQlEyUXNkVUpCUVhWQ08wVkJRM1pDTEc5Q1FVRnZRanRGUVVOd1FpeDFRa0ZCZFVJN1EwRkRlRUk3TzBGQlEwUTdSVUZEUlN4eFFrRkJjVUk3UlVGRGNrSXNhVUpCUVdsQ08wVkJRMnBDTEd0Q1FVRnJRanRGUVVOc1FpeHpRa0ZCYzBJN1JVRkRkRUlzTUVKQlFUQkNPMFZCUXpGQ0xEUkNRVUUwUWp0RlFVTTFRaXgzUWtGQmQwSTdSVUZEZUVJc1owSkJRV2RDTzBWQlEyaENMSEZDUVVGeFFqdEZRVU55UWl4eFEwRkJiME03UTBGRGNrTTdPMEZCUTBRN1JVRkRSU3hsUVVGbE8wVkJRMllzYzBKQlFYTkNPME5CUTNaQ096dEJRVU5FTzBWQlEwVXNXVUZCV1R0RFFVTmlPenRCUVVORU8wVkJRMFVzYTBKQlFXdENPME5CUTI1Q096dEJRVU5FTzBWQlEwVTdTVUZEUlN4dFFrRkJiVUk3U1VGRGJrSXNiMEpCUVcxQ08wZEJRM0JDT3p0RlFVTkVPMGxCUTBVc2FVWkJRV2xHTzBsQlEycEdMSGxGUVVGM1JUdEhRVU42UlR0RFFVTkdPMEZCUlVRc2JVTkJRVzFETzBGQlEyNURMR3REUVVGclF6dEJRVU5zUXl3NFEwRkJPRU03UVVGRE9VTXNOa05CUVRaRE8wRkJRemRETzBWQlEwVXNjVUpCUVhGQ08wVkJRM0pDTEdOQlFXTTdSVUZEWkN4MVFrRkJkVUk3UlVGRGRrSXNiMEpCUVc5Q08wVkJRM0JDTEcxQ1FVRnRRanRGUVVOdVFpeHZRa0ZCYlVJN1EwRkRjRUk3TzBGQlEwUTdSVUZEUlN4NVFrRkJlVUk3UlVGRGVrSXNaVUZCWlR0RlFVTm1MR3RDUVVGclFqdEZRVU5zUWl4clFrRkJhMEk3UlVGRGJFSXNhVUpCUVdsQ08wVkJRMnBDTEZsQlFWazdSVUZEV2l4dFFrRkJhMEk3UTBGRGJrSTdPMEZCUTBRN1JVRkRSU3h4UWtGQmNVSTdSVUZEY2tJc1kwRkJZenRGUVVOa0xIVkNRVUYxUWp0RlFVTjJRaXh2UWtGQmIwSTdSVUZEY0VJc2RVSkJRWFZDTzBOQlEzaENPenRCUVVORU8wVkJRMFVzY1VKQlFYRkNPMFZCUTNKQ0xHbENRVUZwUWp0RlFVTnFRaXhyUWtGQmEwSTdSVUZEYkVJc2MwSkJRWE5DTzBWQlEzUkNMREJDUVVFd1FqdEZRVU14UWl3MFFrRkJORUk3UlVGRE5VSXNkMEpCUVhkQ08wVkJRM2hDTEdkQ1FVRm5RanRGUVVOb1FpeHhRa0ZCY1VJN1JVRkRja0lzY1VOQlFXOURPME5CUTNKRE96dEJRVU5FTzBWQlEwVXNaVUZCWlR0RlFVTm1MSE5DUVVGelFqdERRVU4yUWpzN1FVRkRSRHRGUVVORkxGbEJRVms3UTBGRFlqczdRVUZEUkR0RlFVTkZMR3RDUVVGclFqdERRVU51UWpzN1FVRkRSRHRGUVVORk8wbEJRMFVzYlVKQlFXMUNPMGxCUTI1Q0xHOUNRVUZ0UWp0SFFVTndRanM3UlVGRFJEdEpRVU5GTEdsR1FVRnBSanRKUVVOcVJpeDVSVUZCZDBVN1IwRkRla1U3UTBGRFJqdEJRVVZFTEcxRFFVRnRRenRCUVVOdVF5eHJRMEZCYTBNN1FVRkRiRU1zT0VOQlFUaERPMEZCUXpsRExEWkRRVUUyUXp0QlFVTTNRenRGUVVORkxIRkNRVUZ4UWp0RlFVTnlRaXhqUVVGak8wVkJRMlFzZFVKQlFYVkNPMFZCUTNaQ0xHOUNRVUZ2UWp0RlFVTndRaXh0UWtGQmJVSTdSVUZEYmtJc2IwSkJRVzFDTzBOQlEzQkNPenRCUVVORU8wVkJRMFVzZVVKQlFYbENPMFZCUTNwQ0xHVkJRV1U3UlVGRFppeHJRa0ZCYTBJN1JVRkRiRUlzYTBKQlFXdENPMFZCUTJ4Q0xHbENRVUZwUWp0RlFVTnFRaXhaUVVGWk8wVkJRMW9zYlVKQlFXdENPME5CUTI1Q096dEJRVU5FTzBWQlEwVXNjVUpCUVhGQ08wVkJRM0pDTEdOQlFXTTdSVUZEWkN4MVFrRkJkVUk3UlVGRGRrSXNiMEpCUVc5Q08wVkJRM0JDTEhWQ1FVRjFRanREUVVONFFqczdRVUZEUkR0RlFVTkZMSEZDUVVGeFFqdEZRVU55UWl4cFFrRkJhVUk3UlVGRGFrSXNhMEpCUVd0Q08wVkJRMnhDTEhOQ1FVRnpRanRGUVVOMFFpd3dRa0ZCTUVJN1JVRkRNVUlzTkVKQlFUUkNPMFZCUXpWQ0xIZENRVUYzUWp0RlFVTjRRaXhuUWtGQlowSTdSVUZEYUVJc2NVSkJRWEZDTzBWQlEzSkNMSEZEUVVGdlF6dERRVU55UXpzN1FVRkRSRHRGUVVORkxHVkJRV1U3UlVGRFppeHpRa0ZCYzBJN1EwRkRka0k3TzBGQlEwUTdSVUZEUlN4WlFVRlpPME5CUTJJN08wRkJRMFE3UlVGRFJTeHJRa0ZCYTBJN1EwRkRia0k3TzBGQlEwUTdSVUZEUlR0SlFVTkZMRzFDUVVGdFFqdEpRVU51UWl4dlFrRkJiVUk3UjBGRGNFSTdPMFZCUTBRN1NVRkRSU3hwUmtGQmFVWTdTVUZEYWtZc2VVVkJRWGRGTzBkQlEzcEZPME5CUTBZaUxDSm1hV3hsSWpvaWRHOHVZM056SWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaUx5OGdMUzB0TFMwdExTMHRMUzBnMEtqUW9OQ1kwS1RRb3RDcklDMHRMUzB0TFMwdExTMHRYRzRrVFhWelpXOVRZVzV6T2lBblRYVnpaVzhnVTJGdWN5Y3NJSE5oYm5NdGMyVnlhV1k3WEc0a1JtOXVkRlJvYVc0NklERXdNRHRjYmlSR2IyNTBUR2xuYUhRNklETXdNRHRjYmlSR2IyNTBVbVZuZFd4aGNqb2dOREF3TzF4dUpFWnZiblJOWldScGRXMDZJRFV3TUR0Y2JpUkdiMjUwUW05c1pEb2dOekF3TzF4dUpFWnZiblJDYkdGamF6b2dPVEF3TzF4dVhHNHZMeUF0TFMwdExTMHRMUzB0TFNEUXB0Q1MwSlhRb3RDUUlDMHRMUzB0TFMwdExTMHRYRzRrWTI5c2IzSXRkMmhwZEdVNklDTm1abVptWm1ZN1hHNGtZMjlzYjNJdFlteGhZMnN0WTJ4aGMzTnBZem9nSXpBd01EQXdNRHRjYmlSamIyeHZjaTFpYkdGamF5MW1ZV1JsWkRvZ0l6TTVNMlF6T1R0Y2JpUmpiMnh2Y2kxaWJHRmpheTFzYVdkb2REb2dJelJtTkdZMFpqdGNiaVJqYjJ4dmNpMW5jbUY1T2lBallXUmhaR0ZrTzF4dUpHTnZiRzl5TFdkeVpXVnVPaUFqTWpKaE9EUmhPMXh1SkdOdmJHOXlMV2R5WldWdUxXeHBaMmgwT2lBak0yRmpNVFl5TzF4dUpHTnZiRzl5TFhCcGJtczZJQ05tWmpabU5XWTdYRzRrWTI5c2IzSXRaMjlzWkRvZ0kyWm1aRGczWWp0Y2JpUmpiMnh2Y2kxaWJIVmxPaUFqTm1aaU1HUmpPMXh1SkdOdmJHOXlMWEIxY25Cc1pUb2dJMlF3TnpOaU56dGNibHh1THk4Z0xTMHRMUzB0TFMwdExTMGcwS0RRa05DWDBLRFFsZENvMEpYUW5kQ1kwSzhnMEszUW10Q2cwSkRRbmRDUUlDMHRMUzB0TFMwdExTMHRYRzRrYlc5aWFXeGxPaUF6TWpCd2VEdGNiaVIwWVdKc1pYUTZJRGMyT0hCNE8xeHVKR1JsYzJ0MGIzQTZJREV3TWpSd2VEdGNiaVJpYVdjdFpHVnphM1J2Y0RvZ01UUTBNSEI0TzF4dVhHNUFZM1Z6ZEc5dExXMWxaR2xoSUMwdGRHRmliR1YwSUNna2RHRmliR1YwSUR3OUlIZHBaSFJvSUR3Z0pHUmxjMnQwYjNBcE8xeHVRR04xYzNSdmJTMXRaV1JwWVNBdExXMXBiaTEwWVdKc1pYUWdLSGRwWkhSb0lENDlJQ1IwWVdKc1pYUXBPMXh1UUdOMWMzUnZiUzF0WldScFlTQXRMVzFoZUMxMFlXSnNaWFFnS0hkcFpIUm9JRHdnSkhSaFlteGxkQ2s3WEc1Y2JrQmpkWE4wYjIwdGJXVmthV0VnTFMxa1pYTnJkRzl3SUNna1pHVnphM1J2Y0NBOFBTQjNhV1IwYUNBOElDUmlhV2N0WkdWemEzUnZjQ2s3WEc1QVkzVnpkRzl0TFcxbFpHbGhJQzB0YldsdUxXUmxjMnQwYjNBZ0tIZHBaSFJvSUQ0OUlDUmtaWE5yZEc5d0tUdGNia0JqZFhOMGIyMHRiV1ZrYVdFZ0xTMXRZWGd0WkdWemEzUnZjQ0FvZDJsa2RHZ2dQQ0FrWkdWemEzUnZjQ2s3WEc1Y2JrQmpkWE4wYjIwdGJXVmthV0VnTFMxdGFXNHRZbWxuTFdSbGMydDBiM0FnS0hkcFpIUm9JRHc5SUNSaWFXY3RaR1Z6YTNSdmNDazdYRzVBWTNWemRHOXRMVzFsWkdsaElDMHRZbWxuTFdSbGMydDBiM0FnS0hkcFpIUm9JRDQ5SUNSaWFXY3RaR1Z6YTNSdmNDazdYRzVjYmk4dklDMHRMUzB0TFMwdExTMHRJRkJCUkVSSlRrZFRMMDFCVWtkSlRsTWdMUzB0TFMwdExTMHRMUzFjYmlSdFlYSm5hVzR0Ylc5aWFXeGxPaUF5TUhCNE8xeHVKRzFoY21kcGJpMTBZV0pzWlhRNklETTBjSGc3WEc0a2JXRnlaMmx1TFdSbGMydDBiM0E2SURjMmNIZzdYRzRrYldGeVoybHVMV0pwWnkxa1pYTnJkRzl3T2lBeE5IWjNPeUlzSWtCcGJYQnZjblFnWENKK1kzTnpMM1poY21saFlteGxjeTV6WTNOelhDSTdYRzVjYmk1b1pXRmtaWElnZTF4dUlDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQmhiR2xuYmkxcGRHVnRjem9nWTJWdWRHVnlPMXh1SUNCd1lXUmthVzVuTFd4bFpuUTZJQ1J0WVhKbmFXNHRiVzlpYVd4bE8xeHVJQ0J3WVdSa2FXNW5MWEpwWjJoME9pQWtiV0Z5WjJsdUxXMXZZbWxzWlR0Y2JseHVJQ0JBYldWa2FXRWdLQzB0YldsdUxXUmxjMnQwYjNBcElIdGNiaUFnSUNCd1lXUmthVzVuTFd4bFpuUTZJQ1J0WVhKbmFXNHRaR1Z6YTNSdmNEdGNiaUFnSUNCd1lXUmthVzVuTFhKcFoyaDBPaUFrYldGeVoybHVMV1JsYzJ0MGIzQTdYRzRnSUgxY2JseHVJQ0FtT2pwaVpXWnZjbVVnZTF4dUlDQWdJR052Ym5SbGJuUTZJQ2RTWldGamRDQlFjbTlxWldOMEp6dGNiaUFnSUNCa2FYTndiR0Y1T2lCaWJHOWphenRjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJREkwY0hnN1hHNGdJQ0FnYkdsdVpTMW9aV2xuYUhRNklETXhjSGc3WEc0Z0lDQWdabTl1ZEMxM1pXbG5hSFE2SURjd01EdGNiaUFnSUNCamIyeHZjam9nSXpBd01EdGNiaUFnSUNCdFlYSm5hVzR0Y21sbmFIUTZJR0YxZEc4N1hHNWNiaUFnSUNCQWJXVmthV0VnS0MwdGJXbHVMV1JsYzJ0MGIzQXBJSHRjYmlBZ0lDQWdJQzhxSU5DOTBMQWcwTDdSZ3RHQTBMWFF0OUM2MExVZ1d6RXdNalFzSURFME1EQmRJTkdBMExEUXN0QzkwTDdRdk5DMTBZRFF2ZEMrSU5HRDBMTFF0ZEM3MExqUmg5QzQwTExRc05HQzBZd2cwWURRc05DMzBMelF0ZEdBSU5HSTBZRFF1TkdFMFlMUXNDRFJnU0F5TkhCNElOQzAwTDRnTXpad2VDQXFMMXh1SUNBZ0lDQWdabTl1ZEMxemFYcGxPaUJ6WTJGc1pTZ2taR1Z6YTNSdmNDd2dKR0pwWnkxa1pYTnJkRzl3TENBeU5IQjRMQ0F6Tm5CNExDQXhNREIyZHlrN1hHNGdJQ0FnZlZ4dUlDQjlYRzU5WEc1Y2JpNW9aV0ZrWlhJdGJtRjJJSHRjYmlBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ1lXeHBaMjR0YVhSbGJYTTZJR05sYm5SbGNqdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nSTJabVpqdGNibjFjYmx4dUxtaGxZV1JsY2kxdVlYWXRiR2x1YXlCN1hHNGdJR1p2Ym5RdGMybDZaVG9nTVROd2VEdGNiaUFnWm05dWRDMTNaV2xuYUhRNklEY3dNRHRjYmlBZ2JHbHVaUzFvWldsbmFIUTZJREU0Y0hnN1hHNGdJR3hsZEhSbGNpMXpjR0ZqYVc1bk9pQXVNRFZsYlR0Y2JpQWdkR1Y0ZEMxMGNtRnVjMlp2Y20wNklIVndjR1Z5WTJGelpUdGNiaUFnWTI5c2IzSTZJSEpuWW1Fb056a3NJRGM1TENBM09Td2dMalVwTzF4dUlDQjBjbUZ1YzJsMGFXOXVPaUF1TTNNN1hHNGdJSEJoWkdScGJtYzZJREk0Y0hnZ01DQXlNM0I0TzF4dUlDQmliM0prWlhJdFltOTBkRzl0T2lBemNIZ2djMjlzYVdRZ2RISmhibk53WVhKbGJuUTdYRzVjYmlBZ0ppNWhZM1JwZG1VZ2UxeHVJQ0FnSUdOdmJHOXlPaUFqTkdZMFpqUm1PMXh1SUNBZ0lHSnZjbVJsY2kxamIyeHZjam9nSXpOaFl6RTJNanRjYmlBZ2ZWeHVYRzRnSUNZNmFHOTJaWElnZTF4dUlDQWdJR052Ykc5eU9pQWpNREF3TzF4dUlDQjlYRzVjYmlBZ0ppQXJJQ1lnZTF4dUlDQWdJRzFoY21kcGJpMXNaV1owT2lBek5uQjRPMXh1SUNCOVhHNTlJaXdpTG1obFlXUmxjaUI3WEc0Z0lHSnZjbVJsY2pvZ01YQjRJSE52Ykdsa08xeHVmVnh1WEc1aWIyUjVJSHRjYmlBZ1kyOXNiM0k2SUhsbGJHeHZkenRjYm4xY2JpOHFJQzB0TFMwdExTMHRMUzB0SU5DbzBLRFFtTkNrMEtMUXF5QXRMUzB0TFMwdExTMHRMU292WEc0dktpQXRMUzB0TFMwdExTMHRMU0RRcHRDUzBKWFFvdENRSUMwdExTMHRMUzB0TFMwdEtpOWNiaThxSUMwdExTMHRMUzB0TFMwdElOQ2cwSkRRbDlDZzBKWFFxTkNWMEozUW1OQ3ZJTkN0MEpyUW9OQ1EwSjNRa0NBdExTMHRMUzB0TFMwdExTb3ZYRzR2S2lBdExTMHRMUzB0TFMwdExTQlFRVVJFU1U1SFV5OU5RVkpIU1U1VElDMHRMUzB0TFMwdExTMHRLaTljYmk1b1pXRmtaWEl0TVd0NVlTQjdYRzRnSUdScGMzQnNZWGs2SUMxdGN5MW1iR1Y0WW05NE8xeHVJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHVJQ0F0YlhNdFpteGxlQzFoYkdsbmJqb2dZMlZ1ZEdWeU8xeHVJQ0JoYkdsbmJpMXBkR1Z0Y3pvZ1kyVnVkR1Z5TzF4dUlDQndZV1JrYVc1bkxXeGxablE2SURJd2NIZzdYRzRnSUhCaFpHUnBibWN0Y21sbmFIUTZJREl3Y0hoY2JuMWNiaTVvWldGa1pYSXRNV3Q1WVRvNlltVm1iM0psSUh0Y2JpQWdZMjl1ZEdWdWREb2dKMUpsWVdOMElGQnliMnBsWTNRbk8xeHVJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNiaUFnWm05dWRDMXphWHBsT2lBeExqVnlaVzA3WEc0Z0lHeHBibVV0YUdWcFoyaDBPaUF4TGpJNU8xeHVJQ0JtYjI1MExYZGxhV2RvZERvZ056QXdPMXh1SUNCamIyeHZjam9nSXpBd01EdGNiaUFnYldGeVoybHVMWEpwWjJoME9pQmhkWFJ2WEc1OVhHNHVhR1ZoWkdWeUxXNWhkaTB5ZWtaVUlIdGNiaUFnWkdsemNHeGhlVG9nTFcxekxXWnNaWGhpYjNnN1hHNGdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJQzF0Y3kxbWJHVjRMV0ZzYVdkdU9pQmpaVzUwWlhJN1hHNGdJR0ZzYVdkdUxXbDBaVzF6T2lCalpXNTBaWEk3WEc0Z0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTm1abVk3WEc1OVhHNHVhR1ZoWkdWeUxXNWhkaTFzYVc1ckxUTkxVREVnZTF4dUlDQm1iMjUwTFhOcGVtVTZJREF1T0RFeU5YSmxiVHRjYmlBZ1ptOXVkQzEzWldsbmFIUTZJRGN3TUR0Y2JpQWdiR2x1WlMxb1pXbG5hSFE2SURFdU16ZzdYRzRnSUd4bGRIUmxjaTF6Y0dGamFXNW5PaUF1TURWbGJUdGNiaUFnZEdWNGRDMTBjbUZ1YzJadmNtMDZJSFZ3Y0dWeVkyRnpaVHRjYmlBZ1kyOXNiM0k2SUhKblltRW9OemtzSURjNUxDQTNPU3dnTGpVcE8xeHVJQ0F0ZDJWaWEybDBMWFJ5WVc1emFYUnBiMjQ2SUM0emN6dGNiaUFnZEhKaGJuTnBkR2x2YmpvZ0xqTnpPMXh1SUNCd1lXUmthVzVuT2lBeU9IQjRJREFnTWpOd2VEdGNiaUFnWW05eVpHVnlMV0p2ZEhSdmJUb2dNM0I0SUhOdmJHbGtJSFJ5WVc1emNHRnlaVzUwWEc1OVhHNHVhR1ZoWkdWeUxXNWhkaTFzYVc1ckxUTkxVREV1WVdOMGFYWmxMVE5VVlRjZ2UxeHVJQ0JqYjJ4dmNqb2dJelJtTkdZMFpqdGNiaUFnWW05eVpHVnlMV052Ykc5eU9pQWpNMkZqTVRZeU8xeHVmVnh1TG1obFlXUmxjaTF1WVhZdGJHbHVheTB6UzFBeE9taHZkbVZ5SUh0Y2JpQWdZMjlzYjNJNklDTXdNREE3WEc1OVhHNHVhR1ZoWkdWeUxXNWhkaTFzYVc1ckxUTkxVREVnS3lBdWFHVmhaR1Z5TFc1aGRpMXNhVzVyTFROTFVERWdlMXh1SUNCdFlYSm5hVzR0YkdWbWREb2dNelp3ZUR0Y2JuMWNia0J0WldScFlTQW9iV2x1TFhkcFpIUm9PaUF4TURJMGNIZ3BJSHRjYmlBZ0xtaGxZV1JsY2kweGEzbGhJSHRjYmlBZ0lDQndZV1JrYVc1bkxXeGxablE2SURjMmNIZzdYRzRnSUNBZ2NHRmtaR2x1WnkxeWFXZG9kRG9nTnpad2VGeHVJQ0I5WEc0Z0lDNW9aV0ZrWlhJdE1XdDVZVG82WW1WbWIzSmxJSHRjYmlBZ0lDQXZLaURRdmRDd0lOQyswWUxSZ05DMTBMZlF1dEMxSUZzeE1ESTBMQ0F4TkRBd1hTRFJnTkN3MExMUXZkQyswTHpRdGRHQTBMM1F2aURSZzlDeTBMWFF1OUM0MFlmUXVOQ3kwTERSZ3RHTUlOR0EwTERRdDlDODBMWFJnQ0RSaU5HQTBMalJoTkdDMExBZzBZRWdNalJ3ZUNEUXROQytJRE0yY0hnZ0tpOWNiaUFnSUNCbWIyNTBMWE5wZW1VNklHTmhiR01vS0NneUxqSTFJQzBnTVM0MUtTQXFJQ2dvTVRBd2RuY3BJQzBnTmpSeVpXMHBJQzhnS0Rrd0lDMGdOalFwS1NBcklERXVOWEpsYlNsY2JpQWdmVnh1ZlZ4dUx5b2pJSE52ZFhKalpVMWhjSEJwYm1kVlVrdzlaR0YwWVRwaGNIQnNhV05oZEdsdmJpOXFjMjl1TzJKaGMyVTJOQ3hsZVVveVdsaEtlbUZYT1hWSmFtOTZURU5LZW1JelZubFpNbFo2U1dwd1lrbHBOSFZNTTA1NVdYazVhbU16VFhaa2JVWjVZVmRHYVdKSFZucE1iazVxWXpOTmFVeERTWFZNYVRsNlkyMU5kbUZ1VFhaWk1qbDBZMGM1ZFZwWE5UQmplVGx2V2xkR2ExcFlTWFpoVnpWcldsaG5kV015VG5wamVVcGtURU5LZFZsWE1XeGplVWsyVnpFd2MwbHRNV2hqU0VKd1ltMWtla2xxYjJsUlZVWkNVVk40ZEZFd1JrSmhWVTAzVVZWR1ZHRnJUWE5oTUU1Q1VWZGtSRTh3UmtKWlYyaEVURVJvUkZGVlJUQlJlblJDVVZkc1EwNVZUWE5PYTA1Q1VWUktSRTh3UmtSamEwMTZVWHAwUmxGVlRrWk1TRVpEVVZWR2FrOHdWa0pSVjFGeldUQkdRbGw2ZEVaUlZVNXJURWhXUTFGVlJuWlJhblJPVVZWR2QxRnBlSFpSYTBaQ1lqQkpOMUpWUmtSalJVbHpZbFZLUWxGVVdrTlBNRlpDVVhwa1EweEhNVU5SVlVVMFVXcDBSRkZZUmtOTU1FazNVVlZHYTFGNmRFcFJWVTVHVEVoc1ExRlZSalZSYW5SS1VWVk9ObEZwZUd4UlZVWnNUekJzUWxFeVdYTmhNRXBDVVZka1EwOHdiRUpSTW1oRFRFZDBRMUZWUm5KUmFuUktVVlZPYzFGcGVIQlJhMFpDWVZWSk4xTlZSa1JoYTBselYxVkdRbGRVZEVwUlZVNWhURWQwUTFGVlJuUlJhblJJVVZVeGQxRnFkRUpSVldSSlR6QldRbEV3VlhOalZVcENVVmROTjFKVlJrSmFRM2hxVVZWR2FrOHdWa0pSTWxGelpGVktRbEZYT1VOUE1ERkNVVmhDUTB4SE9VTlJWVVoyVVdwMFJsRlZUbmRSYVhneFVXdEdRbVJWU1RkUk1FWkVaVVZKTjFGVlJrWlNSSFJHVVZWT1JreElSa05SVlVadVVXcDBSbEZWVG05UmFYaHdVV3RHUW1GVlNUZFNWVVpFWVd0SmMyRXdTa0pSVjNSRFR6QldRbEV5ZUVOTVNFNURVVlZHZWxGcWRFWlJWVTR3VVdsM2QxRnJSa0pOUlVrM1VsVkdSRTFWU1hOT1JVcENVVlJTUTA4d1ZrSlJlbFpEVEVoa1ExRlZSbTVSYW5SR1VWVkdiMUZwZUc1UmEwWkNXakJKTjFKVlJrUmhSVWx6WTFWS1FsRllSa05QTUZaQ1VUTktRMHhIT1VSUlZVWjRVWHAwUkZGWFRqQlJlblJDVVZad1JFOHdiRUpSTUZWeldsVkdRbHBVZEVwUlZVNXRURWhPUTFGVlJucFJhblJJVVZWT01sRnFkRUpSVlZaRlR6QnNRbEV3VlhOWFZVWkNWMVIwU0ZGVlRtbFBNRVpDVWxWUk4xTlZSa1JTVTNoeVVXdEdRbUV3U1RkU01FWkVZbXRKTjFGVlJuRlNSVkUzVVZWR1QxSnFkRXBSVlRsS1RFY3hRMUZWUlRSUmFuUktVVlZOTlZGcGVIUlJhMFpDU3pCSk4xRXdSbkJSYlhoRVR6QkdRbHBGVFRkVVZVWldVMU40Y0ZKclJrSmhWVmszVkZWR1JHRnJXWE5rTUZaQ1VWUlNSVTh3WkVKU1V6bEZUekJrUWxwclJXbE1RMHB0WVZkNGJFbHFiMmxNYVRSMll6Tktha3d5Y0hwTU1rNTJZbGhDZG1KdFZuVmtTRTEyWVVkV2FGcEhWbmxNTW14MVdrZFdORXh1VG1wak0wMXBURU5LZW1JelZubFpNbFo2VVRJNWRXUkhWblZrUTBrMlYzbEpka3g1UVhSTVV6QjBURk13ZEV4VE1IUk1VMFJSY1U1RFp6QkthbEZ3VGtOcE1FdHpaMHhUTUhSTVV6QjBURk13ZEV4VE1XTmlhVkpPWkZoT2JHSXhUbWhpYmswMlNVTmtUbVJZVG14aWVVSlVXVmMxZWtwNWQyZGpNa1oxWTNreGVscFlTbkJhYW5SalltbFNSMkl5TlRCV1IyaHdZbXB2WjAxVVFYZFBNWGgxU2tWYWRtSnVVazFoVjJSdlpFUnZaMDE2UVhkUE1YaDFTa1ZhZG1KdVVsTmFWMlF4WWtkR2VVOXBRVEJOUkVFM1dFYzBhMUp0T1hWa1JURnNXa2RzTVdKVWIyZE9WRUYzVHpGNGRVcEZXblppYmxKRFlqSjRhMDlwUVROTlJFRTNXRWMwYTFKdE9YVmtSVXB6V1ZkT2NrOXBRVFZOUkVFM1dFYzFZMkpwT0haSlF6QjBURk13ZEV4VE1IUk1VekIwU1U1RGJUQktURkZzWkVOcE1FcEJaMHhUTUhSTVV6QjBURk13ZEV4VE1XTmlhVkpxWWpKNGRtTnBNVE5oUjJ3d1dsUnZaMGt5V20xYWJWcHRXbXAwWTJKcFVtcGlNbmgyWTJreGFXSkhSbXBoZVRGcVlrZEdlbU15YkdwUGFVRnFUVVJCZDAxRVFYZFBNWGgxU2tkT2RtSkhPWGxNVjBweldWZE9ja3hYV21oYVIxWnJUMmxCYWsxNmEzcGFSRTAxVHpGNGRVcEhUblppUnpsNVRGZEtjMWxYVG5KTVYzaHdXakpvTUU5cFFXcE9SMWt3V21wU2JVOHhlSFZLUjA1MllrYzVlVXhYWkhsWldHczJTVU5PYUZwSFJtdFpWMUUzV0VjMGExa3lPWE5pTTBsMFdqTktiRnBYTkRaSlEwMTVUVzFGTkU1SFJUZFlSelJyV1RJNWMySXpTWFJhTTBwc1dsYzBkR0pIYkc1aFNGRTJTVU5OZWxsWFRYaE9ha2szV0VjMGExa3lPWE5pTTBsMFkwZHNkV0Y2YjJkSk1scHRUbTFaTVZwcWRHTmlhVkpxWWpKNGRtTnBNVzVpTW5oclQybEJhbHB0V210UFJHUnBUekY0ZFVwSFRuWmlSemw1VEZkS2MyUlhWVFpKUTAweVdtMUpkMXBIVFRkWVJ6UnJXVEk1YzJJelNYUmpTRlo1WTBkNGJFOXBRV3BhUkVFelRUSkpNMDh4ZUhWWVJ6UjJUSGxCZEV4VE1IUk1VekIwVEZNd2RFeFRSRkZ2VGtOUk1FcG1VVzlPUTFZd1MycFJiR1JEWkRCS2FsRnllVVJSY21SRFlUQkxSRkZyVGtOa01FcEJaMHhUTUhSTVV6QjBURk13ZEV4VE1XTmlhVkowWWpKS2NHSkhWVFpKUkUxNVRVaENORTh4ZUhWS1NGSm9XVzE0YkdSRWIyZE9lbGswWTBobk4xaEhOR3RhUjFaNllUTlNkbU5FYjJkTlZFRjVUa2hDTkU4eGVIVktSMHB3V25reGExcFlUbkprUnpsM1QybEJlRTVFVVhkalNHYzNXRWMxWTJKclFtcGtXRTR3WWpJd2RHSlhWbXRoVjBWblRGTXhNRmxYU25OYVdGRm5TME5TTUZsWFNuTmFXRkZuVUVRd1oyUXliR3RrUjJkblVFTkJhMXBIVm5waE0xSjJZME5yTjFoSE5VRlpNMVo2WkVjNWRFeFhNV3hhUjJ4b1NVTXdkR0pYYkhWTVdGSm9XVzE0YkdSRFFXOWtNbXhyWkVkbloxQnFNR2RLU0ZKb1dXMTRiR1JEYXpkWVJ6VkJXVE5XZW1SSE9YUk1WekZzV2tkc2FFbERNSFJpVjBZMFRGaFNhRmx0ZUd4a1EwRnZaREpzYTJSSFoyZFFRMEZyWkVkR2FXSkhWakJMVkhSallteDRkVkZIVGpGak0xSjJZbE14ZEZwWFVuQlpVMEYwVEZkU2JHTXlkREJpTTBGblMwTlNhMXBZVG5Ka1J6bDNTVVIzT1VsSVpIQmFTRkp2U1VSM1owcEhTbkJhZVRGcldsaE9jbVJIT1hkTFZIUmpZbXRDYW1SWVRqQmlNakIwWWxkV2EyRlhSV2RNVXpGMFlWYzBkRnBIVm5waE0xSjJZME5CYjJReWJHdGtSMmRuVUdvd1owcEhVbXhqTW5Rd1lqTkJjRTh4ZUhWUlIwNHhZek5TZG1KVE1YUmFWMUp3V1ZOQmRFeFhNV2hsUXpGcldsaE9jbVJIT1hkSlEyZ3pZVmRTTUdGRFFUaEpRMUpyV2xoT2NtUkhPWGRMVkhSallteDRkVkZIVGpGak0xSjJZbE14ZEZwWFVuQlpVMEYwVEZjeGNHSnBNV2xoVjJOMFdrZFdlbUV6VW5aalEwRnZaREpzYTJSSFoyZFFSREJuU2tkS2NGcDVNV3RhV0U1eVpFYzVkMHRVZEdOaWEwSnFaRmhPTUdJeU1IUmlWMVpyWVZkRloweFRNV2xoVjJOMFdrZFdlbUV6VW5aalEwRnZaREpzYTJSSFoyZFFhakJuU2tkS2NGcDVNV3RhV0U1eVpFYzVkMHRVZEdOaWJIaDFUSGs0WjB4VE1IUk1VekIwVEZNd2RFeFRNR2RWUlVaRlVrVnNUMUl4VFhaVVZVWlRVakJzVDFWNVFYUk1VekIwVEZNd2RFeFRNSFJNVm5oMVNrY3hhR050WkhCaWFURjBZakpLY0dKSFZUWkpSRWwzWTBobk4xaEhOR3RpVjBaNVdqSnNkVXhZVW1oWmJYaHNaRVJ2WjAxNlVuZGxSSFJqWW1sU2RGbFlTbTVoVnpSMFdrZFdlbUV6VW5aalJHOW5UbnBhZDJWRWRHTmlhVkowV1ZoS2JtRlhOSFJaYld4dVRGZFNiR015ZERCaU0wRTJTVVJGTUdSdVl6ZEphWGRwVVVkc2RHTkhPWGxrUTBKalNXNDFhbU16VFhaa2JVWjVZVmRHYVdKSFZucE1iazVxWXpOT1kwbHFkR05pYkhoMVRHMW9iRmxYVW14amFVSTNXRWMwWjBsSFVuQmpNMEp6V1Zock5rbEhXbk5hV0djM1dFYzBaMGxIUm5OaFYyUjFURmRzTUZwWE1YcFBhVUpxV2xjMU1GcFlTVGRZUnpSblNVaENhRnBIVW5CaWJXTjBZa2RXYldSRWIyZEtSekZvWTIxa2NHSnBNWFJpTWtwd1lrZFZOMWhITkdkSlNFSm9Xa2RTY0dKdFkzUmpiV3h1WVVoUk5rbERVblJaV0VwdVlWYzBkR0pYT1dsaFYzaHNUekY0ZFZoSE5HZEpSVUowV2xkU2NGbFRRVzlNVXpGMFlWYzBkRnBIVm5waE0xSjJZME5yWjJVeGVIVkpRMEZuU1VoQ2FGcEhVbkJpYldOMFlrZFdiV1JFYjJkS1J6Rm9ZMjFrY0dKcE1XdGFXRTV5WkVjNWQwOHhlSFZKUTBGblNVaENhRnBIVW5CaWJXTjBZMjFzYm1GSVVUWkpRMUowV1ZoS2JtRlhOSFJhUjFaNllUTlNkbU5FZEdOaWFVRm5abFo0ZFZoSE5HZEpRMWsyVDIxS2JGcHRPWGxhVTBJM1dFYzBaMGxEUVdkWk1qbDFaRWRXZFdSRWIyZEtNVXBzV1ZkT01FbEdRbmxpTW5Cc1dUTlJiazh4ZUhWSlEwRm5TVWRTY0dNelFuTlpXR3MyU1VkS2MySXlUbkpQTVhoMVNVTkJaMGxIV25aaWJsRjBZekpzTmxwVWIyZE5hbEozWlVSMFkySnBRV2RKUTBKellWYzFiRXhYYUd4aFYyUnZaRVJ2WjAxNlJuZGxSSFJqWW1sQlowbERRbTFpTWpVd1RGaGtiR0ZYWkc5a1JHOW5UbnBCZDA4eGVIVkpRMEZuU1VkT2RtSkhPWGxQYVVGcVRVUkJkMDh4ZUhWSlEwRm5TVWN4YUdOdFpIQmlhVEY1WVZka2IyUkViMmRaV0ZZd1lucDBZMkpzZUhWSlEwRm5TVVZDZEZwWFVuQlpVMEZ2VEZNeGRHRlhOSFJhUjFaNllUTlNkbU5EYTJkbE1YaDFTVU5CWjBsRFFXZE1lVzluTUV3elVYTkRSRkYyZEVkRE1GbEVVWFJrUXpNd1RISlJkRk5DWWsxVVFYbE9RM2RuVFZSUmQwMUdNR2N3V1VSUmMwNURlVEJNTTFGMmRFTTRNRXhZVW1kT1F6a3dURFJuTUZsUVVYTjBRekV3VEhaUmRVNUhTREJNYWxGemRFTjNNRmxNVW1wRFJGSm5Ua04zTUV4bVVYWk9RekV3V1VGbk1GbHFVbWRPUXpRd1dWUlNaM1JEZDBsT1IwSkpSRWt3WTBoblp6Qk1WRkYyYVVGNlRtNUNORWxEYjNaWVJ6Um5TVU5CWjBsRFFtMWlNalV3VEZoT2NHVnRWVFpKU0U1cVdWZDRiRXREVW10YVdFNXlaRWM1ZDB4RFFXdFpiV3h1VEZkU2JHTXlkREJpTTBGelNVUkpNR05JWjNOSlJFMHlZMGhuYzBsRVJYZE5TRm96UzFSMFkySnBRV2RKUTBJNVdFYzBaMGxJTVdOaWJqRmpZbXg0ZFV4dGFHeFpWMUpzWTJreGRWbFlXV2RsTVhoMVNVTkNhMkZZVG5kaVIwWTFUMmxDYldKSFZqUlBNWGgxU1VOQ2FHSkhiRzVpYVRGd1pFZFdkR042YjJkWk1sWjFaRWRXZVU4eGVIVkpRMEpwV1ZkT2Nsb3pTblprVnpWclRGZE9kbUpIT1hsUGFVRnFXbTFhYlU4eGVIVm1WbmgxV0VjMGRXRkhWbWhhUjFaNVRGYzFhR1JwTVhOaFZ6VnlTVWgwWTJKcFFXZGFiVGwxWkVNeGVtRlljR3hQYVVGNFRUTkNORTh4ZUhWSlEwSnRZakkxTUV4WVpHeGhWMlJ2WkVSdlowNTZRWGRQTVhoMVNVTkNjMkZYTld4TVYyaHNZVmRrYjJSRWIyZE5WR2gzWlVSMFkySnBRV2RpUjFZd1pFZFdlVXhZVG5kWlYwNXdZbTFqTmtsRE5IZE9WMVowVHpGNGRVbERRakJhV0dnd1RGaFNlVmxYTlhwYWJUbDVZbFJ2WjJSWVFuZGFXRXBxV1ZoT2JFOHhlSFZKUTBKcVlqSjRkbU5xYjJkamJXUnBXVk5uTTA5VGQyZE9lbXR6U1VSak5VeERRWFZPVTJzM1dFYzBaMGxJVW5sWlZ6VjZZVmhTY0dJeU5EWkpRelI2WTNwMFkySnBRV2RqUjBacldrZHNkVnA2YjJkTmFtaDNaVU5CZDBsRVNYcGpTR2MzV0VjMFowbEhTblpqYlZKc1kya3hhV0l6VWpCaU1qQTJTVVJPZDJWRFFucGlNbmh3V2tOQ01HTnRSblZqTTBKb1kyMVdkV1JFZEdOaWJIaDFTVU5CYlV4dFJtcGtSMnd5V2xOQ04xaEhOR2RKUTBGbldUSTVjMkl6U1RaSlEwMHdXbXBTYlU1SFdUZFlSelJuU1VOQloxbHRPWGxhUjFaNVRGZE9kbUpIT1hsUGFVRnFUVEpHYWsxVVdYbFBNWGgxU1VOQ09WaEhOV05pYVVGblNtcHdiMkl6V214amFVSTNXRWMwWjBsRFFXZFpNamx6WWpOSk5rbERUWGROUkVFM1dFYzBaMGxJTVdOaWJIaDFTVU5CYlVsRGMyZEthVUkzV0VjMFowbERRV2RpVjBaNVdqSnNkVXhYZUd4YWJsRTJTVVJOTW1OSVp6ZFlSelJuU1VneFkySnVNR2xZV0RBOUlDb3ZYRzR2S2lBdExTMHRMUzB0TFMwdExTRFFxTkNnMEpqUXBOQ2kwS3NnTFMwdExTMHRMUzB0TFMwcUwxeHVMeW9nTFMwdExTMHRMUzB0TFMwZzBLYlFrdENWMEtMUWtDQXRMUzB0TFMwdExTMHRMU292WEc0dktpQXRMUzB0TFMwdExTMHRMU0RRb05DUTBKZlFvTkNWMEtqUWxkQ2QwSmpRcnlEUXJkQ2EwS0RRa05DZDBKQWdMUzB0TFMwdExTMHRMUzBxTDF4dUx5b2dMUzB0TFMwdExTMHRMUzBnVUVGRVJFbE9SMU12VFVGU1IwbE9VeUF0TFMwdExTMHRMUzB0TFNvdlhHNHVhR1ZoWkdWeUxURnJlV0VnZTF4dUlDQmthWE53YkdGNU9pQXRiWE10Wm14bGVHSnZlRHRjYmlBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ0xXMXpMV1pzWlhndFlXeHBaMjQ2SUdObGJuUmxjanRjYmlBZ1lXeHBaMjR0YVhSbGJYTTZJR05sYm5SbGNqdGNiaUFnY0dGa1pHbHVaeTFzWldaME9pQXlNSEI0TzF4dUlDQndZV1JrYVc1bkxYSnBaMmgwT2lBeU1IQjRYRzU5WEc0dWFHVmhaR1Z5TFRGcmVXRTZPbUpsWm05eVpTQjdYRzRnSUdOdmJuUmxiblE2SUNkU1pXRmpkQ0JRY205cVpXTjBKenRjYmlBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc0Z0lHWnZiblF0YzJsNlpUb2dNUzQxY21WdE8xeHVJQ0JzYVc1bExXaGxhV2RvZERvZ01TNHlPVHRjYmlBZ1ptOXVkQzEzWldsbmFIUTZJRGN3TUR0Y2JpQWdZMjlzYjNJNklDTXdNREE3WEc0Z0lHMWhjbWRwYmkxeWFXZG9kRG9nWVhWMGIxeHVmVnh1TG1obFlXUmxjaTF1WVhZdE1ucEdWQ0I3WEc0Z0lHUnBjM0JzWVhrNklDMXRjeTFtYkdWNFltOTRPMXh1SUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh1SUNBdGJYTXRabXhsZUMxaGJHbG5iam9nWTJWdWRHVnlPMXh1SUNCaGJHbG5iaTFwZEdWdGN6b2dZMlZ1ZEdWeU8xeHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFqWm1abU8xeHVmVnh1TG1obFlXUmxjaTF1WVhZdGJHbHVheTB6UzFBeElIdGNiaUFnWm05dWRDMXphWHBsT2lBd0xqZ3hNalZ5WlcwN1hHNGdJR1p2Ym5RdGQyVnBaMmgwT2lBM01EQTdYRzRnSUd4cGJtVXRhR1ZwWjJoME9pQXhMak00TzF4dUlDQnNaWFIwWlhJdGMzQmhZMmx1WnpvZ0xqQTFaVzA3WEc0Z0lIUmxlSFF0ZEhKaGJuTm1iM0p0T2lCMWNIQmxjbU5oYzJVN1hHNGdJR052Ykc5eU9pQnlaMkpoS0RjNUxDQTNPU3dnTnprc0lDNDFLVHRjYmlBZ0xYZGxZbXRwZEMxMGNtRnVjMmwwYVc5dU9pQXVNM003WEc0Z0lIUnlZVzV6YVhScGIyNDZJQzR6Y3p0Y2JpQWdjR0ZrWkdsdVp6b2dNamh3ZUNBd0lESXpjSGc3WEc0Z0lHSnZjbVJsY2kxaWIzUjBiMjA2SUROd2VDQnpiMnhwWkNCMGNtRnVjM0JoY21WdWRGeHVmVnh1TG1obFlXUmxjaTF1WVhZdGJHbHVheTB6UzFBeExtRmpkR2wyWlMwelZGVTNJSHRjYmlBZ1kyOXNiM0k2SUNNMFpqUm1OR1k3WEc0Z0lHSnZjbVJsY2kxamIyeHZjam9nSXpOaFl6RTJNanRjYm4xY2JpNW9aV0ZrWlhJdGJtRjJMV3hwYm1zdE0wdFFNVHBvYjNabGNpQjdYRzRnSUdOdmJHOXlPaUFqTURBd08xeHVmVnh1TG1obFlXUmxjaTF1WVhZdGJHbHVheTB6UzFBeElDc2dMbWhsWVdSbGNpMXVZWFl0YkdsdWF5MHpTMUF4SUh0Y2JpQWdiV0Z5WjJsdUxXeGxablE2SURNMmNIZzdYRzU5WEc1QWJXVmthV0VnS0cxcGJpMTNhV1IwYURvZ01UQXlOSEI0S1NCN1hHNGdJQzVvWldGa1pYSXRNV3Q1WVNCN1hHNGdJQ0FnY0dGa1pHbHVaeTFzWldaME9pQTNObkI0TzF4dUlDQWdJSEJoWkdScGJtY3RjbWxuYUhRNklEYzJjSGhjYmlBZ2ZWeHVJQ0F1YUdWaFpHVnlMVEZyZVdFNk9tSmxabTl5WlNCN1hHNGdJQ0FnTHlvZzBMM1FzQ0RRdnRHQzBZRFF0ZEMzMExyUXRTQmJNVEF5TkN3Z01UUXdNRjBnMFlEUXNOQ3kwTDNRdnRDODBMWFJnTkM5MEw0ZzBZUFFzdEMxMEx2UXVOR0gwTGpRc3RDdzBZTFJqQ0RSZ05DdzBMZlF2TkMxMFlBZzBZalJnTkM0MFlUUmd0Q3dJTkdCSURJMGNIZ2cwTFRRdmlBek5uQjRJQ292WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUJqWVd4aktDZ29NaTR5TlNBdElERXVOU2tnS2lBb0tERXdNSFozS1NBdElEWTBjbVZ0S1NBdklDZzVNQ0F0SURZMEtTa2dLeUF4TGpWeVpXMHBYRzRnSUgxY2JuMWNiaThxSXlCemIzVnlZMlZOWVhCd2FXNW5WVkpNUFdSaGRHRTZZWEJ3YkdsallYUnBiMjR2YW5OdmJqdGlZWE5sTmpRc1pYbEtNbHBZU25waFZ6bDFTV3B2ZWt4RFNucGlNMVo1V1RKV2VrbHFjR0pKYVRSMVRETk9lVmw1T1dwak0wMTJaRzFHZVdGWFJtbGlSMVo2VEc1T2FtTXpUV2xNUTBsMVRHazVlbU50VFhaaGJrMTJXVEk1ZEdOSE9YVmFWelV3WTNrNWIxcFhSbXRhV0VsMllWYzFhMXBZWjNWak1rNTZZM2xLWkV4RFNuVlpWekZzWTNsSk5sY3hNSE5KYlRGb1kwaENjR0p0WkhwSmFtOXBVVlZHUWxGVGVIUlJNRVpDWVZWTk4xRlZSbFJoYTAxellUQk9RbEZYWkVSUE1FWkNXVmRvUkV4RWFFUlJWVVV3VVhwMFFsRlhiRU5PVlUxelRtdE9RbEZVU2tSUE1FWkVZMnROZWxGNmRFWlJWVTVHVEVoR1ExRlZSbXBQTUZaQ1VWZFJjMWt3UmtKWmVuUkdVVlZPYTB4SVZrTlJWVVoyVVdwMFRsRlZSbmRSYVhoMlVXdEdRbUl3U1RkU1ZVWkVZMFZKYzJKVlNrSlJWRnBEVHpCV1FsRjZaRU5NUnpGRFVWVkZORkZxZEVSUldFWkRUREJKTjFGVlJtdFJlblJLVVZWT1JreEliRU5SVlVZMVVXcDBTbEZWVGpaUmFYaHNVVlZHYkU4d2JFSlJNbGx6WVRCS1FsRlhaRU5QTUd4Q1VUSm9RMHhIZEVOUlZVWnlVV3AwU2xGVlRuTlJhWGh3VVd0R1FtRlZTVGRUVlVaRVlXdEpjMWRWUmtKWFZIUktVVlZPWVV4SGRFTlJWVVowVVdwMFNGRlZNWGRSYW5SQ1VWVmtTVTh3VmtKUk1GVnpZMVZLUWxGWFRUZFNWVVpDV2tONGFsRlZSbXBQTUZaQ1VUSlJjMlJWU2tKUlZ6bERUekF4UWxGWVFrTk1SemxEVVZWR2RsRnFkRVpSVlU1M1VXbDRNVkZyUmtKa1ZVazNVVEJHUkdWRlNUZFJWVVpHVWtSMFJsRlZUa1pNU0VaRFVWVkdibEZxZEVaUlZVNXZVV2w0Y0ZGclJrSmhWVWszVWxWR1JHRnJTWE5oTUVwQ1VWZDBRMDh3VmtKUk1uaERURWhPUTFGVlJucFJhblJHVVZWT01GRnBkM2RSYTBaQ1RVVkpOMUpWUmtSTlZVbHpUa1ZLUWxGVVVrTlBNRlpDVVhwV1EweElaRU5SVlVadVVXcDBSbEZWUm05UmFYaHVVV3RHUWxvd1NUZFNWVVpFWVVWSmMyTlZTa0pSV0VaRFR6QldRbEV6U2tOTVJ6bEVVVlZHZUZGNmRFUlJWMDR3VVhwMFFsRldjRVJQTUd4Q1VUQlZjMXBWUmtKYVZIUktVVlZPYlV4SVRrTlJWVVo2VVdwMFNGRlZUakpSYW5SQ1VWVldSVTh3YkVKUk1GVnpWMVZHUWxkVWRFaFJWVTVwVHpCR1FsSlZVVGRUVlVaRVVsTjRjbEZyUmtKaE1FazNVakJHUkdKclNUZFJWVVp4VWtWUk4xRlZSazlTYW5SS1VWVTVTa3hITVVOUlZVVTBVV3AwU2xGVlRUVlJhWGgwVVd0R1Frc3dTVGRSTUVad1VXMTRSRTh3UmtKYVJVMDNWRlZHVmxOVGVIQlNhMFpDWVZWWk4xUlZSa1JoYTFselpEQldRbEZVVWtWUE1HUkNVbE01UlU4d1pFSmFhMFZwVEVOS2JXRlhlR3hKYW05cFRHazBkbU16U21wTU1uQjZUREpPZG1KWVFuWmliVloxWkVoTmRtRkhWbWhhUjFaNVRESnNkVnBIVmpSTWJrNXFZek5OYVV4RFNucGlNMVo1V1RKV2VsRXlPWFZrUjFaMVpFTkpObGQ1U1haTWVVRjBURk13ZEV4VE1IUk1VekIwVEZORVVYRk9RMmN3U21wUmNFNURhVEJMYzJkTVV6QjBURk13ZEV4VE1IUk1VekZqWW1sU1RtUllUbXhpTVU1b1ltNU5Oa2xEWkU1a1dFNXNZbmxDVkZsWE5YcEtlWGRuWXpKR2RXTjVNWHBhV0Vwd1dtcDBZMkpwVWtkaU1qVXdWa2RvY0dKcWIyZE5WRUYzVHpGNGRVcEZXblppYmxKTllWZGtiMlJFYjJkTmVrRjNUekY0ZFVwRlduWmlibEpUV2xka01XSkhSbmxQYVVFd1RVUkJOMWhITkd0U2JUbDFaRVV4YkZwSGJERmlWRzluVGxSQmQwOHhlSFZLUlZwMlltNVNRMkl5ZUd0UGFVRXpUVVJCTjFoSE5HdFNiVGwxWkVWS2MxbFhUbkpQYVVFMVRVUkJOMWhITldOaWFUaDJTVU13ZEV4VE1IUk1VekIwVEZNd2RFbE9RMjB3U2t4UmJHUkRhVEJLUVdkTVV6QjBURk13ZEV4VE1IUk1VekZqWW1sU2FtSXllSFpqYVRFellVZHNNRnBVYjJkSk1scHRXbTFhYlZwcWRHTmlhVkpxWWpKNGRtTnBNV2xpUjBacVlYa3hhbUpIUm5wak1teHFUMmxCYWsxRVFYZE5SRUYzVHpGNGRVcEhUblppUnpsNVRGZEtjMWxYVG5KTVYxcG9Xa2RXYTA5cFFXcE5lbXQ2V2tSTk5VOHhlSFZLUjA1MllrYzVlVXhYU25OWlYwNXlURmQ0Y0ZveWFEQlBhVUZxVGtkWk1GcHFVbTFQTVhoMVNrZE9kbUpIT1hsTVYyUjVXVmhyTmtsRFRtaGFSMFpyV1ZkUk4xaEhOR3RaTWpsellqTkpkRm96U214YVZ6UTJTVU5OZVUxdFJUUk9SMFUzV0VjMGExa3lPWE5pTTBsMFdqTktiRnBYTkhSaVIyeHVZVWhSTmtsRFRYcFpWMDE0VG1wSk4xaEhOR3RaTWpsellqTkpkR05IYkhWaGVtOW5TVEphYlU1dFdURmFhblJqWW1sU2FtSXllSFpqYVRGdVlqSjRhMDlwUVdwYWJWcHJUMFJrYVU4eGVIVktSMDUyWWtjNWVVeFhTbk5rVjFVMlNVTk5NbHB0U1hkYVIwMDNXRWMwYTFreU9YTmlNMGwwWTBoV2VXTkhlR3hQYVVGcVdrUkJNMDB5U1ROUE1YaDFXRWMwZGt4NVFYUk1VekIwVEZNd2RFeFRNSFJNVTBSUmIwNURVVEJLWmxGdlRrTldNRXRxVVd4a1EyUXdTbXBSY25sRVVYSmtRMkV3UzBSUmEwNURaREJLUVdkTVV6QjBURk13ZEV4VE1IUk1VekZqWW1sU2RHSXlTbkJpUjFVMlNVUk5lVTFJUWpSUE1YaDFTa2hTYUZsdGVHeGtSRzluVG5wWk5HTklaemRZUnpScldrZFdlbUV6VW5aalJHOW5UVlJCZVU1SVFqUlBNWGgxU2tkS2NGcDVNV3RhV0U1eVpFYzVkMDlwUVhoT1JGRjNZMGhuTjFoSE5XTmlhMEpxWkZoT01HSXlNSFJpVjFacllWZEZaMHhUTVRCWlYwcHpXbGhSWjB0RFVqQlpWMHB6V2xoUloxQkVNR2RrTW14clpFZG5aMUJEUVd0YVIxWjZZVE5TZG1ORGF6ZFlSelZCV1ROV2VtUkhPWFJNVnpGc1drZHNhRWxETUhSaVYyeDFURmhTYUZsdGVHeGtRMEZ2WkRKc2EyUkhaMmRRYWpCblNraFNhRmx0ZUd4a1EyczNXRWMxUVZrelZucGtSemwwVEZjeGJGcEhiR2hKUXpCMFlsZEdORXhZVW1oWmJYaHNaRU5CYjJReWJHdGtSMmRuVUVOQmEyUkhSbWxpUjFZd1MxUjBZMkpzZUhWUlIwNHhZek5TZG1KVE1YUmFWMUp3V1ZOQmRFeFhVbXhqTW5Rd1lqTkJaMHREVW10YVdFNXlaRWM1ZDBsRWR6bEpTR1J3V2toU2IwbEVkMmRLUjBwd1dua3hhMXBZVG5Ka1J6bDNTMVIwWTJKclFtcGtXRTR3WWpJd2RHSlhWbXRoVjBWblRGTXhkR0ZYTkhSYVIxWjZZVE5TZG1ORFFXOWtNbXhyWkVkbloxQnFNR2RLUjFKc1l6SjBNR0l6UVhCUE1YaDFVVWRPTVdNelVuWmlVekYwV2xkU2NGbFRRWFJNVnpGb1pVTXhhMXBZVG5Ka1J6bDNTVU5vTTJGWFVqQmhRMEU0U1VOU2ExcFlUbkprUnpsM1MxUjBZMkpzZUhWUlIwNHhZek5TZG1KVE1YUmFWMUp3V1ZOQmRFeFhNWEJpYVRGcFlWZGpkRnBIVm5waE0xSjJZME5CYjJReWJHdGtSMmRuVUVRd1owcEhTbkJhZVRGcldsaE9jbVJIT1hkTFZIUmpZbXRDYW1SWVRqQmlNakIwWWxkV2EyRlhSV2RNVXpGcFlWZGpkRnBIVm5waE0xSjJZME5CYjJReWJHdGtSMmRuVUdvd1owcEhTbkJhZVRGcldsaE9jbVJIT1hkTFZIUmpZbXg0ZFV4NU9HZE1VekIwVEZNd2RFeFRNSFJNVXpCblZVVkdSVkpGYkU5U01VMTJWRlZHVTFJd2JFOVZlVUYwVEZNd2RFeFRNSFJNVXpCMFRGWjRkVXBITVdoamJXUndZbWt4ZEdJeVNuQmlSMVUyU1VSSmQyTklaemRZUnpScllsZEdlVm95YkhWTVdGSm9XVzE0YkdSRWIyZE5lbEozWlVSMFkySnBVblJaV0VwdVlWYzBkRnBIVm5waE0xSjJZMFJ2WjA1NlduZGxSSFJqWW1sU2RGbFlTbTVoVnpSMFdXMXNia3hYVW14ak1uUXdZak5CTmtsRVJUQmtibU0zU1dsM2FWRkhiSFJqUnpsNVpFTkNZMGx1Tldwak0wMTJaRzFHZVdGWFJtbGlSMVo2VEc1T2FtTXpUbU5KYW5SallteDRkVXh0YUd4WlYxSnNZMmxDTjFoSE5HZEpSMUp3WXpOQ2MxbFlhelpKUjFweldsaG5OMWhITkdkSlIwWnpZVmRrZFV4WGJEQmFWekY2VDJsQ2FscFhOVEJhV0VrM1dFYzBaMGxJUW1oYVIxSndZbTFqZEdKSFZtMWtSRzluU2tjeGFHTnRaSEJpYVRGMFlqSktjR0pIVlRkWVJ6Um5TVWhDYUZwSFVuQmliV04wWTIxc2JtRklVVFpKUTFKMFdWaEtibUZYTkhSaVZ6bHBZVmQ0YkU4eGVIVllSelJuU1VWQ2RGcFhVbkJaVTBGdlRGTXhkR0ZYTkhSYVIxWjZZVE5TZG1ORGEyZGxNWGgxU1VOQlowbElRbWhhUjFKd1ltMWpkR0pIVm0xa1JHOW5Ta2N4YUdOdFpIQmlhVEZyV2xoT2NtUkhPWGRQTVhoMVNVTkJaMGxJUW1oYVIxSndZbTFqZEdOdGJHNWhTRkUyU1VOU2RGbFlTbTVoVnpSMFdrZFdlbUV6VW5aalJIUmpZbWxCWjJaV2VIVllSelJuU1VOWk5rOXRTbXhhYlRsNVdsTkNOMWhITkdkSlEwRm5XVEk1ZFdSSFZuVmtSRzluU2pGS2JGbFhUakJKUmtKNVlqSndiRmt6VVc1UE1YaDFTVU5CWjBsSFVuQmpNMEp6V1Zock5rbEhTbk5pTWs1eVR6RjRkVWxEUVdkSlIxcDJZbTVSZEdNeWJEWmFWRzluVFdwU2QyVkVkR05pYVVGblNVTkNjMkZYTld4TVYyaHNZVmRrYjJSRWIyZE5la1ozWlVSMFkySnBRV2RKUTBKdFlqSTFNRXhZWkd4aFYyUnZaRVJ2WjA1NlFYZFBNWGgxU1VOQlowbEhUblppUnpsNVQybEJhazFFUVhkUE1YaDFTVU5CWjBsSE1XaGpiV1J3WW1reGVXRlhaRzlrUkc5bldWaFdNR0o2ZEdOaWJIaDFTVU5CWjBsRlFuUmFWMUp3V1ZOQmIweFRNWFJoVnpSMFdrZFdlbUV6VW5aalEydG5aVEY0ZFVsRFFXZEpRMEZuVEhsdlp6Qk1NMUZ6UTBSUmRuUkhRekJaUkZGMFpFTXpNRXh5VVhSVFFtSk5WRUY1VGtOM1owMVVVWGROUmpCbk1GbEVVWE5PUTNrd1RETlJkblJET0RCTVdGSm5Ua001TUV3MFp6QlpVRkZ6ZEVNeE1FeDJVWFZPUjBnd1RHcFJjM1JEZHpCWlRGSnFRMFJTWjA1RGR6Qk1abEYyVGtNeE1GbEJaekJaYWxKblRrTTBNRmxVVW1kMFEzZEpUa2RDU1VSSk1HTklaMmN3VEZSUmRtbEJlazV1UWpSSlEyOTJXRWMwWjBsRFFXZEpRMEp0WWpJMU1FeFlUbkJsYlZVMlNVaE9hbGxYZUd4TFExSnJXbGhPY21SSE9YZE1RMEZyV1cxc2JreFhVbXhqTW5Rd1lqTkJjMGxFU1RCalNHZHpTVVJOTW1OSVozTkpSRVYzVFVoYU0wdFVkR05pYVVGblNVTkNPVmhITkdkSlNERmpZbTR4WTJKc2VIVk1iV2hzV1ZkU2JHTnBNWFZaV0ZsblpURjRkVWxEUW10aFdFNTNZa2RHTlU5cFFtMWlSMVkwVHpGNGRVbERRbWhpUjJ4dVlta3hjR1JIVm5SamVtOW5XVEpXZFdSSFZubFBNWGgxU1VOQ2FWbFhUbkphTTBwMlpGYzFhMHhYVG5aaVJ6bDVUMmxCYWxwdFdtMVBNWGgxWmxaNGRWaEhOSFZoUjFab1drZFdlVXhYTldoa2FURnpZVmMxY2tsSWRHTmlhVUZuV20wNWRXUkRNWHBoV0hCc1QybEJlRTB6UWpSUE1YaDFTVU5DYldJeU5UQk1XR1JzWVZka2IyUkViMmRPZWtGM1R6RjRkVWxEUW5OaFZ6VnNURmRvYkdGWFpHOWtSRzluVFZSb2QyVkVkR05pYVVGbllrZFdNR1JIVm5sTVdFNTNXVmRPY0dKdFl6WkpRelIzVGxkV2RFOHhlSFZKUTBJd1dsaG9NRXhZVW5sWlZ6VjZXbTA1ZVdKVWIyZGtXRUozV2xoS2FsbFlUbXhQTVhoMVNVTkNhbUl5ZUhaamFtOW5ZMjFrYVZsVFp6TlBVM2RuVG5wcmMwbEVZelZNUTBGMVRsTnJOMWhITkdkSlNGSjVXVmMxZW1GWVVuQmlNalEyU1VNMGVtTjZkR05pYVVGblkwZEdhMXBIYkhWYWVtOW5UV3BvZDJWRFFYZEpSRWw2WTBobk4xaEhOR2RKUjBwMlkyMVNiR05wTVdsaU0xSXdZakl3TmtsRVRuZGxRMEo2WWpKNGNGcERRakJqYlVaMVl6TkNhR050Vm5Wa1JIUmpZbXg0ZFVsRFFXMU1iVVpxWkVkc01scFRRamRZUnpSblNVTkJaMWt5T1hOaU0wazJTVU5OTUZwcVVtMU9SMWszV0VjMFowbERRV2RaYlRsNVdrZFdlVXhYVG5aaVJ6bDVUMmxCYWsweVJtcE5WRmw1VHpGNGRVbERRamxZUnpWalltbEJaMHBxY0c5aU0xcHNZMmxDTjFoSE5HZEpRMEZuV1RJNWMySXpTVFpKUTAxM1RVUkJOMWhITkdkSlNERmpZbXg0ZFVsRFFXMUpRM05uU21sQ04xaEhOR2RKUTBGbllsZEdlVm95YkhWTVYzaHNXbTVSTmtsRVRUSmpTR2MzV0VjMFowbElNV05pYmpCcFdGZ3dQU0FxTDF4dUx5b2dMUzB0TFMwdExTMHRMUzBnMEtqUW9OQ1kwS1RRb3RDcklDMHRMUzB0TFMwdExTMHRLaTljYmk4cUlDMHRMUzB0TFMwdExTMHRJTkNtMEpMUWxkQ2kwSkFnTFMwdExTMHRMUzB0TFMwcUwxeHVMeW9nTFMwdExTMHRMUzB0TFMwZzBLRFFrTkNYMEtEUWxkQ28wSlhRbmRDWTBLOGcwSzNRbXRDZzBKRFFuZENRSUMwdExTMHRMUzB0TFMwdEtpOWNiaThxSUMwdExTMHRMUzB0TFMwdElGQkJSRVJKVGtkVEwwMUJVa2RKVGxNZ0xTMHRMUzB0TFMwdExTMHFMMXh1TG1obFlXUmxjaTB4YTNsaElIdGNiaUFnWkdsemNHeGhlVG9nTFcxekxXWnNaWGhpYjNnN1hHNGdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJQzF0Y3kxbWJHVjRMV0ZzYVdkdU9pQmpaVzUwWlhJN1hHNGdJR0ZzYVdkdUxXbDBaVzF6T2lCalpXNTBaWEk3WEc0Z0lIQmhaR1JwYm1jdGJHVm1kRG9nTWpCd2VEdGNiaUFnY0dGa1pHbHVaeTF5YVdkb2REb2dNakJ3ZUZ4dWZWeHVMbWhsWVdSbGNpMHhhM2xoT2pwaVpXWnZjbVVnZTF4dUlDQmpiMjUwWlc1ME9pQW5VbVZoWTNRZ1VISnZhbVZqZENjN1hHNGdJR1JwYzNCc1lYazZJR0pzYjJOck8xeHVJQ0JtYjI1MExYTnBlbVU2SURFdU5YSmxiVHRjYmlBZ2JHbHVaUzFvWldsbmFIUTZJREV1TWprN1hHNGdJR1p2Ym5RdGQyVnBaMmgwT2lBM01EQTdYRzRnSUdOdmJHOXlPaUFqTURBd08xeHVJQ0J0WVhKbmFXNHRjbWxuYUhRNklHRjFkRzljYm4xY2JpNW9aV0ZrWlhJdGJtRjJMVEo2UmxRZ2UxeHVJQ0JrYVhOd2JHRjVPaUF0YlhNdFpteGxlR0p2ZUR0Y2JpQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JpQWdMVzF6TFdac1pYZ3RZV3hwWjI0NklHTmxiblJsY2p0Y2JpQWdZV3hwWjI0dGFYUmxiWE02SUdObGJuUmxjanRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0kyWm1aanRjYm4xY2JpNW9aV0ZrWlhJdGJtRjJMV3hwYm1zdE0wdFFNU0I3WEc0Z0lHWnZiblF0YzJsNlpUb2dNQzQ0TVRJMWNtVnRPMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dOekF3TzF4dUlDQnNhVzVsTFdobGFXZG9kRG9nTVM0ek9EdGNiaUFnYkdWMGRHVnlMWE53WVdOcGJtYzZJQzR3TldWdE8xeHVJQ0IwWlhoMExYUnlZVzV6Wm05eWJUb2dkWEJ3WlhKallYTmxPMXh1SUNCamIyeHZjam9nY21kaVlTZzNPU3dnTnprc0lEYzVMQ0F1TlNrN1hHNGdJQzEzWldKcmFYUXRkSEpoYm5OcGRHbHZiam9nTGpOek8xeHVJQ0IwY21GdWMybDBhVzl1T2lBdU0zTTdYRzRnSUhCaFpHUnBibWM2SURJNGNIZ2dNQ0F5TTNCNE8xeHVJQ0JpYjNKa1pYSXRZbTkwZEc5dE9pQXpjSGdnYzI5c2FXUWdkSEpoYm5Od1lYSmxiblJjYm4xY2JpNW9aV0ZrWlhJdGJtRjJMV3hwYm1zdE0wdFFNUzVoWTNScGRtVXRNMVJWTnlCN1hHNGdJR052Ykc5eU9pQWpOR1kwWmpSbU8xeHVJQ0JpYjNKa1pYSXRZMjlzYjNJNklDTXpZV014TmpJN1hHNTlYRzR1YUdWaFpHVnlMVzVoZGkxc2FXNXJMVE5MVURFNmFHOTJaWElnZTF4dUlDQmpiMnh2Y2pvZ0l6QXdNRHRjYm4xY2JpNW9aV0ZrWlhJdGJtRjJMV3hwYm1zdE0wdFFNU0FySUM1b1pXRmtaWEl0Ym1GMkxXeHBibXN0TTB0UU1TQjdYRzRnSUcxaGNtZHBiaTFzWldaME9pQXpObkI0TzF4dWZWeHVRRzFsWkdsaElDaHRhVzR0ZDJsa2RHZzZJREV3TWpSd2VDa2dlMXh1SUNBdWFHVmhaR1Z5TFRGcmVXRWdlMXh1SUNBZ0lIQmhaR1JwYm1jdGJHVm1kRG9nTnpad2VEdGNiaUFnSUNCd1lXUmthVzVuTFhKcFoyaDBPaUEzTm5CNFhHNGdJSDFjYmlBZ0xtaGxZV1JsY2kweGEzbGhPanBpWldadmNtVWdlMXh1SUNBZ0lDOHFJTkM5MExBZzBMN1JndEdBMExYUXQ5QzYwTFVnV3pFd01qUXNJREUwTURCZElOR0EwTERRc3RDOTBMN1F2TkMxMFlEUXZkQytJTkdEMExMUXRkQzcwTGpSaDlDNDBMTFFzTkdDMFl3ZzBZRFFzTkMzMEx6UXRkR0FJTkdJMFlEUXVOR0UwWUxRc0NEUmdTQXlOSEI0SU5DMDBMNGdNelp3ZUNBcUwxeHVJQ0FnSUdadmJuUXRjMmw2WlRvZ1kyRnNZeWdvS0RJdU1qVWdMU0F4TGpVcElDb2dLQ2d4TURCMmR5a2dMU0EyTkhKbGJTa2dMeUFvT1RBZ0xTQTJOQ2twSUNzZ01TNDFjbVZ0S1Z4dUlDQjlYRzU5WEc0dktpTWdjMjkxY21ObFRXRndjR2x1WjFWU1REMWtZWFJoT21Gd2NHeHBZMkYwYVc5dUwycHpiMjQ3WW1GelpUWTBMR1Y1U2pKYVdFcDZZVmM1ZFVscWIzcE1RMHA2WWpOV2VWa3lWbnBKYW5CaVNXazBkVXd6VG5sWmVUbHFZek5OZG1SdFJubGhWMFpwWWtkV2VreHVUbXBqTTAxcFRFTkpkVXhwT1hwamJVMTJZVzVOZGxreU9YUmpSemwxV2xjMU1HTjVPVzlhVjBacldsaEpkbUZYTld0YVdHZDFZekpPZW1ONVNtUk1RMHAxV1ZjeGJHTjVTVFpYTVRCelNXMHhhR05JUW5CaWJXUjZTV3B2YVZGVlJrSlJVM2gwVVRCR1FtRlZUVGRSVlVaVVlXdE5jMkV3VGtKUlYyUkVUekJHUWxsWGFFUk1SR2hFVVZWRk1GRjZkRUpSVjJ4RFRsVk5jMDVyVGtKUlZFcEVUekJHUkdOclRYcFJlblJHVVZWT1JreElSa05SVlVacVR6QldRbEZYVVhOWk1FWkNXWHAwUmxGVlRtdE1TRlpEVVZWR2RsRnFkRTVSVlVaM1VXbDRkbEZyUmtKaU1FazNVbFZHUkdORlNYTmlWVXBDVVZSYVEwOHdWa0pSZW1SRFRFY3hRMUZWUlRSUmFuUkVVVmhHUTB3d1NUZFJWVVpyVVhwMFNsRlZUa1pNU0d4RFVWVkdOVkZxZEVwUlZVNDJVV2w0YkZGVlJteFBNR3hDVVRKWmMyRXdTa0pSVjJSRFR6QnNRbEV5YUVOTVIzUkRVVlZHY2xGcWRFcFJWVTV6VVdsNGNGRnJSa0poVlVrM1UxVkdSR0ZyU1hOWFZVWkNWMVIwU2xGVlRtRk1SM1JEVVZWR2RGRnFkRWhSVlRGM1VXcDBRbEZWWkVsUE1GWkNVVEJWYzJOVlNrSlJWMDAzVWxWR1FscERlR3BSVlVacVR6QldRbEV5VVhOa1ZVcENVVmM1UTA4d01VSlJXRUpEVEVjNVExRlZSblpSYW5SR1VWVk9kMUZwZURGUmEwWkNaRlZKTjFFd1JrUmxSVWszVVZWR1JsSkVkRVpSVlU1R1RFaEdRMUZWUm01UmFuUkdVVlZPYjFGcGVIQlJhMFpDWVZWSk4xSlZSa1JoYTBsellUQktRbEZYZEVOUE1GWkNVVEo0UTB4SVRrTlJWVVo2VVdwMFJsRlZUakJSYVhkM1VXdEdRazFGU1RkU1ZVWkVUVlZKYzA1RlNrSlJWRkpEVHpCV1FsRjZWa05NU0dSRFVWVkdibEZxZEVaUlZVWnZVV2w0YmxGclJrSmFNRWszVWxWR1JHRkZTWE5qVlVwQ1VWaEdRMDh3VmtKUk0wcERURWM1UkZGVlJuaFJlblJFVVZkT01GRjZkRUpSVm5CRVR6QnNRbEV3VlhOYVZVWkNXbFIwU2xGVlRtMU1TRTVEVVZWR2VsRnFkRWhSVlU0eVVXcDBRbEZWVmtWUE1HeENVVEJWYzFkVlJrSlhWSFJJVVZWT2FVOHdSa0pTVlZFM1UxVkdSRkpUZUhKUmEwWkNZVEJKTjFJd1JrUmlhMGszVVZWR2NWSkZVVGRSVlVaUFVtcDBTbEZWT1VwTVJ6RkRVVlZGTkZGcWRFcFJWVTAxVVdsNGRGRnJSa0pMTUVrM1VUQkdjRkZ0ZUVSUE1FWkNXa1ZOTjFSVlJsWlRVM2h3VW10R1FtRlZXVGRVVlVaRVlXdFpjMlF3VmtKUlZGSkZUekJrUWxKVE9VVlBNR1JDV210RmFVeERTbTFoVjNoc1NXcHZhVXhwTkhaak0wcHFUREp3ZWt3eVRuWmlXRUoyWW0xV2RXUklUWFpoUjFab1drZFdlVXd5YkhWYVIxWTBURzVPYW1NelRXbE1RMHA2WWpOV2VWa3lWbnBSTWpsMVpFZFdkV1JEU1RaWGVVbDJUSGxCZEV4VE1IUk1VekIwVEZNd2RFeFRSRkZ4VGtObk1FcHFVWEJPUTJrd1MzTm5URk13ZEV4VE1IUk1VekIwVEZNeFkySnBVazVrV0U1c1lqRk9hR0p1VFRaSlEyUk9aRmhPYkdKNVFsUlpWelY2U25sM1oyTXlSblZqZVRGNldsaEtjRnBxZEdOaWFWSkhZakkxTUZaSGFIQmlhbTluVFZSQmQwOHhlSFZLUlZwMlltNVNUV0ZYWkc5a1JHOW5UWHBCZDA4eGVIVktSVnAyWW01U1UxcFhaREZpUjBaNVQybEJNRTFFUVRkWVJ6UnJVbTA1ZFdSRk1XeGFSMnd4WWxSdlowNVVRWGRQTVhoMVNrVmFkbUp1VWtOaU1uaHJUMmxCTTAxRVFUZFlSelJyVW0wNWRXUkZTbk5aVjA1eVQybEJOVTFFUVRkWVJ6VmpZbWs0ZGtsRE1IUk1VekIwVEZNd2RFeFRNSFJKVGtOdE1FcE1VV3hrUTJrd1NrRm5URk13ZEV4VE1IUk1VekIwVEZNeFkySnBVbXBpTW5oMlkya3hNMkZIYkRCYVZHOW5TVEphYlZwdFdtMWFhblJqWW1sU2FtSXllSFpqYVRGcFlrZEdhbUY1TVdwaVIwWjZZekpzYWs5cFFXcE5SRUYzVFVSQmQwOHhlSFZLUjA1MllrYzVlVXhYU25OWlYwNXlURmRhYUZwSFZtdFBhVUZxVFhwcmVscEVUVFZQTVhoMVNrZE9kbUpIT1hsTVYwcHpXVmRPY2t4WGVIQmFNbWd3VDJsQmFrNUhXVEJhYWxKdFR6RjRkVXBIVG5aaVJ6bDVURmRrZVZsWWF6WkpRMDVvV2tkR2ExbFhVVGRZUnpScldUSTVjMkl6U1hSYU0wcHNXbGMwTmtsRFRYbE5iVVUwVGtkRk4xaEhOR3RaTWpsellqTkpkRm96U214YVZ6UjBZa2RzYm1GSVVUWkpRMDE2V1ZkTmVFNXFTVGRZUnpScldUSTVjMkl6U1hSalIyeDFZWHB2WjBreVdtMU9iVmt4V21wMFkySnBVbXBpTW5oMlkya3hibUl5ZUd0UGFVRnFXbTFhYTA5RVpHbFBNWGgxU2tkT2RtSkhPWGxNVjBwelpGZFZOa2xEVFRKYWJVbDNXa2ROTjFoSE5HdFpNamx6WWpOSmRHTklWbmxqUjNoc1QybEJhbHBFUVROTk1ra3pUekY0ZFZoSE5IWk1lVUYwVEZNd2RFeFRNSFJNVXpCMFRGTkVVVzlPUTFFd1NtWlJiMDVEVmpCTGFsRnNaRU5rTUVwcVVYSjVSRkZ5WkVOaE1FdEVVV3RPUTJRd1NrRm5URk13ZEV4VE1IUk1VekIwVEZNeFkySnBVblJpTWtwd1lrZFZOa2xFVFhsTlNFSTBUekY0ZFVwSVVtaFpiWGhzWkVSdlowNTZXVFJqU0djM1dFYzBhMXBIVm5waE0xSjJZMFJ2WjAxVVFYbE9TRUkwVHpGNGRVcEhTbkJhZVRGcldsaE9jbVJIT1hkUGFVRjRUa1JSZDJOSVp6ZFlSelZqWW10Q2FtUllUakJpTWpCMFlsZFdhMkZYUldkTVV6RXdXVmRLYzFwWVVXZExRMUl3V1ZkS2MxcFlVV2RRUkRCblpESnNhMlJIWjJkUVEwRnJXa2RXZW1FelVuWmpRMnMzV0VjMVFWa3pWbnBrUnpsMFRGY3hiRnBIYkdoSlF6QjBZbGRzZFV4WVVtaFpiWGhzWkVOQmIyUXliR3RrUjJkblVHb3daMHBJVW1oWmJYaHNaRU5yTjFoSE5VRlpNMVo2WkVjNWRFeFhNV3hhUjJ4b1NVTXdkR0pYUmpSTVdGSm9XVzE0YkdSRFFXOWtNbXhyWkVkbloxQkRRV3RrUjBacFlrZFdNRXRVZEdOaWJIaDFVVWRPTVdNelVuWmlVekYwV2xkU2NGbFRRWFJNVjFKc1l6SjBNR0l6UVdkTFExSnJXbGhPY21SSE9YZEpSSGM1U1Voa2NGcElVbTlKUkhkblNrZEtjRnA1TVd0YVdFNXlaRWM1ZDB0VWRHTmlhMEpxWkZoT01HSXlNSFJpVjFacllWZEZaMHhUTVhSaFZ6UjBXa2RXZW1FelVuWmpRMEZ2WkRKc2EyUkhaMmRRYWpCblNrZFNiR015ZERCaU0wRndUekY0ZFZGSFRqRmpNMUoyWWxNeGRGcFhVbkJaVTBGMFRGY3hhR1ZETVd0YVdFNXlaRWM1ZDBsRGFETmhWMUl3WVVOQk9FbERVbXRhV0U1eVpFYzVkMHRVZEdOaWJIaDFVVWRPTVdNelVuWmlVekYwV2xkU2NGbFRRWFJNVnpGd1lta3hhV0ZYWTNSYVIxWjZZVE5TZG1ORFFXOWtNbXhyWkVkbloxQkVNR2RLUjBwd1dua3hhMXBZVG5Ka1J6bDNTMVIwWTJKclFtcGtXRTR3WWpJd2RHSlhWbXRoVjBWblRGTXhhV0ZYWTNSYVIxWjZZVE5TZG1ORFFXOWtNbXhyWkVkbloxQnFNR2RLUjBwd1dua3hhMXBZVG5Ka1J6bDNTMVIwWTJKc2VIVk1lVGhuVEZNd2RFeFRNSFJNVXpCMFRGTXdaMVZGUmtWU1JXeFBVakZOZGxSVlJsTlNNR3hQVlhsQmRFeFRNSFJNVXpCMFRGTXdkRXhXZUhWS1J6Rm9ZMjFrY0dKcE1YUmlNa3B3WWtkVk5rbEVTWGRqU0djM1dFYzBhMkpYUm5sYU1teDFURmhTYUZsdGVHeGtSRzluVFhwU2QyVkVkR05pYVZKMFdWaEtibUZYTkhSYVIxWjZZVE5TZG1ORWIyZE9lbHAzWlVSMFkySnBVblJaV0VwdVlWYzBkRmx0Ykc1TVYxSnNZekowTUdJelFUWkpSRVV3Wkc1ak4wbHBkMmxSUjJ4MFkwYzVlV1JEUW1OSmJqVnFZek5OZG1SdFJubGhWMFpwWWtkV2VreHVUbXBqTTA1alNXcDBZMkpzZUhWTWJXaHNXVmRTYkdOcFFqZFlSelJuU1VkU2NHTXpRbk5aV0dzMlNVZGFjMXBZWnpkWVJ6Um5TVWRHYzJGWFpIVk1WMnd3V2xjeGVrOXBRbXBhVnpVd1dsaEpOMWhITkdkSlNFSm9Xa2RTY0dKdFkzUmlSMVp0WkVSdlowcEhNV2hqYldSd1lta3hkR0l5U25CaVIxVTNXRWMwWjBsSVFtaGFSMUp3WW0xamRHTnRiRzVoU0ZFMlNVTlNkRmxZU201aFZ6UjBZbGM1YVdGWGVHeFBNWGgxV0VjMFowbEZRblJhVjFKd1dWTkJiMHhUTVhSaFZ6UjBXa2RXZW1FelVuWmpRMnRuWlRGNGRVbERRV2RKU0VKb1drZFNjR0p0WTNSaVIxWnRaRVJ2WjBwSE1XaGpiV1J3WW1reGExcFlUbkprUnpsM1R6RjRkVWxEUVdkSlNFSm9Xa2RTY0dKdFkzUmpiV3h1WVVoUk5rbERVblJaV0VwdVlWYzBkRnBIVm5waE0xSjJZMFIwWTJKcFFXZG1WbmgxV0VjMFowbERXVFpQYlVwc1dtMDVlVnBUUWpkWVJ6Um5TVU5CWjFreU9YVmtSMVoxWkVSdlowb3hTbXhaVjA0d1NVWkNlV0l5Y0d4Wk0xRnVUekY0ZFVsRFFXZEpSMUp3WXpOQ2MxbFlhelpKUjBwellqSk9jazh4ZUhWSlEwRm5TVWRhZG1KdVVYUmpNbXcyV2xSdlowMXFVbmRsUkhSalltbEJaMGxEUW5OaFZ6VnNURmRvYkdGWFpHOWtSRzluVFhwR2QyVkVkR05pYVVGblNVTkNiV0l5TlRCTVdHUnNZVmRrYjJSRWIyZE9la0YzVHpGNGRVbERRV2RKUjA1MllrYzVlVTlwUVdwTlJFRjNUekY0ZFVsRFFXZEpSekZvWTIxa2NHSnBNWGxoVjJSdlpFUnZaMWxZVmpCaWVuUmpZbXg0ZFVsRFFXZEpSVUowV2xkU2NGbFRRVzlNVXpGMFlWYzBkRnBIVm5waE0xSjJZME5yWjJVeGVIVkpRMEZuU1VOQloweDViMmN3VEROUmMwTkVVWFowUjBNd1dVUlJkR1JETXpCTWNsRjBVMEppVFZSQmVVNURkMmROVkZGM1RVWXdaekJaUkZGelRrTjVNRXd6VVhaMFF6Z3dURmhTWjA1RE9UQk1OR2N3V1ZCUmMzUkRNVEJNZGxGMVRrZElNRXhxVVhOMFEzY3dXVXhTYWtORVVtZE9RM2N3VEdaUmRrNURNVEJaUVdjd1dXcFNaMDVETkRCWlZGSm5kRU4zU1U1SFFrbEVTVEJqU0dkbk1FeFVVWFpwUVhwT2JrSTBTVU52ZGxoSE5HZEpRMEZuU1VOQ2JXSXlOVEJNV0U1d1pXMVZOa2xJVG1wWlYzaHNTME5TYTFwWVRuSmtSemwzVEVOQmExbHRiRzVNVjFKc1l6SjBNR0l6UVhOSlJFa3dZMGhuYzBsRVRUSmpTR2R6U1VSRmQwMUlXak5MVkhSalltbEJaMGxEUWpsWVJ6Um5TVWd4WTJKdU1XTmliSGgxVEcxb2JGbFhVbXhqYVRGMVdWaFpaMlV4ZUhWSlEwSnJZVmhPZDJKSFJqVlBhVUp0WWtkV05FOHhlSFZKUTBKb1lrZHNibUpwTVhCa1IxWjBZM3B2WjFreVZuVmtSMVo1VHpGNGRVbERRbWxaVjA1eVdqTktkbVJYTld0TVYwNTJZa2M1ZVU5cFFXcGFiVnB0VHpGNGRXWldlSFZZUnpSMVlVZFdhRnBIVm5sTVZ6Vm9aR2t4YzJGWE5YSkpTSFJqWW1sQloxcHRPWFZrUXpGNllWaHdiRTlwUVhoTk0wSTBUekY0ZFVsRFFtMWlNalV3VEZoa2JHRlhaRzlrUkc5blRucEJkMDh4ZUhWSlEwSnpZVmMxYkV4WGFHeGhWMlJ2WkVSdlowMVVhSGRsUkhSalltbEJaMkpIVmpCa1IxWjVURmhPZDFsWFRuQmliV00yU1VNMGQwNVhWblJQTVhoMVNVTkNNRnBZYURCTVdGSjVXVmMxZWxwdE9YbGlWRzluWkZoQ2QxcFlTbXBaV0U1c1R6RjRkVWxEUW1waU1uaDJZMnB2WjJOdFpHbFpVMmN6VDFOM1owNTZhM05KUkdNMVRFTkJkVTVUYXpkWVJ6Um5TVWhTZVZsWE5YcGhXRkp3WWpJME5rbEROSHBqZW5SalltbEJaMk5IUm10YVIyeDFXbnB2WjAxcWFIZGxRMEYzU1VSSmVtTklaemRZUnpSblNVZEtkbU50VW14amFURnBZak5TTUdJeU1EWkpSRTUzWlVOQ2VtSXllSEJhUTBJd1kyMUdkV016UW1oamJWWjFaRVIwWTJKc2VIVkpRMEZ0VEcxR2FtUkhiREphVTBJM1dFYzBaMGxEUVdkWk1qbHpZak5KTmtsRFRUQmFhbEp0VGtkWk4xaEhOR2RKUTBGbldXMDVlVnBIVm5sTVYwNTJZa2M1ZVU5cFFXcE5Na1pxVFZSWmVVOHhlSFZKUTBJNVdFYzFZMkpwUVdkS2FuQnZZak5hYkdOcFFqZFlSelJuU1VOQloxa3lPWE5pTTBrMlNVTk5kMDFFUVRkWVJ6Um5TVWd4WTJKc2VIVkpRMEZ0U1VOelowcHBRamRZUnpSblNVTkJaMkpYUm5sYU1teDFURmQ0YkZwdVVUWkpSRTB5WTBobk4xaEhOR2RKU0RGalltNHdhVmhZTUQwZ0tpOWNiaThxSUMwdExTMHRMUzB0TFMwdElOQ28wS0RRbU5DazBLTFFxeUF0TFMwdExTMHRMUzB0TFNvdlhHNHZLaUF0TFMwdExTMHRMUzB0TFNEUXB0Q1MwSlhRb3RDUUlDMHRMUzB0TFMwdExTMHRLaTljYmk4cUlDMHRMUzB0TFMwdExTMHRJTkNnMEpEUWw5Q2cwSlhRcU5DVjBKM1FtTkN2SU5DdDBKclFvTkNRMEozUWtDQXRMUzB0TFMwdExTMHRMU292WEc0dktpQXRMUzB0TFMwdExTMHRMU0JRUVVSRVNVNUhVeTlOUVZKSFNVNVRJQzB0TFMwdExTMHRMUzB0S2k5Y2JpNW9aV0ZrWlhJdE1XdDVZU0I3WEc0Z0lHUnBjM0JzWVhrNklDMXRjeTFtYkdWNFltOTRPMXh1SUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh1SUNBdGJYTXRabXhsZUMxaGJHbG5iam9nWTJWdWRHVnlPMXh1SUNCaGJHbG5iaTFwZEdWdGN6b2dZMlZ1ZEdWeU8xeHVJQ0J3WVdSa2FXNW5MV3hsWm5RNklESXdjSGc3WEc0Z0lIQmhaR1JwYm1jdGNtbG5hSFE2SURJd2NIaGNibjFjYmk1b1pXRmtaWEl0TVd0NVlUbzZZbVZtYjNKbElIdGNiaUFnWTI5dWRHVnVkRG9nSjFKbFlXTjBJRkJ5YjJwbFkzUW5PMXh1SUNCa2FYTndiR0Y1T2lCaWJHOWphenRjYmlBZ1ptOXVkQzF6YVhwbE9pQXhMalZ5WlcwN1hHNGdJR3hwYm1VdGFHVnBaMmgwT2lBeExqSTVPMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dOekF3TzF4dUlDQmpiMnh2Y2pvZ0l6QXdNRHRjYmlBZ2JXRnlaMmx1TFhKcFoyaDBPaUJoZFhSdlhHNTlYRzR1YUdWaFpHVnlMVzVoZGkweWVrWlVJSHRjYmlBZ1pHbHpjR3hoZVRvZ0xXMXpMV1pzWlhoaWIzZzdYRzRnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUMxdGN5MW1iR1Y0TFdGc2FXZHVPaUJqWlc1MFpYSTdYRzRnSUdGc2FXZHVMV2wwWlcxek9pQmpaVzUwWlhJN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ05tWm1ZN1hHNTlYRzR1YUdWaFpHVnlMVzVoZGkxc2FXNXJMVE5MVURFZ2UxeHVJQ0JtYjI1MExYTnBlbVU2SURBdU9ERXlOWEpsYlR0Y2JpQWdabTl1ZEMxM1pXbG5hSFE2SURjd01EdGNiaUFnYkdsdVpTMW9aV2xuYUhRNklERXVNemc3WEc0Z0lHeGxkSFJsY2kxemNHRmphVzVuT2lBdU1EVmxiVHRjYmlBZ2RHVjRkQzEwY21GdWMyWnZjbTA2SUhWd2NHVnlZMkZ6WlR0Y2JpQWdZMjlzYjNJNklISm5ZbUVvTnprc0lEYzVMQ0EzT1N3Z0xqVXBPMXh1SUNBdGQyVmlhMmwwTFhSeVlXNXphWFJwYjI0NklDNHpjenRjYmlBZ2RISmhibk5wZEdsdmJqb2dMak56TzF4dUlDQndZV1JrYVc1bk9pQXlPSEI0SURBZ01qTndlRHRjYmlBZ1ltOXlaR1Z5TFdKdmRIUnZiVG9nTTNCNElITnZiR2xrSUhSeVlXNXpjR0Z5Wlc1MFhHNTlYRzR1YUdWaFpHVnlMVzVoZGkxc2FXNXJMVE5MVURFdVlXTjBhWFpsTFROVVZUY2dlMXh1SUNCamIyeHZjam9nSXpSbU5HWTBaanRjYmlBZ1ltOXlaR1Z5TFdOdmJHOXlPaUFqTTJGak1UWXlPMXh1ZlZ4dUxtaGxZV1JsY2kxdVlYWXRiR2x1YXkwelMxQXhPbWh2ZG1WeUlIdGNiaUFnWTI5c2IzSTZJQ013TURBN1hHNTlYRzR1YUdWaFpHVnlMVzVoZGkxc2FXNXJMVE5MVURFZ0t5QXVhR1ZoWkdWeUxXNWhkaTFzYVc1ckxUTkxVREVnZTF4dUlDQnRZWEpuYVc0dGJHVm1kRG9nTXpad2VEdGNibjFjYmtCdFpXUnBZU0FvYldsdUxYZHBaSFJvT2lBeE1ESTBjSGdwSUh0Y2JpQWdMbWhsWVdSbGNpMHhhM2xoSUh0Y2JpQWdJQ0J3WVdSa2FXNW5MV3hsWm5RNklEYzJjSGc3WEc0Z0lDQWdjR0ZrWkdsdVp5MXlhV2RvZERvZ056WndlRnh1SUNCOVhHNGdJQzVvWldGa1pYSXRNV3Q1WVRvNlltVm1iM0psSUh0Y2JpQWdJQ0F2S2lEUXZkQ3dJTkMrMFlMUmdOQzEwTGZRdXRDMUlGc3hNREkwTENBeE5EQXdYU0RSZ05DdzBMTFF2ZEMrMEx6UXRkR0EwTDNRdmlEUmc5Q3kwTFhRdTlDNDBZZlF1TkN5MExEUmd0R01JTkdBMExEUXQ5QzgwTFhSZ0NEUmlOR0EwTGpSaE5HQzBMQWcwWUVnTWpSd2VDRFF0TkMrSURNMmNIZ2dLaTljYmlBZ0lDQm1iMjUwTFhOcGVtVTZJR05oYkdNb0tDZ3lMakkxSUMwZ01TNDFLU0FxSUNnb01UQXdkbmNwSUMwZ05qUnlaVzBwSUM4Z0tEa3dJQzBnTmpRcEtTQXJJREV1TlhKbGJTbGNiaUFnZlZ4dWZWeHVMeW9qSUhOdmRYSmpaVTFoY0hCcGJtZFZVa3c5WkdGMFlUcGhjSEJzYVdOaGRHbHZiaTlxYzI5dU8ySmhjMlUyTkN4bGVVb3lXbGhLZW1GWE9YVkphbTk2VEVOS2VtSXpWbmxaTWxaNlNXcHdZa2xwTkhWTU0wNTVXWGs1YW1NelRYWmtiVVo1WVZkR2FXSkhWbnBNYms1cVl6Tk5hVXhEU1hWTWFUbDZZMjFOZG1GdVRYWlpNamwwWTBjNWRWcFhOVEJqZVRsdldsZEdhMXBZU1haaFZ6VnJXbGhuZFdNeVRucGplVXBrVEVOS2RWbFhNV3hqZVVrMlZ6RXdjMGx0TVdoalNFSndZbTFrZWtscWIybFJWVVpDVVZONGRGRXdSa0poVlUwM1VWVkdWR0ZyVFhOaE1FNUNVVmRrUkU4d1JrSlpWMmhFVEVSb1JGRlZSVEJSZW5SQ1VWZHNRMDVWVFhOT2EwNUNVVlJLUkU4d1JrUmphMDE2VVhwMFJsRlZUa1pNU0VaRFVWVkdhazh3VmtKUlYxRnpXVEJHUWxsNmRFWlJWVTVyVEVoV1ExRlZSblpSYW5ST1VWVkdkMUZwZUhaUmEwWkNZakJKTjFKVlJrUmpSVWx6WWxWS1FsRlVXa05QTUZaQ1VYcGtRMHhITVVOUlZVVTBVV3AwUkZGWVJrTk1NRWszVVZWR2ExRjZkRXBSVlU1R1RFaHNRMUZWUmpWUmFuUktVVlZPTmxGcGVHeFJWVVpzVHpCc1FsRXlXWE5oTUVwQ1VWZGtRMDh3YkVKUk1taERURWQwUTFGVlJuSlJhblJLVVZWT2MxRnBlSEJSYTBaQ1lWVkpOMU5WUmtSaGEwbHpWMVZHUWxkVWRFcFJWVTVoVEVkMFExRlZSblJSYW5SSVVWVXhkMUZxZEVKUlZXUkpUekJXUWxFd1ZYTmpWVXBDVVZkTk4xSlZSa0phUTNocVVWVkdhazh3VmtKUk1sRnpaRlZLUWxGWE9VTlBNREZDVVZoQ1EweEhPVU5SVlVaMlVXcDBSbEZWVG5kUmFYZ3hVV3RHUW1SVlNUZFJNRVpFWlVWSk4xRlZSa1pTUkhSR1VWVk9Sa3hJUmtOUlZVWnVVV3AwUmxGVlRtOVJhWGh3VVd0R1FtRlZTVGRTVlVaRVlXdEpjMkV3U2tKUlYzUkRUekJXUWxFeWVFTk1TRTVEVVZWR2VsRnFkRVpSVlU0d1VXbDNkMUZyUmtKTlJVazNVbFZHUkUxVlNYTk9SVXBDVVZSU1EwOHdWa0pSZWxaRFRFaGtRMUZWUm01UmFuUkdVVlZHYjFGcGVHNVJhMFpDV2pCSk4xSlZSa1JoUlVselkxVktRbEZZUmtOUE1GWkNVVE5LUTB4SE9VUlJWVVo0VVhwMFJGRlhUakJSZW5SQ1VWWndSRTh3YkVKUk1GVnpXbFZHUWxwVWRFcFJWVTV0VEVoT1ExRlZSbnBSYW5SSVVWVk9NbEZxZEVKUlZWWkZUekJzUWxFd1ZYTlhWVVpDVjFSMFNGRlZUbWxQTUVaQ1VsVlJOMU5WUmtSU1UzaHlVV3RHUW1Fd1NUZFNNRVpFWW10Sk4xRlZSbkZTUlZFM1VWVkdUMUpxZEVwUlZUbEtURWN4UTFGVlJUUlJhblJLVVZWTk5WRnBlSFJSYTBaQ1N6QkpOMUV3Um5CUmJYaEVUekJHUWxwRlRUZFVWVVpXVTFONGNGSnJSa0poVlZrM1ZGVkdSR0ZyV1hOa01GWkNVVlJTUlU4d1pFSlNVemxGVHpCa1FscHJSV2xNUTBwdFlWZDRiRWxxYjJsTWFUUjJZek5LYWt3eWNIcE1NazUyWWxoQ2RtSnRWblZrU0UxMllVZFdhRnBIVm5sTU1teDFXa2RXTkV4dVRtcGpNMDFwVEVOS2VtSXpWbmxaTWxaNlVUSTVkV1JIVm5Wa1EwazJWM2xKZGt4NVFYUk1VekIwVEZNd2RFeFRNSFJNVTBSUmNVNURaekJLYWxGd1RrTnBNRXR6WjB4VE1IUk1VekIwVEZNd2RFeFRNV05pYVZKT1pGaE9iR0l4VG1oaWJrMDJTVU5rVG1SWVRteGllVUpVV1ZjMWVrcDVkMmRqTWtaMVkza3hlbHBZU25CYWFuUmpZbWxTUjJJeU5UQldSMmh3WW1wdlowMVVRWGRQTVhoMVNrVmFkbUp1VWsxaFYyUnZaRVJ2WjAxNlFYZFBNWGgxU2tWYWRtSnVVbE5hVjJReFlrZEdlVTlwUVRCTlJFRTNXRWMwYTFKdE9YVmtSVEZzV2tkc01XSlViMmRPVkVGM1R6RjRkVXBGV25aaWJsSkRZako0YTA5cFFUTk5SRUUzV0VjMGExSnRPWFZrUlVweldWZE9jazlwUVRWTlJFRTNXRWMxWTJKcE9IWkpRekIwVEZNd2RFeFRNSFJNVXpCMFNVNURiVEJLVEZGc1pFTnBNRXBCWjB4VE1IUk1VekIwVEZNd2RFeFRNV05pYVZKcVlqSjRkbU5wTVROaFIyd3dXbFJ2WjBreVdtMWFiVnB0V21wMFkySnBVbXBpTW5oMlkya3hhV0pIUm1waGVURnFZa2RHZW1NeWJHcFBhVUZxVFVSQmQwMUVRWGRQTVhoMVNrZE9kbUpIT1hsTVYwcHpXVmRPY2t4WFdtaGFSMVpyVDJsQmFrMTZhM3BhUkUwMVR6RjRkVXBIVG5aaVJ6bDVURmRLYzFsWFRuSk1WM2h3V2pKb01FOXBRV3BPUjFrd1dtcFNiVTh4ZUhWS1IwNTJZa2M1ZVV4WFpIbFpXR3MyU1VOT2FGcEhSbXRaVjFFM1dFYzBhMWt5T1hOaU0wbDBXak5LYkZwWE5EWkpRMDE1VFcxRk5FNUhSVGRZUnpScldUSTVjMkl6U1hSYU0wcHNXbGMwZEdKSGJHNWhTRkUyU1VOTmVsbFhUWGhPYWtrM1dFYzBhMWt5T1hOaU0wbDBZMGRzZFdGNmIyZEpNbHB0VG0xWk1WcHFkR05pYVZKcVlqSjRkbU5wTVc1aU1uaHJUMmxCYWxwdFdtdFBSR1JwVHpGNGRVcEhUblppUnpsNVRGZEtjMlJYVlRaSlEwMHlXbTFKZDFwSFRUZFlSelJyV1RJNWMySXpTWFJqU0ZaNVkwZDRiRTlwUVdwYVJFRXpUVEpKTTA4eGVIVllSelIyVEhsQmRFeFRNSFJNVXpCMFRGTXdkRXhUUkZGdlRrTlJNRXBtVVc5T1ExWXdTMnBSYkdSRFpEQkthbEZ5ZVVSUmNtUkRZVEJMUkZGclRrTmtNRXBCWjB4VE1IUk1VekIwVEZNd2RFeFRNV05pYVZKMFlqSktjR0pIVlRaSlJFMTVUVWhDTkU4eGVIVktTRkpvV1cxNGJHUkViMmRPZWxrMFkwaG5OMWhITkd0YVIxWjZZVE5TZG1ORWIyZE5WRUY1VGtoQ05FOHhlSFZLUjBwd1dua3hhMXBZVG5Ka1J6bDNUMmxCZUU1RVVYZGpTR2MzV0VjMVkySnJRbXBrV0U0d1lqSXdkR0pYVm10aFYwVm5URk14TUZsWFNuTmFXRkZuUzBOU01GbFhTbk5hV0ZGblVFUXdaMlF5Ykd0a1IyZG5VRU5CYTFwSFZucGhNMUoyWTBOck4xaEhOVUZaTTFaNlpFYzVkRXhYTVd4YVIyeG9TVU13ZEdKWGJIVk1XRkpvV1cxNGJHUkRRVzlrTW14clpFZG5aMUJxTUdkS1NGSm9XVzE0YkdSRGF6ZFlSelZCV1ROV2VtUkhPWFJNVnpGc1drZHNhRWxETUhSaVYwWTBURmhTYUZsdGVHeGtRMEZ2WkRKc2EyUkhaMmRRUTBGclpFZEdhV0pIVmpCTFZIUmpZbXg0ZFZGSFRqRmpNMUoyWWxNeGRGcFhVbkJaVTBGMFRGZFNiR015ZERCaU0wRm5TME5TYTFwWVRuSmtSemwzU1VSM09VbElaSEJhU0ZKdlNVUjNaMHBIU25CYWVURnJXbGhPY21SSE9YZExWSFJqWW10Q2FtUllUakJpTWpCMFlsZFdhMkZYUldkTVV6RjBZVmMwZEZwSFZucGhNMUoyWTBOQmIyUXliR3RrUjJkblVHb3daMHBIVW14ak1uUXdZak5CY0U4eGVIVlJSMDR4WXpOU2RtSlRNWFJhVjFKd1dWTkJkRXhYTVdobFF6RnJXbGhPY21SSE9YZEpRMmd6WVZkU01HRkRRVGhKUTFKcldsaE9jbVJIT1hkTFZIUmpZbXg0ZFZGSFRqRmpNMUoyWWxNeGRGcFhVbkJaVTBGMFRGY3hjR0pwTVdsaFYyTjBXa2RXZW1FelVuWmpRMEZ2WkRKc2EyUkhaMmRRUkRCblNrZEtjRnA1TVd0YVdFNXlaRWM1ZDB0VWRHTmlhMEpxWkZoT01HSXlNSFJpVjFacllWZEZaMHhUTVdsaFYyTjBXa2RXZW1FelVuWmpRMEZ2WkRKc2EyUkhaMmRRYWpCblNrZEtjRnA1TVd0YVdFNXlaRWM1ZDB0VWRHTmliSGgxVEhrNFoweFRNSFJNVXpCMFRGTXdkRXhUTUdkVlJVWkZVa1ZzVDFJeFRYWlVWVVpUVWpCc1QxVjVRWFJNVXpCMFRGTXdkRXhUTUhSTVZuaDFTa2N4YUdOdFpIQmlhVEYwWWpKS2NHSkhWVFpKUkVsM1kwaG5OMWhITkd0aVYwWjVXakpzZFV4WVVtaFpiWGhzWkVSdlowMTZVbmRsUkhSalltbFNkRmxZU201aFZ6UjBXa2RXZW1FelVuWmpSRzluVG5wYWQyVkVkR05pYVZKMFdWaEtibUZYTkhSWmJXeHVURmRTYkdNeWREQmlNMEUyU1VSRk1HUnVZemRKYVhkcFVVZHNkR05IT1hsa1EwSmpTVzQxYW1NelRYWmtiVVo1WVZkR2FXSkhWbnBNYms1cVl6Tk9ZMGxxZEdOaWJIaDFURzFvYkZsWFVteGphVUkzV0VjMFowbEhVbkJqTTBKeldWaHJOa2xIV25OYVdHYzNXRWMwWjBsSFJuTmhWMlIxVEZkc01GcFhNWHBQYVVKcVdsYzFNRnBZU1RkWVJ6Um5TVWhDYUZwSFVuQmliV04wWWtkV2JXUkViMmRLUnpGb1kyMWtjR0pwTVhSaU1rcHdZa2RWTjFoSE5HZEpTRUpvV2tkU2NHSnRZM1JqYld4dVlVaFJOa2xEVW5SWldFcHVZVmMwZEdKWE9XbGhWM2hzVHpGNGRWaEhOR2RKUlVKMFdsZFNjRmxUUVc5TVV6RjBZVmMwZEZwSFZucGhNMUoyWTBOcloyVXhlSFZKUTBGblNVaENhRnBIVW5CaWJXTjBZa2RXYldSRWIyZEtSekZvWTIxa2NHSnBNV3RhV0U1eVpFYzVkMDh4ZUhWSlEwRm5TVWhDYUZwSFVuQmliV04wWTIxc2JtRklVVFpKUTFKMFdWaEtibUZYTkhSYVIxWjZZVE5TZG1ORWRHTmlhVUZuWmxaNGRWaEhOR2RKUTFrMlQyMUtiRnB0T1hsYVUwSTNXRWMwWjBsRFFXZFpNamwxWkVkV2RXUkViMmRLTVVwc1dWZE9NRWxHUW5saU1uQnNXVE5SYms4eGVIVkpRMEZuU1VkU2NHTXpRbk5aV0dzMlNVZEtjMkl5VG5KUE1YaDFTVU5CWjBsSFduWmlibEYwWXpKc05scFViMmROYWxKM1pVUjBZMkpwUVdkSlEwSnpZVmMxYkV4WGFHeGhWMlJ2WkVSdlowMTZSbmRsUkhSalltbEJaMGxEUW0xaU1qVXdURmhrYkdGWFpHOWtSRzluVG5wQmQwOHhlSFZKUTBGblNVZE9kbUpIT1hsUGFVRnFUVVJCZDA4eGVIVkpRMEZuU1VjeGFHTnRaSEJpYVRGNVlWZGtiMlJFYjJkWldGWXdZbnAwWTJKc2VIVkpRMEZuU1VWQ2RGcFhVbkJaVTBGdlRGTXhkR0ZYTkhSYVIxWjZZVE5TZG1ORGEyZGxNWGgxU1VOQlowbERRV2RNZVc5bk1Fd3pVWE5EUkZGMmRFZERNRmxFVVhSa1F6TXdUSEpSZEZOQ1lrMVVRWGxPUTNkblRWUlJkMDFHTUdjd1dVUlJjMDVEZVRCTU0xRjJkRU00TUV4WVVtZE9Remt3VERSbk1GbFFVWE4wUXpFd1RIWlJkVTVIU0RCTWFsRnpkRU4zTUZsTVVtcERSRkpuVGtOM01FeG1VWFpPUXpFd1dVRm5NRmxxVW1kT1F6UXdXVlJTWjNSRGQwbE9SMEpKUkVrd1kwaG5aekJNVkZGMmFVRjZUbTVDTkVsRGIzWllSelJuU1VOQlowbERRbTFpTWpVd1RGaE9jR1Z0VlRaSlNFNXFXVmQ0YkV0RFVtdGFXRTV5WkVjNWQweERRV3RaYld4dVRGZFNiR015ZERCaU0wRnpTVVJKTUdOSVozTkpSRTB5WTBobmMwbEVSWGROU0ZvelMxUjBZMkpwUVdkSlEwSTVXRWMwWjBsSU1XTmliakZqWW14NGRVeHRhR3haVjFKc1kya3hkVmxZV1dkbE1YaDFTVU5DYTJGWVRuZGlSMFkxVDJsQ2JXSkhWalJQTVhoMVNVTkNhR0pIYkc1aWFURndaRWRXZEdONmIyZFpNbFoxWkVkV2VVOHhlSFZKUTBKcFdWZE9jbG96U25aa1Z6VnJURmRPZG1KSE9YbFBhVUZxV20xYWJVOHhlSFZtVm5oMVdFYzBkV0ZIVm1oYVIxWjVURmMxYUdScE1YTmhWelZ5U1VoMFkySnBRV2RhYlRsMVpFTXhlbUZZY0d4UGFVRjRUVE5DTkU4eGVIVkpRMEp0WWpJMU1FeFlaR3hoVjJSdlpFUnZaMDU2UVhkUE1YaDFTVU5DYzJGWE5XeE1WMmhzWVZka2IyUkViMmROVkdoM1pVUjBZMkpwUVdkaVIxWXdaRWRXZVV4WVRuZFpWMDV3WW0xak5rbEROSGRPVjFaMFR6RjRkVWxEUWpCYVdHZ3dURmhTZVZsWE5YcGFiVGw1WWxSdloyUllRbmRhV0VwcVdWaE9iRTh4ZUhWSlEwSnFZako0ZG1OcWIyZGpiV1JwV1ZObk0wOVRkMmRPZW10elNVUmpOVXhEUVhWT1UyczNXRWMwWjBsSVVubFpWelY2WVZoU2NHSXlORFpKUXpSNlkzcDBZMkpwUVdkalIwWnJXa2RzZFZwNmIyZE5hbWgzWlVOQmQwbEVTWHBqU0djM1dFYzBaMGxIU25aamJWSnNZMmt4YVdJelVqQmlNakEyU1VST2QyVkRRbnBpTW5od1drTkNNR050Um5Wak0wSm9ZMjFXZFdSRWRHTmliSGgxU1VOQmJVeHRSbXBrUjJ3eVdsTkNOMWhITkdkSlEwRm5XVEk1YzJJelNUWkpRMDB3V21wU2JVNUhXVGRZUnpSblNVTkJaMWx0T1hsYVIxWjVURmRPZG1KSE9YbFBhVUZxVFRKR2FrMVVXWGxQTVhoMVNVTkNPVmhITldOaWFVRm5TbXB3YjJJeldteGphVUkzV0VjMFowbERRV2RaTWpsellqTkpOa2xEVFhkTlJFRTNXRWMwWjBsSU1XTmliSGgxU1VOQmJVbERjMmRLYVVJM1dFYzBaMGxEUVdkaVYwWjVXakpzZFV4WGVHeGFibEUyU1VSTk1tTklaemRZUnpSblNVZ3hZMkp1TUdsWVdEQTlJQ292WEc0dktpQXRMUzB0TFMwdExTMHRMU0RRcU5DZzBKalFwTkNpMEtzZ0xTMHRMUzB0TFMwdExTMHFMMXh1THlvZ0xTMHRMUzB0TFMwdExTMGcwS2JRa3RDVjBLTFFrQ0F0TFMwdExTMHRMUzB0TFNvdlhHNHZLaUF0TFMwdExTMHRMUzB0TFNEUW9OQ1EwSmZRb05DVjBLalFsZENkMEpqUXJ5RFFyZENhMEtEUWtOQ2QwSkFnTFMwdExTMHRMUzB0TFMwcUwxeHVMeW9nTFMwdExTMHRMUzB0TFMwZ1VFRkVSRWxPUjFNdlRVRlNSMGxPVXlBdExTMHRMUzB0TFMwdExTb3ZYRzR1YUdWaFpHVnlMVEZyZVdFZ2UxeHVJQ0JrYVhOd2JHRjVPaUF0YlhNdFpteGxlR0p2ZUR0Y2JpQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JpQWdMVzF6TFdac1pYZ3RZV3hwWjI0NklHTmxiblJsY2p0Y2JpQWdZV3hwWjI0dGFYUmxiWE02SUdObGJuUmxjanRjYmlBZ2NHRmtaR2x1Wnkxc1pXWjBPaUF5TUhCNE8xeHVJQ0J3WVdSa2FXNW5MWEpwWjJoME9pQXlNSEI0WEc1OVhHNHVhR1ZoWkdWeUxURnJlV0U2T21KbFptOXlaU0I3WEc0Z0lHTnZiblJsYm5RNklDZFNaV0ZqZENCUWNtOXFaV04wSnp0Y2JpQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNGdJR1p2Ym5RdGMybDZaVG9nTVM0MWNtVnRPMXh1SUNCc2FXNWxMV2hsYVdkb2REb2dNUzR5T1R0Y2JpQWdabTl1ZEMxM1pXbG5hSFE2SURjd01EdGNiaUFnWTI5c2IzSTZJQ013TURBN1hHNGdJRzFoY21kcGJpMXlhV2RvZERvZ1lYVjBiMXh1ZlZ4dUxtaGxZV1JsY2kxdVlYWXRNbnBHVkNCN1hHNGdJR1JwYzNCc1lYazZJQzF0Y3kxbWJHVjRZbTk0TzF4dUlDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQXRiWE10Wm14bGVDMWhiR2xuYmpvZ1kyVnVkR1Z5TzF4dUlDQmhiR2xuYmkxcGRHVnRjem9nWTJWdWRHVnlPMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBalptWm1PMXh1ZlZ4dUxtaGxZV1JsY2kxdVlYWXRiR2x1YXkwelMxQXhJSHRjYmlBZ1ptOXVkQzF6YVhwbE9pQXdMamd4TWpWeVpXMDdYRzRnSUdadmJuUXRkMlZwWjJoME9pQTNNREE3WEc0Z0lHeHBibVV0YUdWcFoyaDBPaUF4TGpNNE8xeHVJQ0JzWlhSMFpYSXRjM0JoWTJsdVp6b2dMakExWlcwN1hHNGdJSFJsZUhRdGRISmhibk5tYjNKdE9pQjFjSEJsY21OaGMyVTdYRzRnSUdOdmJHOXlPaUJ5WjJKaEtEYzVMQ0EzT1N3Z056a3NJQzQxS1R0Y2JpQWdMWGRsWW10cGRDMTBjbUZ1YzJsMGFXOXVPaUF1TTNNN1hHNGdJSFJ5WVc1emFYUnBiMjQ2SUM0emN6dGNiaUFnY0dGa1pHbHVaem9nTWpod2VDQXdJREl6Y0hnN1hHNGdJR0p2Y21SbGNpMWliM1IwYjIwNklETndlQ0J6YjJ4cFpDQjBjbUZ1YzNCaGNtVnVkRnh1ZlZ4dUxtaGxZV1JsY2kxdVlYWXRiR2x1YXkwelMxQXhMbUZqZEdsMlpTMHpWRlUzSUh0Y2JpQWdZMjlzYjNJNklDTTBaalJtTkdZN1hHNGdJR0p2Y21SbGNpMWpiMnh2Y2pvZ0l6TmhZekUyTWp0Y2JuMWNiaTVvWldGa1pYSXRibUYyTFd4cGJtc3RNMHRRTVRwb2IzWmxjaUI3WEc0Z0lHTnZiRzl5T2lBak1EQXdPMXh1ZlZ4dUxtaGxZV1JsY2kxdVlYWXRiR2x1YXkwelMxQXhJQ3NnTG1obFlXUmxjaTF1WVhZdGJHbHVheTB6UzFBeElIdGNiaUFnYldGeVoybHVMV3hsWm5RNklETTJjSGc3WEc1OVhHNUFiV1ZrYVdFZ0tHMXBiaTEzYVdSMGFEb2dNVEF5TkhCNEtTQjdYRzRnSUM1b1pXRmtaWEl0TVd0NVlTQjdYRzRnSUNBZ2NHRmtaR2x1Wnkxc1pXWjBPaUEzTm5CNE8xeHVJQ0FnSUhCaFpHUnBibWN0Y21sbmFIUTZJRGMyY0hoY2JpQWdmVnh1SUNBdWFHVmhaR1Z5TFRGcmVXRTZPbUpsWm05eVpTQjdYRzRnSUNBZ0x5b2cwTDNRc0NEUXZ0R0MwWURRdGRDMzBMclF0U0JiTVRBeU5Dd2dNVFF3TUYwZzBZRFFzTkN5MEwzUXZ0QzgwTFhSZ05DOTBMNGcwWVBRc3RDMTBMdlF1TkdIMExqUXN0Q3cwWUxSakNEUmdOQ3cwTGZRdk5DMTBZQWcwWWpSZ05DNDBZVFJndEN3SU5HQklESTBjSGdnMExUUXZpQXpObkI0SUNvdlhHNGdJQ0FnWm05dWRDMXphWHBsT2lCallXeGpLQ2dvTWk0eU5TQXRJREV1TlNrZ0tpQW9LREV3TUhaM0tTQXRJRFkwY21WdEtTQXZJQ2c1TUNBdElEWTBLU2tnS3lBeExqVnlaVzBwWEc0Z0lIMWNibjFjYmk4cUl5QnpiM1Z5WTJWTllYQndhVzVuVlZKTVBXUmhkR0U2WVhCd2JHbGpZWFJwYjI0dmFuTnZianRpWVhObE5qUXNaWGxLTWxwWVNucGhWemwxU1dwdmVreERTbnBpTTFaNVdUSldla2xxY0dKSmFUUjFURE5PZVZsNU9XcGpNMDEyWkcxR2VXRlhSbWxpUjFaNlRHNU9hbU16VFdsTVEwbDFUR2s1ZW1OdFRYWmhiazEyV1RJNWRHTkhPWFZhVnpVd1kzazViMXBYUm10YVdFbDJZVmMxYTFwWVozVmpNazU2WTNsS1pFeERTblZaVnpGc1kzbEpObGN4TUhOSmJURm9ZMGhDY0dKdFpIcEphbTlwVVZWR1FsRlRlSFJSTUVaQ1lWVk5OMUZWUmxSaGEwMXpZVEJPUWxGWFpFUlBNRVpDV1Zkb1JFeEVhRVJSVlVVd1VYcDBRbEZYYkVOT1ZVMXpUbXRPUWxGVVNrUlBNRVpFWTJ0TmVsRjZkRVpSVlU1R1RFaEdRMUZWUm1wUE1GWkNVVmRSYzFrd1JrSlplblJHVVZWT2EweElWa05SVlVaMlVXcDBUbEZWUm5kUmFYaDJVV3RHUW1Jd1NUZFNWVVpFWTBWSmMySlZTa0pSVkZwRFR6QldRbEY2WkVOTVJ6RkRVVlZGTkZGcWRFUlJXRVpEVERCSk4xRlZSbXRSZW5SS1VWVk9Sa3hJYkVOUlZVWTFVV3AwU2xGVlRqWlJhWGhzVVZWR2JFOHdiRUpSTWxsellUQktRbEZYWkVOUE1HeENVVEpvUTB4SGRFTlJWVVp5VVdwMFNsRlZUbk5SYVhod1VXdEdRbUZWU1RkVFZVWkVZV3RKYzFkVlJrSlhWSFJLVVZWT1lVeEhkRU5SVlVaMFVXcDBTRkZWTVhkUmFuUkNVVlZrU1U4d1ZrSlJNRlZ6WTFWS1FsRlhUVGRTVlVaQ1drTjRhbEZWUm1wUE1GWkNVVEpSYzJSVlNrSlJWemxEVHpBeFFsRllRa05NUnpsRFVWVkdkbEZxZEVaUlZVNTNVV2w0TVZGclJrSmtWVWszVVRCR1JHVkZTVGRSVlVaR1VrUjBSbEZWVGtaTVNFWkRVVlZHYmxGcWRFWlJWVTV2VVdsNGNGRnJSa0poVlVrM1VsVkdSR0ZyU1hOaE1FcENVVmQwUTA4d1ZrSlJNbmhEVEVoT1ExRlZSbnBSYW5SR1VWVk9NRkZwZDNkUmEwWkNUVVZKTjFKVlJrUk5WVWx6VGtWS1FsRlVVa05QTUZaQ1VYcFdRMHhJWkVOUlZVWnVVV3AwUmxGVlJtOVJhWGh1VVd0R1Fsb3dTVGRTVlVaRVlVVkpjMk5WU2tKUldFWkRUekJXUWxFelNrTk1SemxFVVZWR2VGRjZkRVJSVjA0d1VYcDBRbEZXY0VSUE1HeENVVEJWYzFwVlJrSmFWSFJLVVZWT2JVeElUa05SVlVaNlVXcDBTRkZWVGpKUmFuUkNVVlZXUlU4d2JFSlJNRlZ6VjFWR1FsZFVkRWhSVlU1cFR6QkdRbEpWVVRkVFZVWkVVbE40Y2xGclJrSmhNRWszVWpCR1JHSnJTVGRSVlVaeFVrVlJOMUZWUms5U2FuUktVVlU1U2t4SE1VTlJWVVUwVVdwMFNsRlZUVFZSYVhoMFVXdEdRa3N3U1RkUk1FWndVVzE0UkU4d1JrSmFSVTAzVkZWR1ZsTlRlSEJTYTBaQ1lWVlpOMVJWUmtSaGExbHpaREJXUWxGVVVrVlBNR1JDVWxNNVJVOHdaRUphYTBWcFRFTktiV0ZYZUd4SmFtOXBUR2swZG1NelNtcE1NbkI2VERKT2RtSllRblppYlZaMVpFaE5kbUZIVm1oYVIxWjVUREpzZFZwSFZqUk1iazVxWXpOTmFVeERTbnBpTTFaNVdUSldlbEV5T1hWa1IxWjFaRU5KTmxkNVNYWk1lVUYwVEZNd2RFeFRNSFJNVXpCMFRGTkVVWEZPUTJjd1NtcFJjRTVEYVRCTGMyZE1VekIwVEZNd2RFeFRNSFJNVXpGalltbFNUbVJZVG14aU1VNW9ZbTVOTmtsRFpFNWtXRTVzWW5sQ1ZGbFhOWHBLZVhkbll6SkdkV041TVhwYVdFcHdXbXAwWTJKcFVrZGlNalV3Vmtkb2NHSnFiMmROVkVGM1R6RjRkVXBGV25aaWJsSk5ZVmRrYjJSRWIyZE5la0YzVHpGNGRVcEZXblppYmxKVFdsZGtNV0pIUm5sUGFVRXdUVVJCTjFoSE5HdFNiVGwxWkVVeGJGcEhiREZpVkc5blRsUkJkMDh4ZUhWS1JWcDJZbTVTUTJJeWVHdFBhVUV6VFVSQk4xaEhOR3RTYlRsMVpFVktjMWxYVG5KUGFVRTFUVVJCTjFoSE5XTmlhVGgyU1VNd2RFeFRNSFJNVXpCMFRGTXdkRWxPUTIwd1NreFJiR1JEYVRCS1FXZE1VekIwVEZNd2RFeFRNSFJNVXpGalltbFNhbUl5ZUhaamFURXpZVWRzTUZwVWIyZEpNbHB0V20xYWJWcHFkR05pYVZKcVlqSjRkbU5wTVdsaVIwWnFZWGt4YW1KSFJucGpNbXhxVDJsQmFrMUVRWGROUkVGM1R6RjRkVXBIVG5aaVJ6bDVURmRLYzFsWFRuSk1WMXBvV2tkV2EwOXBRV3BOZW10NldrUk5OVTh4ZUhWS1IwNTJZa2M1ZVV4WFNuTlpWMDV5VEZkNGNGb3lhREJQYVVGcVRrZFpNRnBxVW0xUE1YaDFTa2RPZG1KSE9YbE1WMlI1V1Zock5rbERUbWhhUjBacldWZFJOMWhITkd0Wk1qbHpZak5KZEZvelNteGFWelEyU1VOTmVVMXRSVFJPUjBVM1dFYzBhMWt5T1hOaU0wbDBXak5LYkZwWE5IUmlSMnh1WVVoUk5rbERUWHBaVjAxNFRtcEpOMWhITkd0Wk1qbHpZak5KZEdOSGJIVmhlbTluU1RKYWJVNXRXVEZhYW5SalltbFNhbUl5ZUhaamFURnVZako0YTA5cFFXcGFiVnByVDBSa2FVOHhlSFZLUjA1MllrYzVlVXhYU25Oa1YxVTJTVU5OTWxwdFNYZGFSMDAzV0VjMGExa3lPWE5pTTBsMFkwaFdlV05IZUd4UGFVRnFXa1JCTTAweVNUTlBNWGgxV0VjMGRreDVRWFJNVXpCMFRGTXdkRXhUTUhSTVUwUlJiMDVEVVRCS1psRnZUa05XTUV0cVVXeGtRMlF3U21wUmNubEVVWEprUTJFd1MwUlJhMDVEWkRCS1FXZE1VekIwVEZNd2RFeFRNSFJNVXpGalltbFNkR0l5U25CaVIxVTJTVVJOZVUxSVFqUlBNWGgxU2toU2FGbHRlR3hrUkc5blRucFpOR05JWnpkWVJ6UnJXa2RXZW1FelVuWmpSRzluVFZSQmVVNUlRalJQTVhoMVNrZEtjRnA1TVd0YVdFNXlaRWM1ZDA5cFFYaE9SRkYzWTBobk4xaEhOV05pYTBKcVpGaE9NR0l5TUhSaVYxWnJZVmRGWjB4VE1UQlpWMHB6V2xoUlowdERVakJaVjBweldsaFJaMUJFTUdka01teHJaRWRuWjFCRFFXdGFSMVo2WVROU2RtTkRhemRZUnpWQldUTldlbVJIT1hSTVZ6RnNXa2RzYUVsRE1IUmlWMngxVEZoU2FGbHRlR3hrUTBGdlpESnNhMlJIWjJkUWFqQm5Ta2hTYUZsdGVHeGtRMnMzV0VjMVFWa3pWbnBrUnpsMFRGY3hiRnBIYkdoSlF6QjBZbGRHTkV4WVVtaFpiWGhzWkVOQmIyUXliR3RrUjJkblVFTkJhMlJIUm1saVIxWXdTMVIwWTJKc2VIVlJSMDR4WXpOU2RtSlRNWFJhVjFKd1dWTkJkRXhYVW14ak1uUXdZak5CWjB0RFVtdGFXRTV5WkVjNWQwbEVkemxKU0dSd1draFNiMGxFZDJkS1IwcHdXbmt4YTFwWVRuSmtSemwzUzFSMFkySnJRbXBrV0U0d1lqSXdkR0pYVm10aFYwVm5URk14ZEdGWE5IUmFSMVo2WVROU2RtTkRRVzlrTW14clpFZG5aMUJxTUdkS1IxSnNZekowTUdJelFYQlBNWGgxVVVkT01XTXpVblppVXpGMFdsZFNjRmxUUVhSTVZ6Rm9aVU14YTFwWVRuSmtSemwzU1VOb00yRlhVakJoUTBFNFNVTlNhMXBZVG5Ka1J6bDNTMVIwWTJKc2VIVlJSMDR4WXpOU2RtSlRNWFJhVjFKd1dWTkJkRXhYTVhCaWFURnBZVmRqZEZwSFZucGhNMUoyWTBOQmIyUXliR3RrUjJkblVFUXdaMHBIU25CYWVURnJXbGhPY21SSE9YZExWSFJqWW10Q2FtUllUakJpTWpCMFlsZFdhMkZYUldkTVV6RnBZVmRqZEZwSFZucGhNMUoyWTBOQmIyUXliR3RrUjJkblVHb3daMHBIU25CYWVURnJXbGhPY21SSE9YZExWSFJqWW14NGRVeDVPR2RNVXpCMFRGTXdkRXhUTUhSTVV6Qm5WVVZHUlZKRmJFOVNNVTEyVkZWR1UxSXdiRTlWZVVGMFRGTXdkRXhUTUhSTVV6QjBURlo0ZFVwSE1XaGpiV1J3WW1reGRHSXlTbkJpUjFVMlNVUkpkMk5JWnpkWVJ6UnJZbGRHZVZveWJIVk1XRkpvV1cxNGJHUkViMmROZWxKM1pVUjBZMkpwVW5SWldFcHVZVmMwZEZwSFZucGhNMUoyWTBSdlowNTZXbmRsUkhSalltbFNkRmxZU201aFZ6UjBXVzFzYmt4WFVteGpNblF3WWpOQk5rbEVSVEJrYm1NM1NXbDNhVkZIYkhSalJ6bDVaRU5DWTBsdU5XcGpNMDEyWkcxR2VXRlhSbWxpUjFaNlRHNU9hbU16VG1OSmFuUmpZbXg0ZFV4dGFHeFpWMUpzWTJsQ04xaEhOR2RKUjFKd1l6TkNjMWxZYXpaSlIxcHpXbGhuTjFoSE5HZEpSMFp6WVZka2RVeFhiREJhVnpGNlQybENhbHBYTlRCYVdFazNXRWMwWjBsSVFtaGFSMUp3WW0xamRHSkhWbTFrUkc5blNrY3hhR050WkhCaWFURjBZakpLY0dKSFZUZFlSelJuU1VoQ2FGcEhVbkJpYldOMFkyMXNibUZJVVRaSlExSjBXVmhLYm1GWE5IUmlWemxwWVZkNGJFOHhlSFZZUnpSblNVVkNkRnBYVW5CWlUwRnZURk14ZEdGWE5IUmFSMVo2WVROU2RtTkRhMmRsTVhoMVNVTkJaMGxJUW1oYVIxSndZbTFqZEdKSFZtMWtSRzluU2tjeGFHTnRaSEJpYVRGcldsaE9jbVJIT1hkUE1YaDFTVU5CWjBsSVFtaGFSMUp3WW0xamRHTnRiRzVoU0ZFMlNVTlNkRmxZU201aFZ6UjBXa2RXZW1FelVuWmpSSFJqWW1sQloyWldlSFZZUnpSblNVTlpOazl0U214YWJUbDVXbE5DTjFoSE5HZEpRMEZuV1RJNWRXUkhWblZrUkc5blNqRktiRmxYVGpCSlJrSjVZakp3YkZrelVXNVBNWGgxU1VOQlowbEhVbkJqTTBKeldWaHJOa2xIU25OaU1rNXlUekY0ZFVsRFFXZEpSMXAyWW01UmRHTXliRFphVkc5blRXcFNkMlZFZEdOaWFVRm5TVU5DYzJGWE5XeE1WMmhzWVZka2IyUkViMmROZWtaM1pVUjBZMkpwUVdkSlEwSnRZakkxTUV4WVpHeGhWMlJ2WkVSdlowNTZRWGRQTVhoMVNVTkJaMGxIVG5aaVJ6bDVUMmxCYWsxRVFYZFBNWGgxU1VOQlowbEhNV2hqYldSd1lta3hlV0ZYWkc5a1JHOW5XVmhXTUdKNmRHTmliSGgxU1VOQlowbEZRblJhVjFKd1dWTkJiMHhUTVhSaFZ6UjBXa2RXZW1FelVuWmpRMnRuWlRGNGRVbERRV2RKUTBGblRIbHZaekJNTTFGelEwUlJkblJIUXpCWlJGRjBaRU16TUV4eVVYUlRRbUpOVkVGNVRrTjNaMDFVVVhkTlJqQm5NRmxFVVhOT1Eza3dURE5SZG5SRE9EQk1XRkpuVGtNNU1FdzBaekJaVUZGemRFTXhNRXgyVVhWT1IwZ3dUR3BSYzNSRGR6QlpURkpxUTBSU1owNURkekJNWmxGMlRrTXhNRmxCWnpCWmFsSm5Ua00wTUZsVVVtZDBRM2RKVGtkQ1NVUkpNR05JWjJjd1RGUlJkbWxCZWs1dVFqUkpRMjkyV0VjMFowbERRV2RKUTBKdFlqSTFNRXhZVG5CbGJWVTJTVWhPYWxsWGVHeExRMUpyV2xoT2NtUkhPWGRNUTBGcldXMXNia3hYVW14ak1uUXdZak5CYzBsRVNUQmpTR2R6U1VSTk1tTklaM05KUkVWM1RVaGFNMHRVZEdOaWFVRm5TVU5DT1ZoSE5HZEpTREZqWW00eFkySnNlSFZNYldoc1dWZFNiR05wTVhWWldGbG5aVEY0ZFVsRFFtdGhXRTUzWWtkR05VOXBRbTFpUjFZMFR6RjRkVWxEUW1oaVIyeHVZbWt4Y0dSSFZuUmplbTluV1RKV2RXUkhWbmxQTVhoMVNVTkNhVmxYVG5KYU0wcDJaRmMxYTB4WFRuWmlSemw1VDJsQmFscHRXbTFQTVhoMVpsWjRkVmhITkhWaFIxWm9Xa2RXZVV4WE5XaGthVEZ6WVZjMWNrbElkR05pYVVGbldtMDVkV1JETVhwaFdIQnNUMmxCZUUwelFqUlBNWGgxU1VOQ2JXSXlOVEJNV0dSc1lWZGtiMlJFYjJkT2VrRjNUekY0ZFVsRFFuTmhWelZzVEZkb2JHRlhaRzlrUkc5blRWUm9kMlZFZEdOaWFVRm5Za2RXTUdSSFZubE1XRTUzV1ZkT2NHSnRZelpKUXpSM1RsZFdkRTh4ZUhWSlEwSXdXbGhvTUV4WVVubFpWelY2V20wNWVXSlViMmRrV0VKM1dsaEthbGxZVG14UE1YaDFTVU5DYW1JeWVIWmphbTluWTIxa2FWbFRaek5QVTNkblRucHJjMGxFWXpWTVEwRjFUbE5yTjFoSE5HZEpTRko1V1ZjMWVtRllVbkJpTWpRMlNVTTBlbU42ZEdOaWFVRm5ZMGRHYTFwSGJIVmFlbTluVFdwb2QyVkRRWGRKUkVsNlkwaG5OMWhITkdkSlIwcDJZMjFTYkdOcE1XbGlNMUl3WWpJd05rbEVUbmRsUTBKNllqSjRjRnBEUWpCamJVWjFZek5DYUdOdFZuVmtSSFJqWW14NGRVbERRVzFNYlVacVpFZHNNbHBUUWpkWVJ6Um5TVU5CWjFreU9YTmlNMGsyU1VOTk1GcHFVbTFPUjFrM1dFYzBaMGxEUVdkWmJUbDVXa2RXZVV4WFRuWmlSemw1VDJsQmFrMHlSbXBOVkZsNVR6RjRkVWxEUWpsWVJ6VmpZbWxCWjBwcWNHOWlNMXBzWTJsQ04xaEhOR2RKUTBGbldUSTVjMkl6U1RaSlEwMTNUVVJCTjFoSE5HZEpTREZqWW14NGRVbERRVzFKUTNOblNtbENOMWhITkdkSlEwRm5ZbGRHZVZveWJIVk1WM2hzV201Uk5rbEVUVEpqU0djM1dFYzBaMGxJTVdOaWJqQnBXRmd3UFNBcUwxeHVMeW9nTFMwdExTMHRMUzB0TFMwZzBLalFvTkNZMEtUUW90Q3JJQzB0TFMwdExTMHRMUzB0S2k5Y2JpOHFJQzB0TFMwdExTMHRMUzB0SU5DbTBKTFFsZENpMEpBZ0xTMHRMUzB0TFMwdExTMHFMMXh1THlvZ0xTMHRMUzB0TFMwdExTMGcwS0RRa05DWDBLRFFsZENvMEpYUW5kQ1kwSzhnMEszUW10Q2cwSkRRbmRDUUlDMHRMUzB0TFMwdExTMHRLaTljYmk4cUlDMHRMUzB0TFMwdExTMHRJRkJCUkVSSlRrZFRMMDFCVWtkSlRsTWdMUzB0TFMwdExTMHRMUzBxTDF4dUxtaGxZV1JsY2kweGEzbGhJSHRjYmlBZ1pHbHpjR3hoZVRvZ0xXMXpMV1pzWlhoaWIzZzdYRzRnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUMxdGN5MW1iR1Y0TFdGc2FXZHVPaUJqWlc1MFpYSTdYRzRnSUdGc2FXZHVMV2wwWlcxek9pQmpaVzUwWlhJN1hHNGdJSEJoWkdScGJtY3RiR1ZtZERvZ01qQndlRHRjYmlBZ2NHRmtaR2x1WnkxeWFXZG9kRG9nTWpCd2VGeHVmVnh1TG1obFlXUmxjaTB4YTNsaE9qcGlaV1p2Y21VZ2UxeHVJQ0JqYjI1MFpXNTBPaUFuVW1WaFkzUWdVSEp2YW1WamRDYzdYRzRnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1SUNCbWIyNTBMWE5wZW1VNklERXVOWEpsYlR0Y2JpQWdiR2x1WlMxb1pXbG5hSFE2SURFdU1qazdYRzRnSUdadmJuUXRkMlZwWjJoME9pQTNNREE3WEc0Z0lHTnZiRzl5T2lBak1EQXdPMXh1SUNCdFlYSm5hVzR0Y21sbmFIUTZJR0YxZEc5Y2JuMWNiaTVvWldGa1pYSXRibUYyTFRKNlJsUWdlMXh1SUNCa2FYTndiR0Y1T2lBdGJYTXRabXhsZUdKdmVEdGNiaUFnWkdsemNHeGhlVG9nWm14bGVEdGNiaUFnTFcxekxXWnNaWGd0WVd4cFoyNDZJR05sYm5SbGNqdGNiaUFnWVd4cFoyNHRhWFJsYlhNNklHTmxiblJsY2p0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dJMlptWmp0Y2JuMWNiaTVvWldGa1pYSXRibUYyTFd4cGJtc3RNMHRRTVNCN1hHNGdJR1p2Ym5RdGMybDZaVG9nTUM0NE1USTFjbVZ0TzF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nTnpBd08xeHVJQ0JzYVc1bExXaGxhV2RvZERvZ01TNHpPRHRjYmlBZ2JHVjBkR1Z5TFhOd1lXTnBibWM2SUM0d05XVnRPMXh1SUNCMFpYaDBMWFJ5WVc1elptOXliVG9nZFhCd1pYSmpZWE5sTzF4dUlDQmpiMnh2Y2pvZ2NtZGlZU2czT1N3Z056a3NJRGM1TENBdU5TazdYRzRnSUMxM1pXSnJhWFF0ZEhKaGJuTnBkR2x2YmpvZ0xqTnpPMXh1SUNCMGNtRnVjMmwwYVc5dU9pQXVNM003WEc0Z0lIQmhaR1JwYm1jNklESTRjSGdnTUNBeU0zQjRPMXh1SUNCaWIzSmtaWEl0WW05MGRHOXRPaUF6Y0hnZ2MyOXNhV1FnZEhKaGJuTndZWEpsYm5SY2JuMWNiaTVvWldGa1pYSXRibUYyTFd4cGJtc3RNMHRRTVM1aFkzUnBkbVV0TTFSVk55QjdYRzRnSUdOdmJHOXlPaUFqTkdZMFpqUm1PMXh1SUNCaWIzSmtaWEl0WTI5c2IzSTZJQ016WVdNeE5qSTdYRzU5WEc0dWFHVmhaR1Z5TFc1aGRpMXNhVzVyTFROTFVERTZhRzkyWlhJZ2UxeHVJQ0JqYjJ4dmNqb2dJekF3TUR0Y2JuMWNiaTVvWldGa1pYSXRibUYyTFd4cGJtc3RNMHRRTVNBcklDNW9aV0ZrWlhJdGJtRjJMV3hwYm1zdE0wdFFNU0I3WEc0Z0lHMWhjbWRwYmkxc1pXWjBPaUF6Tm5CNE8xeHVmVnh1UUcxbFpHbGhJQ2h0YVc0dGQybGtkR2c2SURFd01qUndlQ2tnZTF4dUlDQXVhR1ZoWkdWeUxURnJlV0VnZTF4dUlDQWdJSEJoWkdScGJtY3RiR1ZtZERvZ056WndlRHRjYmlBZ0lDQndZV1JrYVc1bkxYSnBaMmgwT2lBM05uQjRYRzRnSUgxY2JpQWdMbWhsWVdSbGNpMHhhM2xoT2pwaVpXWnZjbVVnZTF4dUlDQWdJQzhxSU5DOTBMQWcwTDdSZ3RHQTBMWFF0OUM2MExVZ1d6RXdNalFzSURFME1EQmRJTkdBMExEUXN0QzkwTDdRdk5DMTBZRFF2ZEMrSU5HRDBMTFF0ZEM3MExqUmg5QzQwTExRc05HQzBZd2cwWURRc05DMzBMelF0ZEdBSU5HSTBZRFF1TkdFMFlMUXNDRFJnU0F5TkhCNElOQzAwTDRnTXpad2VDQXFMMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dZMkZzWXlnb0tESXVNalVnTFNBeExqVXBJQ29nS0NneE1EQjJkeWtnTFNBMk5ISmxiU2tnTHlBb09UQWdMU0EyTkNrcElDc2dNUzQxY21WdEtWeHVJQ0I5WEc1OVhHNHZLaU1nYzI5MWNtTmxUV0Z3Y0dsdVoxVlNURDFrWVhSaE9tRndjR3hwWTJGMGFXOXVMMnB6YjI0N1ltRnpaVFkwTEdWNVNqSmFXRXA2WVZjNWRVbHFiM3BNUTBwNllqTldlVmt5Vm5wSmFuQmlTV2swZFV3elRubFplVGxxWXpOTmRtUnRSbmxoVjBacFlrZFdla3h1VG1wak0wMXBURU5KZFV4cE9YcGpiVTEyWVc1TmRsa3lPWFJqUnpsMVdsYzFNR041T1c5YVYwWnJXbGhKZG1GWE5XdGFXR2QxWXpKT2VtTjVTbVJNUTBwMVdWY3hiR041U1RaWE1UQnpTVzB4YUdOSVFuQmliV1I2U1dwdmFWRlZSa0pSVTNoMFVUQkdRbUZWVFRkUlZVWlVZV3ROYzJFd1RrSlJWMlJFVHpCR1FsbFhhRVJNUkdoRVVWVkZNRkY2ZEVKUlYyeERUbFZOYzA1clRrSlJWRXBFVHpCR1JHTnJUWHBSZW5SR1VWVk9Sa3hJUmtOUlZVWnFUekJXUWxGWFVYTlpNRVpDV1hwMFJsRlZUbXRNU0ZaRFVWVkdkbEZxZEU1UlZVWjNVV2w0ZGxGclJrSmlNRWszVWxWR1JHTkZTWE5pVlVwQ1VWUmFRMDh3VmtKUmVtUkRURWN4UTFGVlJUUlJhblJFVVZoR1Ewd3dTVGRSVlVaclVYcDBTbEZWVGtaTVNHeERVVlZHTlZGcWRFcFJWVTQyVVdsNGJGRlZSbXhQTUd4Q1VUSlpjMkV3U2tKUlYyUkRUekJzUWxFeWFFTk1SM1JEVVZWR2NsRnFkRXBSVlU1elVXbDRjRkZyUmtKaFZVazNVMVZHUkdGclNYTlhWVVpDVjFSMFNsRlZUbUZNUjNSRFVWVkdkRkZxZEVoUlZURjNVV3AwUWxGVlpFbFBNRlpDVVRCVmMyTlZTa0pSVjAwM1VsVkdRbHBEZUdwUlZVWnFUekJXUWxFeVVYTmtWVXBDVVZjNVEwOHdNVUpSV0VKRFRFYzVRMUZWUm5aUmFuUkdVVlZPZDFGcGVERlJhMFpDWkZWSk4xRXdSa1JsUlVrM1VWVkdSbEpFZEVaUlZVNUdURWhHUTFGVlJtNVJhblJHVVZWT2IxRnBlSEJSYTBaQ1lWVkpOMUpWUmtSaGEwbHpZVEJLUWxGWGRFTlBNRlpDVVRKNFEweElUa05SVlVaNlVXcDBSbEZWVGpCUmFYZDNVV3RHUWsxRlNUZFNWVVpFVFZWSmMwNUZTa0pSVkZKRFR6QldRbEY2VmtOTVNHUkRVVlZHYmxGcWRFWlJWVVp2VVdsNGJsRnJSa0phTUVrM1VsVkdSR0ZGU1hOalZVcENVVmhHUTA4d1ZrSlJNMHBEVEVjNVJGRlZSbmhSZW5SRVVWZE9NRkY2ZEVKUlZuQkVUekJzUWxFd1ZYTmFWVVpDV2xSMFNsRlZUbTFNU0U1RFVWVkdlbEZxZEVoUlZVNHlVV3AwUWxGVlZrVlBNR3hDVVRCVmMxZFZSa0pYVkhSSVVWVk9hVTh3UmtKU1ZWRTNVMVZHUkZKVGVISlJhMFpDWVRCSk4xSXdSa1JpYTBrM1VWVkdjVkpGVVRkUlZVWlBVbXAwU2xGVk9VcE1SekZEVVZWRk5GRnFkRXBSVlUwMVVXbDRkRkZyUmtKTE1FazNVVEJHY0ZGdGVFUlBNRVpDV2tWTk4xUlZSbFpUVTNod1VtdEdRbUZWV1RkVVZVWkVZV3RaYzJRd1ZrSlJWRkpGVHpCa1FsSlRPVVZQTUdSQ1dtdEZhVXhEU20xaFYzaHNTV3B2YVV4cE5IWmpNMHBxVERKd2Vrd3lUblppV0VKMlltMVdkV1JJVFhaaFIxWm9Xa2RXZVV3eWJIVmFSMVkwVEc1T2FtTXpUV2xNUTBwNllqTldlVmt5Vm5wUk1qbDFaRWRXZFdSRFNUWlhlVWwyVEhsQmRFeFRNSFJNVXpCMFRGTXdkRXhUUkZGeFRrTm5NRXBxVVhCT1Eya3dTM05uVEZNd2RFeFRNSFJNVXpCMFRGTXhZMkpwVWs1a1dFNXNZakZPYUdKdVRUWkpRMlJPWkZoT2JHSjVRbFJaVnpWNlNubDNaMk15Um5WamVURjZXbGhLY0ZwcWRHTmlhVkpIWWpJMU1GWkhhSEJpYW05blRWUkJkMDh4ZUhWS1JWcDJZbTVTVFdGWFpHOWtSRzluVFhwQmQwOHhlSFZLUlZwMlltNVNVMXBYWkRGaVIwWjVUMmxCTUUxRVFUZFlSelJyVW0wNWRXUkZNV3hhUjJ3eFlsUnZaMDVVUVhkUE1YaDFTa1ZhZG1KdVVrTmlNbmhyVDJsQk0wMUVRVGRZUnpSclVtMDVkV1JGU25OWlYwNXlUMmxCTlUxRVFUZFlSelZqWW1rNGRrbERNSFJNVXpCMFRGTXdkRXhUTUhSSlRrTnRNRXBNVVd4a1Eya3dTa0ZuVEZNd2RFeFRNSFJNVXpCMFRGTXhZMkpwVW1waU1uaDJZMmt4TTJGSGJEQmFWRzluU1RKYWJWcHRXbTFhYW5SalltbFNhbUl5ZUhaamFURnBZa2RHYW1GNU1XcGlSMFo2WXpKc2FrOXBRV3BOUkVGM1RVUkJkMDh4ZUhWS1IwNTJZa2M1ZVV4WFNuTlpWMDV5VEZkYWFGcEhWbXRQYVVGcVRYcHJlbHBFVFRWUE1YaDFTa2RPZG1KSE9YbE1WMHB6V1ZkT2NreFhlSEJhTW1nd1QybEJhazVIV1RCYWFsSnRUekY0ZFVwSFRuWmlSemw1VEZka2VWbFlhelpKUTA1b1drZEdhMWxYVVRkWVJ6UnJXVEk1YzJJelNYUmFNMHBzV2xjME5rbERUWGxOYlVVMFRrZEZOMWhITkd0Wk1qbHpZak5KZEZvelNteGFWelIwWWtkc2JtRklVVFpKUTAxNldWZE5lRTVxU1RkWVJ6UnJXVEk1YzJJelNYUmpSMngxWVhwdlowa3lXbTFPYlZreFdtcDBZMkpwVW1waU1uaDJZMmt4Ym1JeWVHdFBhVUZxV20xYWEwOUVaR2xQTVhoMVNrZE9kbUpIT1hsTVYwcHpaRmRWTmtsRFRUSmFiVWwzV2tkTk4xaEhOR3RaTWpsellqTkpkR05JVm5salIzaHNUMmxCYWxwRVFUTk5Na2t6VHpGNGRWaEhOSFpNZVVGMFRGTXdkRXhUTUhSTVV6QjBURk5FVVc5T1ExRXdTbVpSYjA1RFZqQkxhbEZzWkVOa01FcHFVWEo1UkZGeVpFTmhNRXRFVVd0T1EyUXdTa0ZuVEZNd2RFeFRNSFJNVXpCMFRGTXhZMkpwVW5SaU1rcHdZa2RWTmtsRVRYbE5TRUkwVHpGNGRVcElVbWhaYlhoc1pFUnZaMDU2V1RSalNHYzNXRWMwYTFwSFZucGhNMUoyWTBSdlowMVVRWGxPU0VJMFR6RjRkVXBIU25CYWVURnJXbGhPY21SSE9YZFBhVUY0VGtSUmQyTklaemRZUnpWalltdENhbVJZVGpCaU1qQjBZbGRXYTJGWFJXZE1VekV3V1ZkS2MxcFlVV2RMUTFJd1dWZEtjMXBZVVdkUVJEQm5aREpzYTJSSFoyZFFRMEZyV2tkV2VtRXpVblpqUTJzM1dFYzFRVmt6Vm5wa1J6bDBURmN4YkZwSGJHaEpRekIwWWxkc2RVeFlVbWhaYlhoc1pFTkJiMlF5Ykd0a1IyZG5VR293WjBwSVVtaFpiWGhzWkVOck4xaEhOVUZaTTFaNlpFYzVkRXhYTVd4YVIyeG9TVU13ZEdKWFJqUk1XRkpvV1cxNGJHUkRRVzlrTW14clpFZG5aMUJEUVd0a1IwWnBZa2RXTUV0VWRHTmliSGgxVVVkT01XTXpVblppVXpGMFdsZFNjRmxUUVhSTVYxSnNZekowTUdJelFXZExRMUpyV2xoT2NtUkhPWGRKUkhjNVNVaGtjRnBJVW05SlJIZG5Ta2RLY0ZwNU1XdGFXRTV5WkVjNWQwdFVkR05pYTBKcVpGaE9NR0l5TUhSaVYxWnJZVmRGWjB4VE1YUmhWelIwV2tkV2VtRXpVblpqUTBGdlpESnNhMlJIWjJkUWFqQm5Ta2RTYkdNeWREQmlNMEZ3VHpGNGRWRkhUakZqTTFKMllsTXhkRnBYVW5CWlUwRjBURmN4YUdWRE1XdGFXRTV5WkVjNWQwbERhRE5oVjFJd1lVTkJPRWxEVW10YVdFNXlaRWM1ZDB0VWRHTmliSGgxVVVkT01XTXpVblppVXpGMFdsZFNjRmxUUVhSTVZ6RndZbWt4YVdGWFkzUmFSMVo2WVROU2RtTkRRVzlrTW14clpFZG5aMUJFTUdkS1IwcHdXbmt4YTFwWVRuSmtSemwzUzFSMFkySnJRbXBrV0U0d1lqSXdkR0pYVm10aFYwVm5URk14YVdGWFkzUmFSMVo2WVROU2RtTkRRVzlrTW14clpFZG5aMUJxTUdkS1IwcHdXbmt4YTFwWVRuSmtSemwzUzFSMFkySnNlSFZNZVRoblRGTXdkRXhUTUhSTVV6QjBURk13WjFWRlJrVlNSV3hQVWpGTmRsUlZSbE5TTUd4UFZYbEJkRXhUTUhSTVV6QjBURk13ZEV4V2VIVktSekZvWTIxa2NHSnBNWFJpTWtwd1lrZFZOa2xFU1hkalNHYzNXRWMwYTJKWFJubGFNbXgxVEZoU2FGbHRlR3hrUkc5blRYcFNkMlZFZEdOaWFWSjBXVmhLYm1GWE5IUmFSMVo2WVROU2RtTkViMmRPZWxwM1pVUjBZMkpwVW5SWldFcHVZVmMwZEZsdGJHNU1WMUpzWXpKME1HSXpRVFpKUkVVd1pHNWpOMGxwZDJsUlIyeDBZMGM1ZVdSRFFtTkpialZxWXpOTmRtUnRSbmxoVjBacFlrZFdla3h1VG1wak0wNWpTV3AwWTJKc2VIVk1iV2hzV1ZkU2JHTnBRamRZUnpSblNVZFNjR016UW5OWldHczJTVWRhYzFwWVp6ZFlSelJuU1VkR2MyRlhaSFZNVjJ3d1dsY3hlazlwUW1wYVZ6VXdXbGhKTjFoSE5HZEpTRUpvV2tkU2NHSnRZM1JpUjFadFpFUnZaMHBITVdoamJXUndZbWt4ZEdJeVNuQmlSMVUzV0VjMFowbElRbWhhUjFKd1ltMWpkR050Ykc1aFNGRTJTVU5TZEZsWVNtNWhWelIwWWxjNWFXRlhlR3hQTVhoMVdFYzBaMGxGUW5SYVYxSndXVk5CYjB4VE1YUmhWelIwV2tkV2VtRXpVblpqUTJ0blpURjRkVWxEUVdkSlNFSm9Xa2RTY0dKdFkzUmlSMVp0WkVSdlowcEhNV2hqYldSd1lta3hhMXBZVG5Ka1J6bDNUekY0ZFVsRFFXZEpTRUpvV2tkU2NHSnRZM1JqYld4dVlVaFJOa2xEVW5SWldFcHVZVmMwZEZwSFZucGhNMUoyWTBSMFkySnBRV2RtVm5oMVdFYzBaMGxEV1RaUGJVcHNXbTA1ZVZwVFFqZFlSelJuU1VOQloxa3lPWFZrUjFaMVpFUnZaMG94U214WlYwNHdTVVpDZVdJeWNHeFpNMUZ1VHpGNGRVbERRV2RKUjFKd1l6TkNjMWxZYXpaSlIwcHpZakpPY2s4eGVIVkpRMEZuU1VkYWRtSnVVWFJqTW13MldsUnZaMDFxVW5kbFJIUmpZbWxCWjBsRFFuTmhWelZzVEZkb2JHRlhaRzlrUkc5blRYcEdkMlZFZEdOaWFVRm5TVU5DYldJeU5UQk1XR1JzWVZka2IyUkViMmRPZWtGM1R6RjRkVWxEUVdkSlIwNTJZa2M1ZVU5cFFXcE5SRUYzVHpGNGRVbERRV2RKUnpGb1kyMWtjR0pwTVhsaFYyUnZaRVJ2WjFsWVZqQmllblJqWW14NGRVbERRV2RKUlVKMFdsZFNjRmxUUVc5TVV6RjBZVmMwZEZwSFZucGhNMUoyWTBOcloyVXhlSFZKUTBGblNVTkJaMHg1YjJjd1RETlJjME5FVVhaMFIwTXdXVVJSZEdSRE16Qk1jbEYwVTBKaVRWUkJlVTVEZDJkTlZGRjNUVVl3WnpCWlJGRnpUa041TUV3elVYWjBRemd3VEZoU1owNURPVEJNTkdjd1dWQlJjM1JETVRCTWRsRjFUa2RJTUV4cVVYTjBRM2N3V1V4U2FrTkVVbWRPUTNjd1RHWlJkazVETVRCWlFXY3dXV3BTWjA1RE5EQlpWRkpuZEVOM1NVNUhRa2xFU1RCalNHZG5NRXhVVVhacFFYcE9ia0kwU1VOdmRsaEhOR2RKUTBGblNVTkNiV0l5TlRCTVdFNXdaVzFWTmtsSVRtcFpWM2hzUzBOU2ExcFlUbkprUnpsM1RFTkJhMWx0Ykc1TVYxSnNZekowTUdJelFYTkpSRWt3WTBobmMwbEVUVEpqU0dkelNVUkZkMDFJV2pOTFZIUmpZbWxCWjBsRFFqbFlSelJuU1VneFkySnVNV05pYkhoMVRHMW9iRmxYVW14amFURjFXVmhaWjJVeGVIVkpRMEpyWVZoT2QySkhSalZQYVVKdFlrZFdORTh4ZUhWSlEwSm9Za2RzYm1KcE1YQmtSMVowWTNwdloxa3lWblZrUjFaNVR6RjRkVWxEUW1sWlYwNXlXak5LZG1SWE5XdE1WMDUyWWtjNWVVOXBRV3BhYlZwdFR6RjRkV1pXZUhWWVJ6UjFZVWRXYUZwSFZubE1WelZvWkdreGMyRlhOWEpKU0hSalltbEJaMXB0T1hWa1F6RjZZVmh3YkU5cFFYaE5NMEkwVHpGNGRVbERRbTFpTWpVd1RGaGtiR0ZYWkc5a1JHOW5UbnBCZDA4eGVIVkpRMEp6WVZjMWJFeFhhR3hoVjJSdlpFUnZaMDFVYUhkbFJIUmpZbWxCWjJKSFZqQmtSMVo1VEZoT2QxbFhUbkJpYldNMlNVTTBkMDVYVm5SUE1YaDFTVU5DTUZwWWFEQk1XRko1V1ZjMWVscHRPWGxpVkc5blpGaENkMXBZU21wWldFNXNUekY0ZFVsRFFtcGlNbmgyWTJwdloyTnRaR2xaVTJjelQxTjNaMDU2YTNOSlJHTTFURU5CZFU1VGF6ZFlSelJuU1VoU2VWbFhOWHBoV0ZKd1lqSTBOa2xETkhwamVuUmpZbWxCWjJOSFJtdGFSMngxV25wdlowMXFhSGRsUTBGM1NVUkplbU5JWnpkWVJ6Um5TVWRLZG1OdFVteGphVEZwWWpOU01HSXlNRFpKUkU1M1pVTkNlbUl5ZUhCYVEwSXdZMjFHZFdNelFtaGpiVloxWkVSMFkySnNlSFZKUTBGdFRHMUdhbVJIYkRKYVUwSTNXRWMwWjBsRFFXZFpNamx6WWpOSk5rbERUVEJhYWxKdFRrZFpOMWhITkdkSlEwRm5XVzA1ZVZwSFZubE1WMDUyWWtjNWVVOXBRV3BOTWtacVRWUlplVTh4ZUhWSlEwSTVXRWMxWTJKcFFXZEthbkJ2WWpOYWJHTnBRamRZUnpSblNVTkJaMWt5T1hOaU0wazJTVU5OZDAxRVFUZFlSelJuU1VneFkySnNlSFZKUTBGdFNVTnpaMHBwUWpkWVJ6Um5TVU5CWjJKWFJubGFNbXgxVEZkNGJGcHVVVFpKUkUweVkwaG5OMWhITkdkSlNERmpZbTR3YVZoWU1EMGdLaThpWFgwPSAqLyJdfQ== */